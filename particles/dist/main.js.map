{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap b6f7eec739572ac0fec8","webpack:///./src/app.js","webpack:///./src/Main.elm","webpack:///./src/index.html","webpack:///./src/main.css"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Elm","embed","Main","document","getElementById","F2","fun","wrapper","a","b","arity","func","F3","F4","d","F5","e","F6","f","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","A7","A8","Native","Basics","make","localRuntime","div","rem","mod","Error","r","logBase","base","n","Math","log","negate","abs","min","Utils","cmp","max","clamp","lo","hi","xor","not","isInfinite","Infinity","truncate","degrees","PI","turns","t","fromPolar","point","_0","_1","Tuple2","cos","sin","toPolar","x","y","sqrt","atan2","values","pi","E","tan","acos","asin","atan","compare","ceiling","ceil","floor","round","toFloat","isNaN","Port","inbound","name","type","converter","argsTracker","split","join","arg","used","jsToElm","value","inboundSignal","send","jsValue","elmValue","setTimeout","notify","signal","initialValue","NS","Signal","input","ports","JSON","stringify","message","outbound","outboundSignal","subscribe","handler","subscribers","push","unsubscribe","pop","indexOf","len","length","output","fullscreen","init","display","container","args","moduleToReplace","v","updateInProgress","timestep","timer","now","inputs","delay","window","addListener","relevantInputs","domNode","eventName","addEventListener","listener","listeners","swap","newModule","removeListeners","createElement","newElm","elm","dispose","programStart","Date","node","isFullscreen","Display","FULLSCREEN","isEmbed","COMPONENT","isWorker","NONE","Module","checkInputs","error","appendChild","errorNode","console","graphicsNode","initGraphics","rootNode","kids","trimDeadNodes","filterListeners","addReceivers","hotSwap","code","lines","createTextNode","replace","loop","j","removeEventListener","title","redirect","location","isOutput","liveKids","kid","domUpdate","newScene","scheduledScene","state","NO_REQUEST","_requestAnimationFrame","drawCallback","PENDING_REQUEST","EXTRA_REQUEST","draw","update","firstChild","savedScene","Window","resizeIfNeeded","signalGraph","main","constant","render","initialScene","ctor","Element","Graphics","updateAndReplace","VirtualDom","removeChild","requestAnimationFrame","cb","renderer","from","to","similar","nodeOld","nodeNew","canSwap","depthFirstTraversals","parentNode","replaceChild","queueOld","queueNew","slice","seen","concat","body","tag","tagName","worker","eq","l","stack","front","Object","keys","ord","EQ","LT","GT","isChar","toString","err","_2","_3","_4","_5","chr","String","txt","str","text","guid","_","count","oldRecord","updatedFields","newRecord","key","getXY","posx","posy","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","rect","getBoundingClientRect","relx","left","rely","top","clientLeft","clientTop","Cons","hd","tl","list","arr","out","Nil","range","append","xs","ys","root","curr","crash","moduleName","region","regionToString","crashCase","start","line","end","badPort","expected","received","formatValue","undefined","addSlashes","s","_Array","Dict","List","Tuple0","substring","k","Array","toList","map","parenless","_elm","$Native$Basics","$Native$Utils","_op","uncurry","_p0","_p1","curry","flip","snd","_p2","_p3","fst","_p4","_p5","always","_p6","identity","or","and","ge","le","gt","lt","neq","exp","floatDiv","mul","sub","add","radians","Maybe","withDefault","$default","maybe","Nothing","oneOf","maybes","_v3","andThen","maybeValue","callback","Just","map2","ma","mb","map3","mc","_p7","map4","md","_p8","map5","me","_p9","toArray","foldl","acc","foldr","fromArray","zs","ws","vs","sortBy","sort","sortWith","take","cons","_U","$Basics","$Maybe","$Native$List","drop","_v1","_v2","any","isOkay","_v4","_v5","all","sum","numbers","product","maximum","minimum","indexedMap","member","isEmpty","tail","head","filter","pred","conditionalCons","xs$","maybeCons","mx","filterMap","reverse","scanl","scan1","accAcc","_p10","_p11","lists","concatMap","partition","step","_p12","_p13","_p15","_p14","unzip","pairs","_p17","_p16","_p18","_p19","intersperse","sep","_p20","rest","spersed","repeatHelp","result","_v18","_v19","_v20","repeat","Transform2D","matrix","m11","m12","m21","m22","dx","dy","A","rotation","multiply","mdx","mdy","n11","n12","n21","n22","ndx","ndy","Float32Array","this","$Native$Transform2D","translation","scale","scaleX","scaleY","Collage","setStrokeStyle","ctx","style","lineWidth","width","cap","lineCap","lineJoin","miterLimit","strokeStyle","Color","toCss","color","setFillStyle","redo","sty","fillStyle","texture","gradient","trace","path","points","moveTo","lineTo","closed","dashing","customLineHelp","stroke","pattern","x0","y0","x1","y1","remaining","pindex","plen","segmentLength","drawLine","src","img","Image","onload","createPattern","grad","stops","p0","p1","createLinearGradient","p2","createRadialGradient","stop","addColorStop","drawShape","fill","fillText","drawText","strokeText","setLineDash","canvasDrawFn","textChunks","chunkText","defaultContext","totalWidth","maxHeight","numChunks","chunk","font","metrics","measureText","height","toFont","props","context","leftChunks","rightChunks","newContext","freshContext","font-style","font-variant","font-weight","font-size","font-family","drawImage","form","w","pos","srcX","srcY","srcW","srcH","destX","destY","destW","destH","renderForm","save","theta","translate","rotate","alpha","globalAlpha","beginPath","restore","formToMatrix","Transform","makeTransform","matrices","stepperHelp","peekNext","next","formStepper","forms","ps","formType","shift","alphas","unshift","transform","transforms","makeCanvas","canvas","NativeElement","createNode","position","ratio","devicePixelRatio","model","overflow","nodeStepper","nextContext","getContext","addElement","elem","oldElement","opacity","addTransform","insertBefore","clearRest","childNodes","nodes","collage","newElement","format","colors","Radial","radial","Linear","linear","fmod","integer","rgbToHsl","red","green","blue","cMax","cMin","lightness","saturation","hue","hslToRgb","hue$","chroma","toRgb","toHsl","HSLA","hsla","hsl","complement","grayscale","greyscale","RGBA","rgba","rgb","lightRed","darkRed","lightOrange","orange","darkOrange","lightYellow","yellow","darkYellow","lightGreen","darkGreen","lightBlue","darkBlue","lightPurple","purple","darkPurple","lightBrown","brown","darkBrown","black","white","lightGrey","grey","darkGrey","lightGray","gray","darkGray","lightCharcoal","charcoal","darkCharcoal","elementPrim","element","href","hover","click","setProps","adjustWidth","adjustHeight","backgroundColor","addHover","addClick","anchor","pointerEvents","trigger","ev","elm_click_handler","stopPropagation","elm_click_trigger","removeClick","over","evt","elm_hover_count","elm_hover_handler","contains","toElement","relatedTarget","elm_hover_over","elm_hover_out","removeHover","image","plainImage","fittedImage","croppedImage","tiledImage","backgroundImage","background","webkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","sw","sh","marginLeft","marginTop","goOut","goDown","goRight","styleFloat","cssFloat","needsReversal","dir","flow","elist","array","goDir","directionTable","toPos","setPos","wrappedElement","margin","horizontal","right","removeProperty","vertical","bottom","msTransform","MozTransform","webkitTransform","OTransform","rawHtml","html","align","innerHTML","visibility","textAlign","makeElement","newNode","wrappedCurrent","wrappedNext","updateProps","nextE","currE","valueOf","nexts","currs","toReverse","subNode","newSubNode","updatedNode","nextProps","currProps","nextColor","removed","block","raw","Text","renderHtml","htmlHeight","markdown","realHtmlHeight","temp","getComputedStyle","getPropertyValue","elementType","padding","DUp","DDown","DLeft","DRight","DIn","DOut","fromString","addMeta","field","newProps","newText","metaKeys","val","toTypefaces","typefaces","typeface","toLine","bold","italic","px","names","monospace","link","properEscape","renderMeta","metas","string","styles","makeSpaces","spaces","$Color","$List","$Native$Text","empty","texts","seperator","defaultStyle","Style","Through","Over","Under","$Native$Graphics$Element","$Text","outward","inward","down","up","Position","Relative","relative","Absolute","absolute","N","bottomLeft","bottomLeftAt","Z","middle","midLeft","midBottom","middleAt","midLeftAt","midBottomAt","P","topLeft","topRight","bottomRight","midRight","midTop","topLeftAt","topRightAt","bottomRightAt","midRightAt","midTopAt","justified","centered","rightAligned","leftAligned","show","Tiled","Cropped","Fitted","Plain","Spacer","Flow","Container","spacer","sizeOf","heightOf","widthOf","above","below","beside","lft","rht","layers","es","hs","newFlow","maxOrZero","Element_elm_builtin","newWidth","newHeight","size","givenOpacity","clr","_p21","_p22","_p23","_p24","$Native$Graphics$Collage","$Transform2D","Shape","polygon","hh","hw","square","oval","circle","ngon","Path","segment","Fill","Line","FGroup","FElement","FImage","FText","FOutlinedText","FShape","FPath","LineStyle","dashOffset","Clipped","Sharp","Smooth","Padded","Round","Flat","defaultLine","solid","dashed","dotted","Grad","Texture","Solid","Form_elm_builtin","filled","shape","textured","outlined","traced","toForm","group","fs","groupTransform","outlinedText","ls","move","moveX","moveY","Debug","msg","process","stdout","write","tracePath","debug","watch","watchSummary","summarize","$Native$Debug","Result","toMaybe","def","Err","Ok","ra","rb","rc","rd","re","formatError","fromMaybe","broadcastToKids","timestamp","parents","targetId","mailbox","Task","asyncFunction","succeed","address","sendMessage","perform","parent","parentUpdate","parentID","mapMany","refreshValue","numberOfParents","foldp","time","delayed","genericMerge","tieBreaker","leftStream","rightStream","touched","sampleOn","ticker","signalTouch","tickerTouch","tickerUpdate","dropRepeats","fail","task","catch_","runTask","performSignal","onComplete","workQueue","register","mark","status","stepTask","placeHolder","couldBeSync","wasSync","activeTask","activeTag","succeedChain","failChain","sleep","spawn","$Native$Task","$Result","onError","mapError","taskA","taskB","taskC","taskD","taskE","andMap","taskFunc","taskValue","sequence","tasks","toResult","fromResult","$Native$Signal","$Task","Message","Address","forwardTo","Mailbox","isOk","merge","mergeMany","signalList","column","Extra","$Signal","unsafeFromJust","passiveMap2","withPassive","combine","original","others","initial","keepIf","runBuffer$","inp","prev","runBuffer","initSignal","zip4","v0","v1","v2","v3","zip3","zip","keepWhen","boolSig","aSig","sampleWhen","bs","sig","applyMany","unpack","step$","pairS","unzip3","unzip4","foldp$","initFun","fun$","deltas","delta","foldps","aS","delayRound","bS","$new","old","filterFold","f$","res","foldps$","iF","_p25","switchHelper","lAndR","bi","li","ri","switchWhen","switchSample","keepThen","choice","keepWhenI","fairMerge","resolve","merged","boolRight","boolLeft","bothUpdated","keep","resolved","Time","fpsWhen","desiredFPS","isOn","notifyTicker","firstArg","currentTime","wasOn","previousTime","timeoutId","msPerFrame","clearTimeout","initialState","every","tellTime","clock","setInterval","pair","read","parse","toDate","$Native$Time","since","delaydiff","fps","targetFrames","inMilliseconds","millisecond","second","minute","hour","inHours","inMinutes","inSeconds","get","unsafeGet","slot","lengths","table","set","item","unsafeSet","nodeCopy","getSlot","initialize","M","initialize_","pow","fromList","leaf","fromListPush","splice","toPush","pushed","push_","newTree","create","siblise","newA","botRight","newSlot","toList_","indexedMap_","sliceLeft","sliceRight","sliced","append_","toRemove","calcToRemove","shuffle","appended","botLeft","insertRight","insertLeft","parentise","index","subLengths","get2","set2","saveSlot","newB","source","tree","toJSArray","jsArray","toJSArray_","inc","fromJSArray","fromJSArray_","$Native$Array","toIndexedList","Char","fromCode","fromCharCode","toCode","charCodeAt","toUpper","toUpperCase","toLower","toLowerCase","toLocaleUpper","toLocaleUpperCase","toLocaleLower","toLocaleLowerCase","$Native$Char","isBetween","low","high","$char","isUpper","isLower","isDigit","isOctDigit","isHexDigit","uncons","strs","dropLeft","dropRight","pad","half","padRight","padLeft","trim","trimLeft","trimRight","words","startsWith","endsWith","lastIndexOf","indexes","subLen","is","toInt","parseInt","dotCount","parseFloat","chars","$Native$String","indices","fromChar","$String","dict","keyList","valueList","_v6","_v7","reportRemBug","lgot","rgot","isBBlack","_v8_2","Same","Remove","Insert","sizeHelp","_v10","_v11","targetKey","_v14","_v15","_v16","_v17","maxWithDefault","_v21","_v22","RBEmpty_elm_builtin","RBNode_elm_builtin","LBBlack","LBlack","NBlack","BBlack","Black","ensureBlackRoot","blackish","blacken","Red","moreBlack","lessBlack","lessBlackTree","balancedTree","col","xk","xv","yk","yv","zk","zv","redden","balanceHelp","_v31_6","_v31_5","_v31_4","_v31_3","_v31_2","_v31_1","_v31_0","balance","bubble","removeMax","_p27","_p26","_p31","_p30","_p29","l$","_p28","alter","_p32","_p33","_p44","_p43","_p42","_p41","_p40","_p34","_p35","_p36","flag","newLeft","_p37","_p38","newRight","_p39","_p45","updatedDict","_p46","insert","singleton","union","t1","t2","assocs","_p47","_p48","predicate","dictionary","intersect","_p49","_p50","_p51","_p53","_p52","remove","diff","Json","actual","decodeNull","successValue","decodeString","decodeFloat","decodeInt","isFinite","decodeBool","decodeArray","decoder","ElmArray","decodeList","decodeMaybe","decodeField","subValue","decodeKeyValuePairs","isObject","keyValuePairs","decodeObject1","d1","decodeObject2","d2","decodeObject3","d3","decodeObject4","d4","decodeObject5","d5","decodeObject6","d6","decodeObject7","d7","decodeObject8","d8","decodeTuple1","decodeTuple2","decodeTuple3","decodeTuple4","decodeTuple5","decodeTuple6","decodeTuple7","decodeTuple8","decodeValue","runDecoderValue","customDecoder","decode","decoders","errors","runDecoderString","encode","indentLevel","encodeObject","obj","encodeNull","encodeArray","encodeList","Encode","$Native$Json","object","$null","bool","$float","$int","Decode","$Dict","tuple8","tuple7","tuple6","tuple5","tuple4","tuple3","tuple2","tuple1","object8","object7","object6","object5","object4","object3","object2","object1","at","fields","getWidth","clientWidth","getHeight","innerHeight","clientHeight","dimensions","Random","magicNum8","magicNum7","magicNum6","magicNum5","magicNum4","magicNum3","magicNum2","magicNum1","magicNum0","generate","seed","Seed","State","initState","s$","q","s2","s1","k$","s2$","s2$$","s1$","s1$$","z","z$","new_s2","new_s1","initialSeed","Generator","newSeed","genB","seed0","seed1","seed2","seed3","seed4","seed5","_p54","_p55","_p56","_p57","_p58","_p59","_p60","listHelp","_p61","_p62","_p63","genA","minInt","maxInt","iLogBase","_p64","_p65","_p70","_p66","_p67","state$","_v26","_v27","_v28","_p68","_p69","_p71","number","negativeOneToOne","_p72","scaled","$Native$Window","o","u","require",1,2,"global","topLevel","minDoc","doccy","self","min-document",3,4,"isArray","nativeIsArray","prototype",5,"applyProperties","previous","propName","propValue","isHook","hook","patchObject","previousValue","unhook","attrName","removeAttribute","getPrototype","replacer","attrValue","setAttribute","getPrototypeOf","__proto__","constructor","../vnode/is-vhook.js","is-object",6,"vnode","opts","doc","warn","handleThunk","isWidget","isVText","isVNode","namespace","createElementNS","properties","children","childNode","../vnode/handle-thunk.js","../vnode/is-vnode.js","../vnode/is-vtext.js","../vnode/is-widget.js","./apply-properties","global/document",7,"domIndex","ascending","recurse","rootIndex","indexInRange","vChildren","vChild","noChild","nextIndex","currentIndex","currentItem","minIndex","maxIndex",8,"applyPatch","vpatch","renderOptions","vNode","patch","VPatch","REMOVE","removeNode","INSERT","insertNode","VTEXT","stringPatch","WIDGET","widgetPatch","VNODE","vNodePatch","ORDER","reorderChildren","PROPS","THUNK","replaceRoot","destroyWidget","leftVNode","vText","nodeType","replaceData","widget","updating","updateWidget","destroy","moves","keyMap","removes","inserts","oldRoot","newRoot","../vnode/vpatch.js","./create-element","./update-widget",9,"patches","patchRecursive","patchIndices","ownerDocument","nodeIndex","patchList","patchOp","Number","./dom-index","./patch-op","x-is-array",10,11,"renderedA","renderedB","isThunk","renderThunk","thunk","renderedThunk","./is-thunk","./is-vnode","./is-vtext","./is-widget",12,13,"hasOwnProperty",14,"isVirtualNode","version","./version",15,"isVirtualText",16,17,18,"VirtualNode","noProperties","noChildren","hooks","descendants","hasWidgets","hasThunks","descendantHooks","property","isVHook","child","./is-vhook",19,"VirtualPatch",20,"VirtualText",21,"diffProps","aKey","aValue","bValue","objectDiff","bKey","../vnode/is-vhook",22,"walk","apply","applyClear","thunks","clearState","appendPatch","propsPatch","diffChildren","aChildren","orderedSet","reorder","bChildren","aLen","bLen","leftNode","rightNode","destroyWidgets","thunkPatch","hasPatches","undefinedKeys","bChildIndex","keyIndex","bKeys","bFree","free","aChildIndex","aKeys","aFree","newChildren","freeIndex","freeCount","deletedItems","itemIndex","aItem","lastFreeIndex","newItem","simulateItem","simulate","simulateIndex","wantedItem","../vnode/handle-thunk","../vnode/is-thunk","../vnode/is-vnode","../vnode/is-vtext","../vnode/is-widget","../vnode/vpatch","./diff-props",23,"VNode","VText","propertyList","contents","makeNode","listToProperties","useSoftSet","SoftSetHook","entry","ATTRIBUTE_KEY","attributes","attrKey","attribute","attributeNS","AttributeHook","on","options","createMessage","eventHandler","event","preventDefault","ElementWidget","fromElement","oldModel","newModel","lazyRef","fn","Thunk","lazyRef2","lazyRef3","shouldUpdate","current","cargs","pargs","prop","setAttributeNS","removeAttributeNS","propertyName","lazy","lazy2","lazy3","virtual-dom/vdom/create-element","virtual-dom/vdom/patch","virtual-dom/vnode/is-vhook","virtual-dom/vnode/vnode","virtual-dom/vnode/vtext","virtual-dom/vtree/diff","$Native$VirtualDom","defaultOptions","Options","onWithOptions","toMessage","Html","$VirtualDom","section","nav","article","aside","h1","h2","h3","h4","h5","h6","header","footer","main$","hr","pre","blockquote","ol","ul","dl","dt","dd","figure","figcaption","em","strong","small","cite","dfn","abbr","$var","samp","kbd","sup","ruby","rt","rp","bdi","bdo","span","br","wbr","ins","del","iframe","param","video","audio","track","svg","math","caption","colgroup","tbody","thead","tfoot","tr","td","th","fieldset","legend","label","button","select","datalist","optgroup","option","textarea","keygen","progress","meter","details","summary","menuitem","menu","Attributes","$Json$Encode","contextmenu","stringProperty","$class","accesskey","draggable","dropzone","itemprop","lang","tabindex","charset","content","httpEquiv","language","alt","preload","poster","kind","srclang","sandbox","srcdoc","type$","placeholder","accept","acceptCharset","action","autocomplete","autosave","enctype","formaction","minlength","maxlength","method","$for","cols","rows","wrap","usemap","coords","challenge","keytype","target","downloadAs","hreflang","media","ping","rel","datetime","pubdate","colspan","headers","rowspan","scope","manifest","boolProperty","hidden","contenteditable","spellcheck","async","defer","scoped","autoplay","controls","seamless","checked","selected","autofocus","disabled","multiple","novalidate","readonly","required","ismap","download","reversed","classList","Events","$Json$Decode","keyCode","targetChecked","targetValue","messageOn","addr","onClick","onDoubleClick","onMouseMove","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseOver","onMouseOut","onBlur","onFocus","onSubmit","onKey","onKeyUp","onKeyDown","onKeyPress","$Graphics$Collage","$Html","$Html$Attributes","$Html$Events","$Random","$Signal$Extra","$Time","$Window","socializeParticle","domains","particles","avgDir","center","distance2","drawParticle","moveParticle","sizeDomain","drawDomain","fromSimulation","socialMode","debugMode","rand","rotateParticle","Socialize","Resize","ToggleDebug","ToggleSocial","view","Rotate","Move","Domain","Particle","addParticle","updateDomains","belong","op","simul","Simulation","operations","signals"],"mappings":"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CAyqD,GAAAzqD,EAAA,YACA0qD,GAAA1qD,EAAA,SACA2qD,GAAA3qD,EAAA,WACA4qD,GAAA5qD,EAAA,WACA6qD,GAAA7qD,EAAA,YACA8qD,GAAA9qD,EAAA,OACA,OAAAuK,GAAA47C,KAAAtrD,QAA8B6P,MAC9B1K,OACAuG,OACA6b,YACAiiC,cACAv/C,OACAuhD,UACAC,MACAC,UACAC,QACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,SACAC,SACA5zB,UACA6zB,QACAjxD,IACAkxD,KACAC,MACAC,aACAC,KACAC,KACAtsB,KACAusB,KACAC,KACAC,KACAC,SACAC,aACAtvD,MACA5B,IACAmxD,KACAC,SACAC,QACAl+C,IACAm+C,OACAlW,IACAmW,MACAC,OACAn0B,OACAxyB,OACA4mD,OACAC,OACAC,MACAj8C,MACAk8C,MACA5wD,IACAf,IACA0+C,KACAjgB,QACAmzB,QACAC,MACAC,MACAC,OACAC,OACAC,QACAC,MACAC,OACAC,OACAC,OACAtyC,OACAuyC,UACA9yD,SACA44C,UACAma,SACAC,SACAC,SACAnoB,UACAooB,SACA1tC,UACA2tC,OACAC,QACAjrB,SACAkrB,WACAC,YACAriB,OACAsiB,SACAC,SACAC,SACAC,MACAC,MACAC,MACAzwC,QACA0wC,YACAC,UACAC,SACAhtD,SACAitD,UACAC,UACAC,YACAC,YACAC,UACAC,YACAC,UACAvsD,UACAwsD,YACAC,SACAC,WACAC,WACAC,YACAC,UAEA70D,EAAAkwD,KAAAlwD,EAAAkwD,SACAlwD,EAAAkwD,KAAA4E,WAAA90D,EAAAkwD,KAAA4E,eACA90D,EAAAkwD,KAAA4E,WAAA5yD,KAAA,SAAAoS,GACA,YAGA,IAFAA,EAAA47C,KAAA57C,EAAA47C,SACA57C,EAAA47C,KAAA4E,WAAAxgD,EAAA47C,KAAA4E,eACAxgD,EAAA47C,KAAA4E,WAAAlwD,OAAA,MAAA0P,GAAA47C,KAAA4E,WAAAlwD,MACA,IACA+T,IADA3Y,EAAAgC,OAAAiB,MAAAf,KAAAoS,GACAtU,EAAAiC,O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AAAuE,EAAAzD,IAAAzT,EAAA0xB,EAAAnZ,OAAArB,EAAA5D,IAAA5C,OACpCgM,GAAA,SAAAqE,GACA,MAAA/gB,GAAAonD,EACA,QACAkM,EAAAlc,OAAAp3C,EAAA0xB,EAAA/e,IAAA,SAAAO,GAAuD,GAAAC,GAAAD,CAAkB,QAAQrH,KAAA,UAAApJ,GAAA0Q,EAAA1Q,GAAAC,GAAA4wD,EAAAjiC,OAAAle,EAAAzQ,MAA6Dqe,MAE9I3R,GAAA,SAAAoD,GAA2B,MAAAxS,GAAAwzD,EAAA,MAAAhhD,GAC3B,OAAAK,GAAA47C,KAAA4E,WAAAlwD,QAAyC6P,MACzC5D,OACAsN,SACA+2C,SACAwE,aACAh6D,KACAkM,QACA0sD,UACAlC,QACA/vD,QACA0yD,WACA1C,cACA2C,YACA1C,SACAC,gBACAC,SACAC,eACAwC,aACAvC,WACAwC,YACAvC,UACAC,aACAzkD,OACA2kD,YACAD,YACAE,SACAoC,YACAvzD,OACAwzD,cACAv5C,UACAw5C,YACAC,YACA5hC,QACAs/B,QACA5zC,QACAjgB,OACAH,OACAgY,QACAi8C,QACAC,QACAC,QACAtsC,QACA2sC,UACAgC,YACA/B,cACAC,YACAC,SACAC,QACAC,OACA0B,SACAnC,UACA78B,SACA88B,UACA92C,MACA+B,SACAjE,QACAw3C,MACA+C,YACAC,YACAptD,QACAqqD,UACAC,SACAx/C,YACAy/C,OACAC,UACAC,UACA4C,YACA3C,SACAsD,YACAvmD,SACAgc,SACA8oC,WACAE,WACAD,WACAE,SACAM,SACAhD,UACAC,UACAgD,SACA/C,YACAC,WACA+C,UACAxD,YACAoD,mBACAvD,cACAnnC,MACAunC,YACAC,WACAC,WACAC,OACAiD,cACAhD,WACA8B,aACAC,WACAzF,QACAgG,YACAC,WACAK,YACAvP,WACA6E,cAEA1tD,EAAAkwD,KAAAlwD,EAAAkwD,SACAlwD,EAAAkwD,KAAAyJ,OAAA35D,EAAAkwD,KAAAyJ,WACA35D,EAAAkwD,KAAAyJ,OAAAz3D,KAAA,SAAAoS,GACA,YAGA,IAFAA,EAAA47C,KAAA57C,EAA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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\t__webpack_require__(2)\n\t__webpack_require__(3)\n\tvar Elm = __webpack_require__(1)\n\tElm.embed(Elm.Main, document.getElementById('main'))\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar Elm = Elm || { Native: {} };\n\tElm.Native.Basics = {};\n\tElm.Native.Basics.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Basics = localRuntime.Native.Basics || {};\n\t\tif (localRuntime.Native.Basics.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Basics.values;\n\t\t}\n\t\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\tfunction div(a, b)\n\t\t{\n\t\t\treturn (a / b) | 0;\n\t\t}\n\t\tfunction rem(a, b)\n\t\t{\n\t\t\treturn a % b;\n\t\t}\n\t\tfunction mod(a, b)\n\t\t{\n\t\t\tif (b === 0)\n\t\t\t{\n\t\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t\t\t}\n\t\t\tvar r = a % b;\n\t\t\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\n\t\n\t\t\treturn m === b ? 0 : m;\n\t\t}\n\t\tfunction logBase(base, n)\n\t\t{\n\t\t\treturn Math.log(n) / Math.log(base);\n\t\t}\n\t\tfunction negate(n)\n\t\t{\n\t\t\treturn -n;\n\t\t}\n\t\tfunction abs(n)\n\t\t{\n\t\t\treturn n < 0 ? -n : n;\n\t\t}\n\t\n\t\tfunction min(a, b)\n\t\t{\n\t\t\treturn Utils.cmp(a, b) < 0 ? a : b;\n\t\t}\n\t\tfunction max(a, b)\n\t\t{\n\t\t\treturn Utils.cmp(a, b) > 0 ? a : b;\n\t\t}\n\t\tfunction clamp(lo, hi, n)\n\t\t{\n\t\t\treturn Utils.cmp(n, lo) < 0 ? lo : Utils.cmp(n, hi) > 0 ? hi : n;\n\t\t}\n\t\n\t\tfunction xor(a, b)\n\t\t{\n\t\t\treturn a !== b;\n\t\t}\n\t\tfunction not(b)\n\t\t{\n\t\t\treturn !b;\n\t\t}\n\t\tfunction isInfinite(n)\n\t\t{\n\t\t\treturn n === Infinity || n === -Infinity;\n\t\t}\n\t\n\t\tfunction truncate(n)\n\t\t{\n\t\t\treturn n | 0;\n\t\t}\n\t\n\t\tfunction degrees(d)\n\t\t{\n\t\t\treturn d * Math.PI / 180;\n\t\t}\n\t\tfunction turns(t)\n\t\t{\n\t\t\treturn 2 * Math.PI * t;\n\t\t}\n\t\tfunction fromPolar(point)\n\t\t{\n\t\t\tvar r = point._0;\n\t\t\tvar t = point._1;\n\t\t\treturn Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n\t\t}\n\t\tfunction toPolar(point)\n\t\t{\n\t\t\tvar x = point._0;\n\t\t\tvar y = point._1;\n\t\t\treturn Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\n\t\t}\n\t\n\t\treturn localRuntime.Native.Basics.values = {\n\t\t\tdiv: F2(div),\n\t\t\trem: F2(rem),\n\t\t\tmod: F2(mod),\n\t\n\t\t\tpi: Math.PI,\n\t\t\te: Math.E,\n\t\t\tcos: Math.cos,\n\t\t\tsin: Math.sin,\n\t\t\ttan: Math.tan,\n\t\t\tacos: Math.acos,\n\t\t\tasin: Math.asin,\n\t\t\tatan: Math.atan,\n\t\t\tatan2: F2(Math.atan2),\n\t\n\t\t\tdegrees: degrees,\n\t\t\tturns: turns,\n\t\t\tfromPolar: fromPolar,\n\t\t\ttoPolar: toPolar,\n\t\n\t\t\tsqrt: Math.sqrt,\n\t\t\tlogBase: F2(logBase),\n\t\t\tnegate: negate,\n\t\t\tabs: abs,\n\t\t\tmin: F2(min),\n\t\t\tmax: F2(max),\n\t\t\tclamp: F3(clamp),\n\t\t\tcompare: Utils.compare,\n\t\n\t\t\txor: F2(xor),\n\t\t\tnot: not,\n\t\n\t\t\ttruncate: truncate,\n\t\t\tceiling: Math.ceil,\n\t\t\tfloor: Math.floor,\n\t\t\tround: Math.round,\n\t\t\ttoFloat: function(x) { return x; },\n\t\t\tisNaN: isNaN,\n\t\t\tisInfinite: isInfinite\n\t\t};\n\t};\n\t\n\tElm.Native.Port = {};\n\t\n\tElm.Native.Port.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Port = localRuntime.Native.Port || {};\n\t\tif (localRuntime.Native.Port.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Port.values;\n\t\t}\n\t\n\t\tvar NS;\n\t\n\t\t// INBOUND\n\t\n\t\tfunction inbound(name, type, converter)\n\t\t{\n\t\t\tif (!localRuntime.argsTracker[name])\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Port Error:\\n' +\n\t\t\t\t\t'No argument was given for the port named \\'' + name + '\\' with type:\\n\\n' +\n\t\t\t\t\t'    ' + type.split('\\n').join('\\n        ') + '\\n\\n' +\n\t\t\t\t\t'You need to provide an initial value!\\n\\n' +\n\t\t\t\t\t'Find out more about ports here <http://elm-lang.org/learn/Ports.elm>'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar arg = localRuntime.argsTracker[name];\n\t\t\targ.used = true;\n\t\n\t\t\treturn jsToElm(name, type, converter, arg.value);\n\t\t}\n\t\n\t\n\t\tfunction inboundSignal(name, type, converter)\n\t\t{\n\t\t\tvar initialValue = inbound(name, type, converter);\n\t\n\t\t\tif (!NS)\n\t\t\t{\n\t\t\t\tNS = Elm.Native.Signal.make(localRuntime);\n\t\t\t}\n\t\t\tvar signal = NS.input('inbound-port-' + name, initialValue);\n\t\n\t\t\tfunction send(jsValue)\n\t\t\t{\n\t\t\t\tvar elmValue = jsToElm(name, type, converter, jsValue);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tlocalRuntime.notify(signal.id, elmValue);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\n\t\t\tlocalRuntime.ports[name] = { send: send };\n\t\n\t\t\treturn signal;\n\t\t}\n\t\n\t\n\t\tfunction jsToElm(name, type, converter, value)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn converter(value);\n\t\t\t}\n\t\t\tcatch(e)\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Port Error:\\n' +\n\t\t\t\t\t'Regarding the port named \\'' + name + '\\' with type:\\n\\n' +\n\t\t\t\t\t'    ' + type.split('\\n').join('\\n        ') + '\\n\\n' +\n\t\t\t\t\t'You just sent the value:\\n\\n' +\n\t\t\t\t\t'    ' + JSON.stringify(value) + '\\n\\n' +\n\t\t\t\t\t'but it cannot be converted to the necessary type.\\n' +\n\t\t\t\t\te.message\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// OUTBOUND\n\t\n\t\tfunction outbound(name, converter, elmValue)\n\t\t{\n\t\t\tlocalRuntime.ports[name] = converter(elmValue);\n\t\t}\n\t\n\t\n\t\tfunction outboundSignal(name, converter, signal)\n\t\t{\n\t\t\tvar subscribers = [];\n\t\n\t\t\tfunction subscribe(handler)\n\t\t\t{\n\t\t\t\tsubscribers.push(handler);\n\t\t\t}\n\t\t\tfunction unsubscribe(handler)\n\t\t\t{\n\t\t\t\tsubscribers.pop(subscribers.indexOf(handler));\n\t\t\t}\n\t\n\t\t\tfunction notify(elmValue)\n\t\t\t{\n\t\t\t\tvar jsValue = converter(elmValue);\n\t\t\t\tvar len = subscribers.length;\n\t\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t\t{\n\t\t\t\t\tsubscribers[i](jsValue);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!NS)\n\t\t\t{\n\t\t\t\tNS = Elm.Native.Signal.make(localRuntime);\n\t\t\t}\n\t\t\tNS.output('outbound-port-' + name, notify, signal);\n\t\n\t\t\tlocalRuntime.ports[name] = {\n\t\t\t\tsubscribe: subscribe,\n\t\t\t\tunsubscribe: unsubscribe\n\t\t\t};\n\t\n\t\t\treturn signal;\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Port.values = {\n\t\t\tinbound: inbound,\n\t\t\toutbound: outbound,\n\t\t\tinboundSignal: inboundSignal,\n\t\t\toutboundSignal: outboundSignal\n\t\t};\n\t};\n\t\n\tif (!Elm.fullscreen) {\n\t\t(function() {\n\t\t\t'use strict';\n\t\n\t\t\tvar Display = {\n\t\t\t\tFULLSCREEN: 0,\n\t\t\t\tCOMPONENT: 1,\n\t\t\t\tNONE: 2\n\t\t\t};\n\t\n\t\t\tElm.fullscreen = function(module, args)\n\t\t\t{\n\t\t\t\tvar container = document.createElement('div');\n\t\t\t\tdocument.body.appendChild(container);\n\t\t\t\treturn init(Display.FULLSCREEN, container, module, args || {});\n\t\t\t};\n\t\n\t\t\tElm.embed = function(module, container, args)\n\t\t\t{\n\t\t\t\tvar tag = container.tagName;\n\t\t\t\tif (tag !== 'DIV')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n\t\t\t\t}\n\t\t\t\treturn init(Display.COMPONENT, container, module, args || {});\n\t\t\t};\n\t\n\t\t\tElm.worker = function(module, args)\n\t\t\t{\n\t\t\t\treturn init(Display.NONE, {}, module, args || {});\n\t\t\t};\n\t\n\t\t\tfunction init(display, container, module, args, moduleToReplace)\n\t\t\t{\n\t\t\t\t// defining state needed for an instance of the Elm RTS\n\t\t\t\tvar inputs = [];\n\t\n\t\t\t\t/* OFFSET\n\t\t\t\t * Elm's time traveling debugger lets you pause time. This means\n\t\t\t\t * \"now\" may be shifted a bit into the past. By wrapping Date.now()\n\t\t\t\t * we can manage this.\n\t\t\t\t */\n\t\t\t\tvar timer = {\n\t\t\t\t\tprogramStart: Date.now(),\n\t\t\t\t\tnow: function()\n\t\t\t\t\t{\n\t\t\t\t\t\treturn Date.now();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar updateInProgress = false;\n\t\t\t\tfunction notify(id, v)\n\t\t\t\t{\n\t\t\t\t\tif (updateInProgress)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'The notify function has been called synchronously!\\n' +\n\t\t\t\t\t\t\t'This can lead to frames being dropped.\\n' +\n\t\t\t\t\t\t\t'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n');\n\t\t\t\t\t}\n\t\t\t\t\tupdateInProgress = true;\n\t\t\t\t\tvar timestep = timer.now();\n\t\t\t\t\tfor (var i = inputs.length; i--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tinputs[i].notify(timestep, id, v);\n\t\t\t\t\t}\n\t\t\t\t\tupdateInProgress = false;\n\t\t\t\t}\n\t\t\t\tfunction setTimeout(func, delay)\n\t\t\t\t{\n\t\t\t\t\treturn window.setTimeout(func, delay);\n\t\t\t\t}\n\t\n\t\t\t\tvar listeners = [];\n\t\t\t\tfunction addListener(relevantInputs, domNode, eventName, func)\n\t\t\t\t{\n\t\t\t\t\tdomNode.addEventListener(eventName, func);\n\t\t\t\t\tvar listener = {\n\t\t\t\t\t\trelevantInputs: relevantInputs,\n\t\t\t\t\t\tdomNode: domNode,\n\t\t\t\t\t\teventName: eventName,\n\t\t\t\t\t\tfunc: func\n\t\t\t\t\t};\n\t\t\t\t\tlisteners.push(listener);\n\t\t\t\t}\n\t\n\t\t\t\tvar argsTracker = {};\n\t\t\t\tfor (var name in args)\n\t\t\t\t{\n\t\t\t\t\targsTracker[name] = {\n\t\t\t\t\t\tvalue: args[name],\n\t\t\t\t\t\tused: false\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\t// create the actual RTS. Any impure modules will attach themselves to this\n\t\t\t\t// object. This permits many Elm programs to be embedded per document.\n\t\t\t\tvar elm = {\n\t\t\t\t\tnotify: notify,\n\t\t\t\t\tsetTimeout: setTimeout,\n\t\t\t\t\tnode: container,\n\t\t\t\t\taddListener: addListener,\n\t\t\t\t\tinputs: inputs,\n\t\t\t\t\ttimer: timer,\n\t\t\t\t\targsTracker: argsTracker,\n\t\t\t\t\tports: {},\n\t\n\t\t\t\t\tisFullscreen: function() { return display === Display.FULLSCREEN; },\n\t\t\t\t\tisEmbed: function() { return display === Display.COMPONENT; },\n\t\t\t\t\tisWorker: function() { return display === Display.NONE; }\n\t\t\t\t};\n\t\n\t\t\t\tfunction swap(newModule)\n\t\t\t\t{\n\t\t\t\t\tremoveListeners(listeners);\n\t\t\t\t\tvar div = document.createElement('div');\n\t\t\t\t\tvar newElm = init(display, div, newModule, args, elm);\n\t\t\t\t\tinputs = [];\n\t\n\t\t\t\t\treturn newElm;\n\t\t\t\t}\n\t\n\t\t\t\tfunction dispose()\n\t\t\t\t{\n\t\t\t\t\tremoveListeners(listeners);\n\t\t\t\t\tinputs = [];\n\t\t\t\t}\n\t\n\t\t\t\tvar Module = {};\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tModule = module.make(elm);\n\t\t\t\t\tcheckInputs(elm);\n\t\t\t\t}\n\t\t\t\tcatch (error)\n\t\t\t\t{\n\t\t\t\t\tif (typeof container.appendChild === \"function\")\n\t\t\t\t\t{\n\t\t\t\t\t\tcontainer.appendChild(errorNode(error.message));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(error.message);\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\n\t\t\t\tif (display !== Display.NONE)\n\t\t\t\t{\n\t\t\t\t\tvar graphicsNode = initGraphics(elm, Module);\n\t\t\t\t}\n\t\n\t\t\t\tvar rootNode = { kids: inputs };\n\t\t\t\ttrimDeadNodes(rootNode);\n\t\t\t\tinputs = rootNode.kids;\n\t\t\t\tfilterListeners(inputs, listeners);\n\t\n\t\t\t\taddReceivers(elm.ports);\n\t\n\t\t\t\tif (typeof moduleToReplace !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\thotSwap(moduleToReplace, elm);\n\t\n\t\t\t\t\t// rerender scene if graphics are enabled.\n\t\t\t\t\tif (typeof graphicsNode !== 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tgraphicsNode.notify(0, true, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tswap: swap,\n\t\t\t\t\tports: elm.ports,\n\t\t\t\t\tdispose: dispose\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tfunction checkInputs(elm)\n\t\t\t{\n\t\t\t\tvar argsTracker = elm.argsTracker;\n\t\t\t\tfor (var name in argsTracker)\n\t\t\t\t{\n\t\t\t\t\tif (!argsTracker[name].used)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"Port Error:\\nYou provided an argument named '\" + name +\n\t\t\t\t\t\t\t\"' but there is no corresponding port!\\n\\n\" +\n\t\t\t\t\t\t\t\"Maybe add a port '\" + name + \"' to your Elm module?\\n\" +\n\t\t\t\t\t\t\t\"Maybe remove the '\" + name + \"' argument from your initialization code in JS?\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction errorNode(message)\n\t\t\t{\n\t\t\t\tvar code = document.createElement('code');\n\t\n\t\t\t\tvar lines = message.split('\\n');\n\t\t\t\tcode.appendChild(document.createTextNode(lines[0]));\n\t\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\t\tfor (var i = 1; i < lines.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tcode.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i].replace(/  /g, '\\u00A0 ')));\n\t\t\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\t\t}\n\t\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\t\tcode.appendChild(document.createTextNode('Open the developer console for more details.'));\n\t\t\t\treturn code;\n\t\t\t}\n\t\n\t\n\t\t\t//// FILTER SIGNALS ////\n\t\n\t\t\t// TODO: move this code into the signal module and create a function\n\t\t\t// Signal.initializeGraph that actually instantiates everything.\n\t\n\t\t\tfunction filterListeners(inputs, listeners)\n\t\t\t{\n\t\t\t\tloop:\n\t\t\t\tfor (var i = listeners.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tvar listener = listeners[i];\n\t\t\t\t\tfor (var j = inputs.length; j--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tif (listener.relevantInputs.indexOf(inputs[j].id) >= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue loop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlistener.domNode.removeEventListener(listener.eventName, listener.func);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction removeListeners(listeners)\n\t\t\t{\n\t\t\t\tfor (var i = listeners.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tvar listener = listeners[i];\n\t\t\t\t\tlistener.domNode.removeEventListener(listener.eventName, listener.func);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add receivers for built-in ports if they are defined\n\t\t\tfunction addReceivers(ports)\n\t\t\t{\n\t\t\t\tif ('title' in ports)\n\t\t\t\t{\n\t\t\t\t\tif (typeof ports.title === 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument.title = ports.title;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tports.title.subscribe(function(v) { document.title = v; });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ('redirect' in ports)\n\t\t\t\t{\n\t\t\t\t\tports.redirect.subscribe(function(v) {\n\t\t\t\t\t\tif (v.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twindow.location = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\n\t\n\t\t\t// returns a boolean representing whether the node is alive or not.\n\t\t\tfunction trimDeadNodes(node)\n\t\t\t{\n\t\t\t\tif (node.isOutput)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\tvar liveKids = [];\n\t\t\t\tfor (var i = node.kids.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tvar kid = node.kids[i];\n\t\t\t\t\tif (trimDeadNodes(kid))\n\t\t\t\t\t{\n\t\t\t\t\t\tliveKids.push(kid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.kids = liveKids;\n\t\n\t\t\t\treturn liveKids.length > 0;\n\t\t\t}\n\t\n\t\n\t\t\t////  RENDERING  ////\n\t\n\t\t\tfunction initGraphics(elm, Module)\n\t\t\t{\n\t\t\t\tif (!('main' in Module))\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\"'main' is missing! What do I display?!\");\n\t\t\t\t}\n\t\n\t\t\t\tvar signalGraph = Module.main;\n\t\n\t\t\t\t// make sure the signal graph is actually a signal & extract the visual model\n\t\t\t\tif (!('notify' in signalGraph))\n\t\t\t\t{\n\t\t\t\t\tsignalGraph = Elm.Signal.make(elm).constant(signalGraph);\n\t\t\t\t}\n\t\t\t\tvar initialScene = signalGraph.value;\n\t\n\t\t\t\t// Figure out what the render functions should be\n\t\t\t\tvar render;\n\t\t\t\tvar update;\n\t\t\t\tif (initialScene.ctor === 'Element_elm_builtin')\n\t\t\t\t{\n\t\t\t\t\tvar Element = Elm.Native.Graphics.Element.make(elm);\n\t\t\t\t\trender = Element.render;\n\t\t\t\t\tupdate = Element.updateAndReplace;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar VirtualDom = Elm.Native.VirtualDom.make(elm);\n\t\t\t\t\trender = VirtualDom.render;\n\t\t\t\t\tupdate = VirtualDom.updateAndReplace;\n\t\t\t\t}\n\t\n\t\t\t\t// Add the initialScene to the DOM\n\t\t\t\tvar container = elm.node;\n\t\t\t\tvar node = render(initialScene);\n\t\t\t\twhile (container.firstChild)\n\t\t\t\t{\n\t\t\t\t\tcontainer.removeChild(container.firstChild);\n\t\t\t\t}\n\t\t\t\tcontainer.appendChild(node);\n\t\n\t\t\t\tvar _requestAnimationFrame =\n\t\t\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t\t\t\t\t? requestAnimationFrame\n\t\t\t\t\t\t: function(cb) { setTimeout(cb, 1000 / 60); }\n\t\t\t\t\t\t;\n\t\n\t\t\t\t// domUpdate is called whenever the main Signal changes.\n\t\t\t\t//\n\t\t\t\t// domUpdate and drawCallback implement a small state machine in order\n\t\t\t\t// to schedule only 1 draw per animation frame. This enforces that\n\t\t\t\t// once draw has been called, it will not be called again until the\n\t\t\t\t// next frame.\n\t\t\t\t//\n\t\t\t\t// drawCallback is scheduled whenever\n\t\t\t\t// 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n\t\t\t\t// 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n\t\t\t\t//\n\t\t\t\t// Invariants:\n\t\t\t\t// 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n\t\t\t\t// 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n\t\t\t\t//    scheduled drawCallback.\n\t\t\t\tvar NO_REQUEST = 0;\n\t\t\t\tvar PENDING_REQUEST = 1;\n\t\t\t\tvar EXTRA_REQUEST = 2;\n\t\t\t\tvar state = NO_REQUEST;\n\t\t\t\tvar savedScene = initialScene;\n\t\t\t\tvar scheduledScene = initialScene;\n\t\n\t\t\t\tfunction domUpdate(newScene)\n\t\t\t\t{\n\t\t\t\t\tscheduledScene = newScene;\n\t\n\t\t\t\t\tswitch (state)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase NO_REQUEST:\n\t\t\t\t\t\t\t_requestAnimationFrame(drawCallback);\n\t\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase PENDING_REQUEST:\n\t\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase EXTRA_REQUEST:\n\t\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfunction drawCallback()\n\t\t\t\t{\n\t\t\t\t\tswitch (state)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase NO_REQUEST:\n\t\t\t\t\t\t\t// This state should not be possible. How can there be no\n\t\t\t\t\t\t\t// request, yet somehow we are actively fulfilling a\n\t\t\t\t\t\t\t// request?\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Unexpected draw callback.\\n' +\n\t\t\t\t\t\t\t\t'Please report this to <https://github.com/elm-lang/core/issues>.'\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\tcase PENDING_REQUEST:\n\t\t\t\t\t\t\t// At this point, we do not *know* that another frame is\n\t\t\t\t\t\t\t// needed, but we make an extra request to rAF just in\n\t\t\t\t\t\t\t// case. It's possible to drop a frame if rAF is called\n\t\t\t\t\t\t\t// too late, so we just do it preemptively.\n\t\t\t\t\t\t\t_requestAnimationFrame(drawCallback);\n\t\t\t\t\t\t\tstate = EXTRA_REQUEST;\n\t\n\t\t\t\t\t\t\t// There's also stuff we definitely need to draw.\n\t\t\t\t\t\t\tdraw();\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\tcase EXTRA_REQUEST:\n\t\t\t\t\t\t\t// Turns out the extra request was not needed, so we will\n\t\t\t\t\t\t\t// stop calling rAF. No reason to call it all the time if\n\t\t\t\t\t\t\t// no one needs it.\n\t\t\t\t\t\t\tstate = NO_REQUEST;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfunction draw()\n\t\t\t\t{\n\t\t\t\t\tupdate(elm.node.firstChild, savedScene, scheduledScene);\n\t\t\t\t\tif (elm.Native.Window)\n\t\t\t\t\t{\n\t\t\t\t\t\telm.Native.Window.values.resizeIfNeeded();\n\t\t\t\t\t}\n\t\t\t\t\tsavedScene = scheduledScene;\n\t\t\t\t}\n\t\n\t\t\t\tvar renderer = Elm.Native.Signal.make(elm).output('main', domUpdate, signalGraph);\n\t\n\t\t\t\t// must check for resize after 'renderer' is created so\n\t\t\t\t// that changes show up.\n\t\t\t\tif (elm.Native.Window)\n\t\t\t\t{\n\t\t\t\t\telm.Native.Window.values.resizeIfNeeded();\n\t\t\t\t}\n\t\n\t\t\t\treturn renderer;\n\t\t\t}\n\t\n\t\t\t//// HOT SWAPPING ////\n\t\n\t\t\t// Returns boolean indicating if the swap was successful.\n\t\t\t// Requires that the two signal graphs have exactly the same\n\t\t\t// structure.\n\t\t\tfunction hotSwap(from, to)\n\t\t\t{\n\t\t\t\tfunction similar(nodeOld, nodeNew)\n\t\t\t\t{\n\t\t\t\t\tif (nodeOld.id !== nodeNew.id)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (nodeOld.isOutput)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn nodeNew.isOutput;\n\t\t\t\t\t}\n\t\t\t\t\treturn nodeOld.kids.length === nodeNew.kids.length;\n\t\t\t\t}\n\t\t\t\tfunction swap(nodeOld, nodeNew)\n\t\t\t\t{\n\t\t\t\t\tnodeNew.value = nodeOld.value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n\t\t\t\tif (canSwap)\n\t\t\t\t{\n\t\t\t\t\tdepthFirstTraversals(swap, from.inputs, to.inputs);\n\t\t\t\t}\n\t\t\t\tfrom.node.parentNode.replaceChild(to.node, from.node);\n\t\n\t\t\t\treturn canSwap;\n\t\t\t}\n\t\n\t\t\t// Returns false if the node operation f ever fails.\n\t\t\tfunction depthFirstTraversals(f, queueOld, queueNew)\n\t\t\t{\n\t\t\t\tif (queueOld.length !== queueNew.length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tqueueOld = queueOld.slice(0);\n\t\t\t\tqueueNew = queueNew.slice(0);\n\t\n\t\t\t\tvar seen = [];\n\t\t\t\twhile (queueOld.length > 0 && queueNew.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar nodeOld = queueOld.pop();\n\t\t\t\t\tvar nodeNew = queueNew.pop();\n\t\t\t\t\tif (seen.indexOf(nodeOld.id) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!f(nodeOld, nodeNew))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqueueOld = queueOld.concat(nodeOld.kids || []);\n\t\t\t\t\t\tqueueNew = queueNew.concat(nodeNew.kids || []);\n\t\t\t\t\t\tseen.push(nodeOld.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}());\n\t\n\t\tfunction F2(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return fun(a,b); }; }\n\t\t\twrapper.arity = 2;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F3(fun)\n\t\t{\n\t\t\tfunction wrapper(a) {\n\t\t\t\treturn function(b) { return function(c) { return fun(a, b, c); }; };\n\t\t\t}\n\t\t\twrapper.arity = 3;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F4(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return fun(a, b, c, d); }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 4;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F5(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 5;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F6(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\t\treturn fun(a, b, c, d, e, f); }; }; }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 6;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F7(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\t\treturn function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 7;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F8(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\t\treturn function(g) { return function(h) {\n\t\t\t\treturn fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 8;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction F9(fun)\n\t\t{\n\t\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\t\treturn function(g) { return function(h) { return function(i) {\n\t\t\t\treturn fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n\t\t\t}\n\t\t\twrapper.arity = 9;\n\t\t\twrapper.func = fun;\n\t\t\treturn wrapper;\n\t\t}\n\t\n\t\tfunction A2(fun, a, b)\n\t\t{\n\t\t\treturn fun.arity === 2\n\t\t\t\t? fun.func(a, b)\n\t\t\t\t: fun(a)(b);\n\t\t}\n\t\tfunction A3(fun, a, b, c)\n\t\t{\n\t\t\treturn fun.arity === 3\n\t\t\t\t? fun.func(a, b, c)\n\t\t\t\t: fun(a)(b)(c);\n\t\t}\n\t\tfunction A4(fun, a, b, c, d)\n\t\t{\n\t\t\treturn fun.arity === 4\n\t\t\t\t? fun.func(a, b, c, d)\n\t\t\t\t: fun(a)(b)(c)(d);\n\t\t}\n\t\tfunction A5(fun, a, b, c, d, e)\n\t\t{\n\t\t\treturn fun.arity === 5\n\t\t\t\t? fun.func(a, b, c, d, e)\n\t\t\t\t: fun(a)(b)(c)(d)(e);\n\t\t}\n\t\tfunction A6(fun, a, b, c, d, e, f)\n\t\t{\n\t\t\treturn fun.arity === 6\n\t\t\t\t? fun.func(a, b, c, d, e, f)\n\t\t\t\t: fun(a)(b)(c)(d)(e)(f);\n\t\t}\n\t\tfunction A7(fun, a, b, c, d, e, f, g)\n\t\t{\n\t\t\treturn fun.arity === 7\n\t\t\t\t? fun.func(a, b, c, d, e, f, g)\n\t\t\t\t: fun(a)(b)(c)(d)(e)(f)(g);\n\t\t}\n\t\tfunction A8(fun, a, b, c, d, e, f, g, h)\n\t\t{\n\t\t\treturn fun.arity === 8\n\t\t\t\t? fun.func(a, b, c, d, e, f, g, h)\n\t\t\t\t: fun(a)(b)(c)(d)(e)(f)(g)(h);\n\t\t}\n\t\tfunction A9(fun, a, b, c, d, e, f, g, h, i)\n\t\t{\n\t\t\treturn fun.arity === 9\n\t\t\t\t? fun.func(a, b, c, d, e, f, g, h, i)\n\t\t\t\t: fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n\t\t}\n\t}\n\t\n\tElm.Native = Elm.Native || {};\n\tElm.Native.Utils = {};\n\tElm.Native.Utils.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Utils = localRuntime.Native.Utils || {};\n\t\tif (localRuntime.Native.Utils.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Utils.values;\n\t\t}\n\t\n\t\n\t\t// COMPARISONS\n\t\n\t\tfunction eq(l, r)\n\t\t{\n\t\t\tvar stack = [{'x': l, 'y': r}];\n\t\t\twhile (stack.length > 0)\n\t\t\t{\n\t\t\t\tvar front = stack.pop();\n\t\t\t\tvar x = front.x;\n\t\t\t\tvar y = front.y;\n\t\t\t\tif (x === y)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (typeof x === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar c = 0;\n\t\t\t\t\tfor (var i in x)\n\t\t\t\t\t{\n\t\t\t\t\t\t++c;\n\t\t\t\t\t\tif (i in y)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (i !== 'ctor')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstack.push({ 'x': x[i], 'y': y[i] });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ('ctor' in x)\n\t\t\t\t\t{\n\t\t\t\t\t\tstack.push({'x': x.ctor, 'y': y.ctor});\n\t\t\t\t\t}\n\t\t\t\t\tif (c !== Object.keys(y).length)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof x === 'function')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error('Equality error: general function equality is ' +\n\t\t\t\t\t\t\t\t\t'undecidable, and therefore, unsupported');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\t// code in Generate/JavaScript.hs depends on the particular\n\t\t// integer values assigned to LT, EQ, and GT\n\t\tvar LT = -1, EQ = 0, GT = 1, ord = ['LT', 'EQ', 'GT'];\n\t\n\t\tfunction compare(x, y)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: ord[cmp(x, y) + 1]\n\t\t\t};\n\t\t}\n\t\n\t\tfunction cmp(x, y) {\n\t\t\tvar ord;\n\t\t\tif (typeof x !== 'object')\n\t\t\t{\n\t\t\t\treturn x === y ? EQ : x < y ? LT : GT;\n\t\t\t}\n\t\t\telse if (x.isChar)\n\t\t\t{\n\t\t\t\tvar a = x.toString();\n\t\t\t\tvar b = y.toString();\n\t\t\t\treturn a === b\n\t\t\t\t\t? EQ\n\t\t\t\t\t: a < b\n\t\t\t\t\t\t? LT\n\t\t\t\t\t\t: GT;\n\t\t\t}\n\t\t\telse if (x.ctor === '::' || x.ctor === '[]')\n\t\t\t{\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tif (x.ctor === '[]' && y.ctor === '[]')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn EQ;\n\t\t\t\t\t}\n\t\t\t\t\tif (x.ctor !== y.ctor)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn x.ctor === '[]' ? LT : GT;\n\t\t\t\t\t}\n\t\t\t\t\tord = cmp(x._0, y._0);\n\t\t\t\t\tif (ord !== EQ)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ord;\n\t\t\t\t\t}\n\t\t\t\t\tx = x._1;\n\t\t\t\t\ty = y._1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (x.ctor.slice(0, 6) === '_Tuple')\n\t\t\t{\n\t\t\t\tvar n = x.ctor.slice(6) - 0;\n\t\t\t\tvar err = 'cannot compare tuples with more than 6 elements.';\n\t\t\t\tif (n === 0) return EQ;\n\t\t\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n\t\t\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n\t\t\t\treturn EQ;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new Error('Comparison error: comparison is only defined on ints, ' +\n\t\t\t\t\t\t\t\t'floats, times, chars, strings, lists of comparable values, ' +\n\t\t\t\t\t\t\t\t'and tuples of comparable values.');\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// TUPLES\n\t\n\t\tvar Tuple0 = {\n\t\t\tctor: '_Tuple0'\n\t\t};\n\t\n\t\tfunction Tuple2(x, y)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: x,\n\t\t\t\t_1: y\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// LITERALS\n\t\n\t\tfunction chr(c)\n\t\t{\n\t\t\tvar x = new String(c);\n\t\t\tx.isChar = true;\n\t\t\treturn x;\n\t\t}\n\t\n\t\tfunction txt(str)\n\t\t{\n\t\t\tvar t = new String(str);\n\t\t\tt.text = true;\n\t\t\treturn t;\n\t\t}\n\t\n\t\n\t\t// GUID\n\t\n\t\tvar count = 0;\n\t\tfunction guid(_)\n\t\t{\n\t\t\treturn count++;\n\t\t}\n\t\n\t\n\t\t// RECORDS\n\t\n\t\tfunction update(oldRecord, updatedFields)\n\t\t{\n\t\t\tvar newRecord = {};\n\t\t\tfor (var key in oldRecord)\n\t\t\t{\n\t\t\t\tvar value = (key in updatedFields) ? updatedFields[key] : oldRecord[key];\n\t\t\t\tnewRecord[key] = value;\n\t\t\t}\n\t\t\treturn newRecord;\n\t\t}\n\t\n\t\n\t\t// MOUSE COORDINATES\n\t\n\t\tfunction getXY(e)\n\t\t{\n\t\t\tvar posx = 0;\n\t\t\tvar posy = 0;\n\t\t\tif (e.pageX || e.pageY)\n\t\t\t{\n\t\t\t\tposx = e.pageX;\n\t\t\t\tposy = e.pageY;\n\t\t\t}\n\t\t\telse if (e.clientX || e.clientY)\n\t\t\t{\n\t\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t}\n\t\n\t\t\tif (localRuntime.isEmbed())\n\t\t\t{\n\t\t\t\tvar rect = localRuntime.node.getBoundingClientRect();\n\t\t\t\tvar relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\tvar rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t\t// TODO: figure out if there is a way to avoid rounding here\n\t\t\t\tposx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n\t\t\t\tposy = posy - Math.round(rely) - localRuntime.node.clientTop;\n\t\t\t}\n\t\t\treturn Tuple2(posx, posy);\n\t\t}\n\t\n\t\n\t\t//// LIST STUFF ////\n\t\n\t\tvar Nil = { ctor: '[]' };\n\t\n\t\tfunction Cons(hd, tl)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: hd,\n\t\t\t\t_1: tl\n\t\t\t};\n\t\t}\n\t\n\t\tfunction list(arr)\n\t\t{\n\t\t\tvar out = Nil;\n\t\t\tfor (var i = arr.length; i--; )\n\t\t\t{\n\t\t\t\tout = Cons(arr[i], out);\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\n\t\tfunction range(lo, hi)\n\t\t{\n\t\t\tvar list = Nil;\n\t\t\tif (lo <= hi)\n\t\t\t{\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tlist = Cons(hi, list);\n\t\t\t\t}\n\t\t\t\twhile (hi-- > lo);\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t\n\t\tfunction append(xs, ys)\n\t\t{\n\t\t\t// append Strings\n\t\t\tif (typeof xs === 'string')\n\t\t\t{\n\t\t\t\treturn xs + ys;\n\t\t\t}\n\t\n\t\t\t// append Text\n\t\t\tif (xs.ctor.slice(0, 5) === 'Text:')\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tctor: 'Text:Append',\n\t\t\t\t\t_0: xs,\n\t\t\t\t\t_1: ys\n\t\t\t\t};\n\t\t\t}\n\t\n\t\n\t\t\t// append Lists\n\t\t\tif (xs.ctor === '[]')\n\t\t\t{\n\t\t\t\treturn ys;\n\t\t\t}\n\t\t\tvar root = Cons(xs._0, Nil);\n\t\t\tvar curr = root;\n\t\t\txs = xs._1;\n\t\t\twhile (xs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tcurr._1 = Cons(xs._0, Nil);\n\t\t\t\txs = xs._1;\n\t\t\t\tcurr = curr._1;\n\t\t\t}\n\t\t\tcurr._1 = ys;\n\t\t\treturn root;\n\t\t}\n\t\n\t\n\t\t// CRASHES\n\t\n\t\tfunction crash(moduleName, region)\n\t\t{\n\t\t\treturn function(message) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\n\t\t\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t\t\t+ message\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction crashCase(moduleName, region, value)\n\t\t{\n\t\t\treturn function(message) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\n\t\t\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\n\t\t\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\n\t\t\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t\t\t+ message\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction regionToString(region)\n\t\t{\n\t\t\tif (region.start.line == region.end.line)\n\t\t\t{\n\t\t\t\treturn 'on line ' + region.start.line;\n\t\t\t}\n\t\t\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\n\t\t}\n\t\n\t\n\t\t// BAD PORTS\n\t\n\t\tfunction badPort(expected, received)\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Runtime error when sending values through a port.\\n\\n'\n\t\t\t\t+ 'Expecting ' + expected + ' but was given ' + formatValue(received)\n\t\t\t);\n\t\t}\n\t\n\t\tfunction formatValue(value)\n\t\t{\n\t\t\t// Explicity format undefined values as \"undefined\"\n\t\t\t// because JSON.stringify(undefined) unhelpfully returns \"\"\n\t\t\treturn (value === undefined) ? \"undefined\" : JSON.stringify(value);\n\t\t}\n\t\n\t\n\t\t// TO STRING\n\t\n\t\tvar _Array;\n\t\tvar Dict;\n\t\tvar List;\n\t\n\t\tvar toString = function(v)\n\t\t{\n\t\t\tvar type = typeof v;\n\t\t\tif (type === 'function')\n\t\t\t{\n\t\t\t\tvar name = v.func ? v.func.name : v.name;\n\t\t\t\treturn '<function' + (name === '' ? '' : ': ') + name + '>';\n\t\t\t}\n\t\t\telse if (type === 'boolean')\n\t\t\t{\n\t\t\t\treturn v ? 'True' : 'False';\n\t\t\t}\n\t\t\telse if (type === 'number')\n\t\t\t{\n\t\t\t\treturn v + '';\n\t\t\t}\n\t\t\telse if ((v instanceof String) && v.isChar)\n\t\t\t{\n\t\t\t\treturn '\\'' + addSlashes(v, true) + '\\'';\n\t\t\t}\n\t\t\telse if (type === 'string')\n\t\t\t{\n\t\t\t\treturn '\"' + addSlashes(v, false) + '\"';\n\t\t\t}\n\t\t\telse if (type === 'object' && 'ctor' in v)\n\t\t\t{\n\t\t\t\tif (v.ctor.substring(0, 6) === '_Tuple')\n\t\t\t\t{\n\t\t\t\t\tvar output = [];\n\t\t\t\t\tfor (var k in v)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (k === 'ctor') continue;\n\t\t\t\t\t\toutput.push(toString(v[k]));\n\t\t\t\t\t}\n\t\t\t\t\treturn '(' + output.join(',') + ')';\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === '_Array')\n\t\t\t\t{\n\t\t\t\t\tif (!_Array)\n\t\t\t\t\t{\n\t\t\t\t\t\t_Array = Elm.Array.make(localRuntime);\n\t\t\t\t\t}\n\t\t\t\t\tvar list = _Array.toList(v);\n\t\t\t\t\treturn 'Array.fromList ' + toString(list);\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === '::')\n\t\t\t\t{\n\t\t\t\t\tvar output = '[' + toString(v._0);\n\t\t\t\t\tv = v._1;\n\t\t\t\t\twhile (v.ctor === '::')\n\t\t\t\t\t{\n\t\t\t\t\t\toutput += ',' + toString(v._0);\n\t\t\t\t\t\tv = v._1;\n\t\t\t\t\t}\n\t\t\t\t\treturn output + ']';\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === '[]')\n\t\t\t\t{\n\t\t\t\t\treturn '[]';\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin' || v.ctor === 'Set_elm_builtin')\n\t\t\t\t{\n\t\t\t\t\tif (!Dict)\n\t\t\t\t\t{\n\t\t\t\t\t\tDict = Elm.Dict.make(localRuntime);\n\t\t\t\t\t}\n\t\t\t\t\tvar list;\n\t\t\t\t\tvar name;\n\t\t\t\t\tif (v.ctor === 'Set_elm_builtin')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!List)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tList = Elm.List.make(localRuntime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname = 'Set';\n\t\t\t\t\t\tlist = A2(List.map, function(x) {return x._0; }, Dict.toList(v._0));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tname = 'Dict';\n\t\t\t\t\t\tlist = Dict.toList(v);\n\t\t\t\t\t}\n\t\t\t\t\treturn name + '.fromList ' + toString(list);\n\t\t\t\t}\n\t\t\t\telse if (v.ctor.slice(0, 5) === 'Text:')\n\t\t\t\t{\n\t\t\t\t\treturn '<text>';\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === 'Element_elm_builtin')\n\t\t\t\t{\n\t\t\t\t\treturn '<element>'\n\t\t\t\t}\n\t\t\t\telse if (v.ctor === 'Form_elm_builtin')\n\t\t\t\t{\n\t\t\t\t\treturn '<form>'\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar output = '';\n\t\t\t\t\tfor (var i in v)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i === 'ctor') continue;\n\t\t\t\t\t\tvar str = toString(v[i]);\n\t\t\t\t\t\tvar parenless = str[0] === '{' || str[0] === '<' || str.indexOf(' ') < 0;\n\t\t\t\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t\t\t\t}\n\t\t\t\t\treturn v.ctor + output;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type === 'object' && 'notify' in v && 'id' in v)\n\t\t\t{\n\t\t\t\treturn '<signal>';\n\t\t\t}\n\t\t\telse if (type === 'object')\n\t\t\t{\n\t\t\t\tvar output = [];\n\t\t\t\tfor (var k in v)\n\t\t\t\t{\n\t\t\t\t\toutput.push(k + ' = ' + toString(v[k]));\n\t\t\t\t}\n\t\t\t\tif (output.length === 0)\n\t\t\t\t{\n\t\t\t\t\treturn '{}';\n\t\t\t\t}\n\t\t\t\treturn '{ ' + output.join(', ') + ' }';\n\t\t\t}\n\t\t\treturn '<internal structure>';\n\t\t};\n\t\n\t\tfunction addSlashes(str, isChar)\n\t\t{\n\t\t\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\n\t\t\t\t\t  .replace(/\\n/g, '\\\\n')\n\t\t\t\t\t  .replace(/\\t/g, '\\\\t')\n\t\t\t\t\t  .replace(/\\r/g, '\\\\r')\n\t\t\t\t\t  .replace(/\\v/g, '\\\\v')\n\t\t\t\t\t  .replace(/\\0/g, '\\\\0');\n\t\t\tif (isChar)\n\t\t\t{\n\t\t\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t\t\t}\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Utils.values = {\n\t\t\teq: eq,\n\t\t\tcmp: cmp,\n\t\t\tcompare: F2(compare),\n\t\t\tTuple0: Tuple0,\n\t\t\tTuple2: Tuple2,\n\t\t\tchr: chr,\n\t\t\ttxt: txt,\n\t\t\tupdate: update,\n\t\t\tguid: guid,\n\t\t\tgetXY: getXY,\n\t\n\t\t\tNil: Nil,\n\t\t\tCons: Cons,\n\t\t\tlist: list,\n\t\t\trange: range,\n\t\t\tappend: F2(append),\n\t\n\t\t\tcrash: crash,\n\t\t\tcrashCase: crashCase,\n\t\t\tbadPort: badPort,\n\t\n\t\t\ttoString: toString\n\t\t};\n\t};\n\t\n\tElm.Basics = Elm.Basics || {};\n\tElm.Basics.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Basics = _elm.Basics || {};\n\t   if (_elm.Basics.values) return _elm.Basics.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Native$Basics = Elm.Native.Basics.make(_elm),$Native$Utils = Elm.Native.Utils.make(_elm);\n\t   var _op = {};\n\t   var uncurry = F2(function (f,_p0) {    var _p1 = _p0;return A2(f,_p1._0,_p1._1);});\n\t   var curry = F3(function (f,a,b) {    return f({ctor: \"_Tuple2\",_0: a,_1: b});});\n\t   var flip = F3(function (f,b,a) {    return A2(f,a,b);});\n\t   var snd = function (_p2) {    var _p3 = _p2;return _p3._1;};\n\t   var fst = function (_p4) {    var _p5 = _p4;return _p5._0;};\n\t   var always = F2(function (a,_p6) {    return a;});\n\t   var identity = function (x) {    return x;};\n\t   _op[\"<|\"] = F2(function (f,x) {    return f(x);});\n\t   _op[\"|>\"] = F2(function (x,f) {    return f(x);});\n\t   _op[\">>\"] = F3(function (f,g,x) {    return g(f(x));});\n\t   _op[\"<<\"] = F3(function (g,f,x) {    return g(f(x));});\n\t   _op[\"++\"] = $Native$Utils.append;\n\t   var toString = $Native$Utils.toString;\n\t   var isInfinite = $Native$Basics.isInfinite;\n\t   var isNaN = $Native$Basics.isNaN;\n\t   var toFloat = $Native$Basics.toFloat;\n\t   var ceiling = $Native$Basics.ceiling;\n\t   var floor = $Native$Basics.floor;\n\t   var truncate = $Native$Basics.truncate;\n\t   var round = $Native$Basics.round;\n\t   var not = $Native$Basics.not;\n\t   var xor = $Native$Basics.xor;\n\t   _op[\"||\"] = $Native$Basics.or;\n\t   _op[\"&&\"] = $Native$Basics.and;\n\t   var max = $Native$Basics.max;\n\t   var min = $Native$Basics.min;\n\t   var GT = {ctor: \"GT\"};\n\t   var EQ = {ctor: \"EQ\"};\n\t   var LT = {ctor: \"LT\"};\n\t   var compare = $Native$Basics.compare;\n\t   _op[\">=\"] = $Native$Basics.ge;\n\t   _op[\"<=\"] = $Native$Basics.le;\n\t   _op[\">\"] = $Native$Basics.gt;\n\t   _op[\"<\"] = $Native$Basics.lt;\n\t   _op[\"/=\"] = $Native$Basics.neq;\n\t   _op[\"==\"] = $Native$Basics.eq;\n\t   var e = $Native$Basics.e;\n\t   var pi = $Native$Basics.pi;\n\t   var clamp = $Native$Basics.clamp;\n\t   var logBase = $Native$Basics.logBase;\n\t   var abs = $Native$Basics.abs;\n\t   var negate = $Native$Basics.negate;\n\t   var sqrt = $Native$Basics.sqrt;\n\t   var atan2 = $Native$Basics.atan2;\n\t   var atan = $Native$Basics.atan;\n\t   var asin = $Native$Basics.asin;\n\t   var acos = $Native$Basics.acos;\n\t   var tan = $Native$Basics.tan;\n\t   var sin = $Native$Basics.sin;\n\t   var cos = $Native$Basics.cos;\n\t   _op[\"^\"] = $Native$Basics.exp;\n\t   _op[\"%\"] = $Native$Basics.mod;\n\t   var rem = $Native$Basics.rem;\n\t   _op[\"//\"] = $Native$Basics.div;\n\t   _op[\"/\"] = $Native$Basics.floatDiv;\n\t   _op[\"*\"] = $Native$Basics.mul;\n\t   _op[\"-\"] = $Native$Basics.sub;\n\t   _op[\"+\"] = $Native$Basics.add;\n\t   var toPolar = $Native$Basics.toPolar;\n\t   var fromPolar = $Native$Basics.fromPolar;\n\t   var turns = $Native$Basics.turns;\n\t   var degrees = $Native$Basics.degrees;\n\t   var radians = function (t) {    return t;};\n\t   return _elm.Basics.values = {_op: _op\n\t                               ,max: max\n\t                               ,min: min\n\t                               ,compare: compare\n\t                               ,not: not\n\t                               ,xor: xor\n\t                               ,rem: rem\n\t                               ,negate: negate\n\t                               ,abs: abs\n\t                               ,sqrt: sqrt\n\t                               ,clamp: clamp\n\t                               ,logBase: logBase\n\t                               ,e: e\n\t                               ,pi: pi\n\t                               ,cos: cos\n\t                               ,sin: sin\n\t                               ,tan: tan\n\t                               ,acos: acos\n\t                               ,asin: asin\n\t                               ,atan: atan\n\t                               ,atan2: atan2\n\t                               ,round: round\n\t                               ,floor: floor\n\t                               ,ceiling: ceiling\n\t                               ,truncate: truncate\n\t                               ,toFloat: toFloat\n\t                               ,degrees: degrees\n\t                               ,radians: radians\n\t                               ,turns: turns\n\t                               ,toPolar: toPolar\n\t                               ,fromPolar: fromPolar\n\t                               ,isNaN: isNaN\n\t                               ,isInfinite: isInfinite\n\t                               ,toString: toString\n\t                               ,fst: fst\n\t                               ,snd: snd\n\t                               ,identity: identity\n\t                               ,always: always\n\t                               ,flip: flip\n\t                               ,curry: curry\n\t                               ,uncurry: uncurry\n\t                               ,LT: LT\n\t                               ,EQ: EQ\n\t                               ,GT: GT};\n\t};\n\tElm.Maybe = Elm.Maybe || {};\n\tElm.Maybe.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Maybe = _elm.Maybe || {};\n\t   if (_elm.Maybe.values) return _elm.Maybe.values;\n\t   var _U = Elm.Native.Utils.make(_elm);\n\t   var _op = {};\n\t   var withDefault = F2(function ($default,maybe) {    var _p0 = maybe;if (_p0.ctor === \"Just\") {    return _p0._0;} else {    return $default;}});\n\t   var Nothing = {ctor: \"Nothing\"};\n\t   var oneOf = function (maybes) {\n\t      oneOf: while (true) {\n\t         var _p1 = maybes;\n\t         if (_p1.ctor === \"[]\") {\n\t               return Nothing;\n\t            } else {\n\t               var _p3 = _p1._0;\n\t               var _p2 = _p3;\n\t               if (_p2.ctor === \"Nothing\") {\n\t                     var _v3 = _p1._1;\n\t                     maybes = _v3;\n\t                     continue oneOf;\n\t                  } else {\n\t                     return _p3;\n\t                  }\n\t            }\n\t      }\n\t   };\n\t   var andThen = F2(function (maybeValue,callback) {\n\t      var _p4 = maybeValue;\n\t      if (_p4.ctor === \"Just\") {\n\t            return callback(_p4._0);\n\t         } else {\n\t            return Nothing;\n\t         }\n\t   });\n\t   var Just = function (a) {    return {ctor: \"Just\",_0: a};};\n\t   var map = F2(function (f,maybe) {    var _p5 = maybe;if (_p5.ctor === \"Just\") {    return Just(f(_p5._0));} else {    return Nothing;}});\n\t   var map2 = F3(function (func,ma,mb) {\n\t      var _p6 = {ctor: \"_Tuple2\",_0: ma,_1: mb};\n\t      if (_p6.ctor === \"_Tuple2\" && _p6._0.ctor === \"Just\" && _p6._1.ctor === \"Just\") {\n\t            return Just(A2(func,_p6._0._0,_p6._1._0));\n\t         } else {\n\t            return Nothing;\n\t         }\n\t   });\n\t   var map3 = F4(function (func,ma,mb,mc) {\n\t      var _p7 = {ctor: \"_Tuple3\",_0: ma,_1: mb,_2: mc};\n\t      if (_p7.ctor === \"_Tuple3\" && _p7._0.ctor === \"Just\" && _p7._1.ctor === \"Just\" && _p7._2.ctor === \"Just\") {\n\t            return Just(A3(func,_p7._0._0,_p7._1._0,_p7._2._0));\n\t         } else {\n\t            return Nothing;\n\t         }\n\t   });\n\t   var map4 = F5(function (func,ma,mb,mc,md) {\n\t      var _p8 = {ctor: \"_Tuple4\",_0: ma,_1: mb,_2: mc,_3: md};\n\t      if (_p8.ctor === \"_Tuple4\" && _p8._0.ctor === \"Just\" && _p8._1.ctor === \"Just\" && _p8._2.ctor === \"Just\" && _p8._3.ctor === \"Just\") {\n\t            return Just(A4(func,_p8._0._0,_p8._1._0,_p8._2._0,_p8._3._0));\n\t         } else {\n\t            return Nothing;\n\t         }\n\t   });\n\t   var map5 = F6(function (func,ma,mb,mc,md,me) {\n\t      var _p9 = {ctor: \"_Tuple5\",_0: ma,_1: mb,_2: mc,_3: md,_4: me};\n\t      if (_p9.ctor === \"_Tuple5\" && _p9._0.ctor === \"Just\" && _p9._1.ctor === \"Just\" && _p9._2.ctor === \"Just\" && _p9._3.ctor === \"Just\" && _p9._4.ctor === \"Just\")\n\t      {\n\t            return Just(A5(func,_p9._0._0,_p9._1._0,_p9._2._0,_p9._3._0,_p9._4._0));\n\t         } else {\n\t            return Nothing;\n\t         }\n\t   });\n\t   return _elm.Maybe.values = {_op: _op\n\t                              ,andThen: andThen\n\t                              ,map: map\n\t                              ,map2: map2\n\t                              ,map3: map3\n\t                              ,map4: map4\n\t                              ,map5: map5\n\t                              ,withDefault: withDefault\n\t                              ,oneOf: oneOf\n\t                              ,Just: Just\n\t                              ,Nothing: Nothing};\n\t};\n\tElm.Native.List = {};\n\tElm.Native.List.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.List = localRuntime.Native.List || {};\n\t\tif (localRuntime.Native.List.values)\n\t\t{\n\t\t\treturn localRuntime.Native.List.values;\n\t\t}\n\t\tif ('values' in Elm.Native.List)\n\t\t{\n\t\t\treturn localRuntime.Native.List.values = Elm.Native.List.values;\n\t\t}\n\t\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\tvar Nil = Utils.Nil;\n\t\tvar Cons = Utils.Cons;\n\t\n\t\tvar fromArray = Utils.list;\n\t\n\t\tfunction toArray(xs)\n\t\t{\n\t\t\tvar out = [];\n\t\t\twhile (xs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tout.push(xs._0);\n\t\t\t\txs = xs._1;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\n\t\t// f defined similarly for both foldl and foldr (NB: different from Haskell)\n\t\t// ie, foldl : (a -> b -> b) -> b -> [a] -> b\n\t\tfunction foldl(f, b, xs)\n\t\t{\n\t\t\tvar acc = b;\n\t\t\twhile (xs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tacc = A2(f, xs._0, acc);\n\t\t\t\txs = xs._1;\n\t\t\t}\n\t\t\treturn acc;\n\t\t}\n\t\n\t\tfunction foldr(f, b, xs)\n\t\t{\n\t\t\tvar arr = toArray(xs);\n\t\t\tvar acc = b;\n\t\t\tfor (var i = arr.length; i--; )\n\t\t\t{\n\t\t\t\tacc = A2(f, arr[i], acc);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}\n\t\n\t\tfunction map2(f, xs, ys)\n\t\t{\n\t\t\tvar arr = [];\n\t\t\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\n\t\t\t{\n\t\t\t\tarr.push(A2(f, xs._0, ys._0));\n\t\t\t\txs = xs._1;\n\t\t\t\tys = ys._1;\n\t\t\t}\n\t\t\treturn fromArray(arr);\n\t\t}\n\t\n\t\tfunction map3(f, xs, ys, zs)\n\t\t{\n\t\t\tvar arr = [];\n\t\t\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\n\t\t\t\txs = xs._1;\n\t\t\t\tys = ys._1;\n\t\t\t\tzs = zs._1;\n\t\t\t}\n\t\t\treturn fromArray(arr);\n\t\t}\n\t\n\t\tfunction map4(f, ws, xs, ys, zs)\n\t\t{\n\t\t\tvar arr = [];\n\t\t\twhile (   ws.ctor !== '[]'\n\t\t\t\t   && xs.ctor !== '[]'\n\t\t\t\t   && ys.ctor !== '[]'\n\t\t\t\t   && zs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n\t\t\t\tws = ws._1;\n\t\t\t\txs = xs._1;\n\t\t\t\tys = ys._1;\n\t\t\t\tzs = zs._1;\n\t\t\t}\n\t\t\treturn fromArray(arr);\n\t\t}\n\t\n\t\tfunction map5(f, vs, ws, xs, ys, zs)\n\t\t{\n\t\t\tvar arr = [];\n\t\t\twhile (   vs.ctor !== '[]'\n\t\t\t\t   && ws.ctor !== '[]'\n\t\t\t\t   && xs.ctor !== '[]'\n\t\t\t\t   && ys.ctor !== '[]'\n\t\t\t\t   && zs.ctor !== '[]')\n\t\t\t{\n\t\t\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n\t\t\t\tvs = vs._1;\n\t\t\t\tws = ws._1;\n\t\t\t\txs = xs._1;\n\t\t\t\tys = ys._1;\n\t\t\t\tzs = zs._1;\n\t\t\t}\n\t\t\treturn fromArray(arr);\n\t\t}\n\t\n\t\tfunction sortBy(f, xs)\n\t\t{\n\t\t\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\t\t\treturn Utils.cmp(f(a), f(b));\n\t\t\t}));\n\t\t}\n\t\n\t\tfunction sortWith(f, xs)\n\t\t{\n\t\t\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\t\t\tvar ord = f(a)(b).ctor;\n\t\t\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n\t\t\t}));\n\t\t}\n\t\n\t\tfunction take(n, xs)\n\t\t{\n\t\t\tvar arr = [];\n\t\t\twhile (xs.ctor !== '[]' && n > 0)\n\t\t\t{\n\t\t\t\tarr.push(xs._0);\n\t\t\t\txs = xs._1;\n\t\t\t\t--n;\n\t\t\t}\n\t\t\treturn fromArray(arr);\n\t\t}\n\t\n\t\n\t\tElm.Native.List.values = {\n\t\t\tNil: Nil,\n\t\t\tCons: Cons,\n\t\t\tcons: F2(Cons),\n\t\t\ttoArray: toArray,\n\t\t\tfromArray: fromArray,\n\t\n\t\t\tfoldl: F3(foldl),\n\t\t\tfoldr: F3(foldr),\n\t\n\t\t\tmap2: F3(map2),\n\t\t\tmap3: F4(map3),\n\t\t\tmap4: F5(map4),\n\t\t\tmap5: F6(map5),\n\t\t\tsortBy: F2(sortBy),\n\t\t\tsortWith: F2(sortWith),\n\t\t\ttake: F2(take)\n\t\t};\n\t\treturn localRuntime.Native.List.values = Elm.Native.List.values;\n\t};\n\t\n\tElm.List = Elm.List || {};\n\tElm.List.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.List = _elm.List || {};\n\t   if (_elm.List.values) return _elm.List.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Maybe = Elm.Maybe.make(_elm),$Native$List = Elm.Native.List.make(_elm);\n\t   var _op = {};\n\t   var sortWith = $Native$List.sortWith;\n\t   var sortBy = $Native$List.sortBy;\n\t   var sort = function (xs) {    return A2(sortBy,$Basics.identity,xs);};\n\t   var drop = F2(function (n,list) {\n\t      drop: while (true) if (_U.cmp(n,0) < 1) return list; else {\n\t            var _p0 = list;\n\t            if (_p0.ctor === \"[]\") {\n\t                  return list;\n\t               } else {\n\t                  var _v1 = n - 1,_v2 = _p0._1;\n\t                  n = _v1;\n\t                  list = _v2;\n\t                  continue drop;\n\t               }\n\t         }\n\t   });\n\t   var take = $Native$List.take;\n\t   var map5 = $Native$List.map5;\n\t   var map4 = $Native$List.map4;\n\t   var map3 = $Native$List.map3;\n\t   var map2 = $Native$List.map2;\n\t   var any = F2(function (isOkay,list) {\n\t      any: while (true) {\n\t         var _p1 = list;\n\t         if (_p1.ctor === \"[]\") {\n\t               return false;\n\t            } else {\n\t               if (isOkay(_p1._0)) return true; else {\n\t                     var _v4 = isOkay,_v5 = _p1._1;\n\t                     isOkay = _v4;\n\t                     list = _v5;\n\t                     continue any;\n\t                  }\n\t            }\n\t      }\n\t   });\n\t   var all = F2(function (isOkay,list) {    return $Basics.not(A2(any,function (_p2) {    return $Basics.not(isOkay(_p2));},list));});\n\t   var foldr = $Native$List.foldr;\n\t   var foldl = $Native$List.foldl;\n\t   var length = function (xs) {    return A3(foldl,F2(function (_p3,i) {    return i + 1;}),0,xs);};\n\t   var sum = function (numbers) {    return A3(foldl,F2(function (x,y) {    return x + y;}),0,numbers);};\n\t   var product = function (numbers) {    return A3(foldl,F2(function (x,y) {    return x * y;}),1,numbers);};\n\t   var maximum = function (list) {\n\t      var _p4 = list;\n\t      if (_p4.ctor === \"::\") {\n\t            return $Maybe.Just(A3(foldl,$Basics.max,_p4._0,_p4._1));\n\t         } else {\n\t            return $Maybe.Nothing;\n\t         }\n\t   };\n\t   var minimum = function (list) {\n\t      var _p5 = list;\n\t      if (_p5.ctor === \"::\") {\n\t            return $Maybe.Just(A3(foldl,$Basics.min,_p5._0,_p5._1));\n\t         } else {\n\t            return $Maybe.Nothing;\n\t         }\n\t   };\n\t   var indexedMap = F2(function (f,xs) {    return A3(map2,f,_U.range(0,length(xs) - 1),xs);});\n\t   var member = F2(function (x,xs) {    return A2(any,function (a) {    return _U.eq(a,x);},xs);});\n\t   var isEmpty = function (xs) {    var _p6 = xs;if (_p6.ctor === \"[]\") {    return true;} else {    return false;}};\n\t   var tail = function (list) {    var _p7 = list;if (_p7.ctor === \"::\") {    return $Maybe.Just(_p7._1);} else {    return $Maybe.Nothing;}};\n\t   var head = function (list) {    var _p8 = list;if (_p8.ctor === \"::\") {    return $Maybe.Just(_p8._0);} else {    return $Maybe.Nothing;}};\n\t   _op[\"::\"] = $Native$List.cons;\n\t   var map = F2(function (f,xs) {    return A3(foldr,F2(function (x,acc) {    return A2(_op[\"::\"],f(x),acc);}),_U.list([]),xs);});\n\t   var filter = F2(function (pred,xs) {\n\t      var conditionalCons = F2(function (x,xs$) {    return pred(x) ? A2(_op[\"::\"],x,xs$) : xs$;});\n\t      return A3(foldr,conditionalCons,_U.list([]),xs);\n\t   });\n\t   var maybeCons = F3(function (f,mx,xs) {    var _p9 = f(mx);if (_p9.ctor === \"Just\") {    return A2(_op[\"::\"],_p9._0,xs);} else {    return xs;}});\n\t   var filterMap = F2(function (f,xs) {    return A3(foldr,maybeCons(f),_U.list([]),xs);});\n\t   var reverse = function (list) {    return A3(foldl,F2(function (x,y) {    return A2(_op[\"::\"],x,y);}),_U.list([]),list);};\n\t   var scanl = F3(function (f,b,xs) {\n\t      var scan1 = F2(function (x,accAcc) {\n\t         var _p10 = accAcc;\n\t         if (_p10.ctor === \"::\") {\n\t               return A2(_op[\"::\"],A2(f,x,_p10._0),accAcc);\n\t            } else {\n\t               return _U.list([]);\n\t            }\n\t      });\n\t      return reverse(A3(foldl,scan1,_U.list([b]),xs));\n\t   });\n\t   var append = F2(function (xs,ys) {\n\t      var _p11 = ys;\n\t      if (_p11.ctor === \"[]\") {\n\t            return xs;\n\t         } else {\n\t            return A3(foldr,F2(function (x,y) {    return A2(_op[\"::\"],x,y);}),ys,xs);\n\t         }\n\t   });\n\t   var concat = function (lists) {    return A3(foldr,append,_U.list([]),lists);};\n\t   var concatMap = F2(function (f,list) {    return concat(A2(map,f,list));});\n\t   var partition = F2(function (pred,list) {\n\t      var step = F2(function (x,_p12) {\n\t         var _p13 = _p12;\n\t         var _p15 = _p13._0;\n\t         var _p14 = _p13._1;\n\t         return pred(x) ? {ctor: \"_Tuple2\",_0: A2(_op[\"::\"],x,_p15),_1: _p14} : {ctor: \"_Tuple2\",_0: _p15,_1: A2(_op[\"::\"],x,_p14)};\n\t      });\n\t      return A3(foldr,step,{ctor: \"_Tuple2\",_0: _U.list([]),_1: _U.list([])},list);\n\t   });\n\t   var unzip = function (pairs) {\n\t      var step = F2(function (_p17,_p16) {\n\t         var _p18 = _p17;\n\t         var _p19 = _p16;\n\t         return {ctor: \"_Tuple2\",_0: A2(_op[\"::\"],_p18._0,_p19._0),_1: A2(_op[\"::\"],_p18._1,_p19._1)};\n\t      });\n\t      return A3(foldr,step,{ctor: \"_Tuple2\",_0: _U.list([]),_1: _U.list([])},pairs);\n\t   };\n\t   var intersperse = F2(function (sep,xs) {\n\t      var _p20 = xs;\n\t      if (_p20.ctor === \"[]\") {\n\t            return _U.list([]);\n\t         } else {\n\t            var step = F2(function (x,rest) {    return A2(_op[\"::\"],sep,A2(_op[\"::\"],x,rest));});\n\t            var spersed = A3(foldr,step,_U.list([]),_p20._1);\n\t            return A2(_op[\"::\"],_p20._0,spersed);\n\t         }\n\t   });\n\t   var repeatHelp = F3(function (result,n,value) {\n\t      repeatHelp: while (true) if (_U.cmp(n,0) < 1) return result; else {\n\t            var _v18 = A2(_op[\"::\"],value,result),_v19 = n - 1,_v20 = value;\n\t            result = _v18;\n\t            n = _v19;\n\t            value = _v20;\n\t            continue repeatHelp;\n\t         }\n\t   });\n\t   var repeat = F2(function (n,value) {    return A3(repeatHelp,_U.list([]),n,value);});\n\t   return _elm.List.values = {_op: _op\n\t                             ,isEmpty: isEmpty\n\t                             ,length: length\n\t                             ,reverse: reverse\n\t                             ,member: member\n\t                             ,head: head\n\t                             ,tail: tail\n\t                             ,filter: filter\n\t                             ,take: take\n\t                             ,drop: drop\n\t                             ,repeat: repeat\n\t                             ,append: append\n\t                             ,concat: concat\n\t                             ,intersperse: intersperse\n\t                             ,partition: partition\n\t                             ,unzip: unzip\n\t                             ,map: map\n\t                             ,map2: map2\n\t                             ,map3: map3\n\t                             ,map4: map4\n\t                             ,map5: map5\n\t                             ,filterMap: filterMap\n\t                             ,concatMap: concatMap\n\t                             ,indexedMap: indexedMap\n\t                             ,foldr: foldr\n\t                             ,foldl: foldl\n\t                             ,sum: sum\n\t                             ,product: product\n\t                             ,maximum: maximum\n\t                             ,minimum: minimum\n\t                             ,all: all\n\t                             ,any: any\n\t                             ,scanl: scanl\n\t                             ,sort: sort\n\t                             ,sortBy: sortBy\n\t                             ,sortWith: sortWith};\n\t};\n\tElm.Native.Transform2D = {};\n\tElm.Native.Transform2D.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Transform2D = localRuntime.Native.Transform2D || {};\n\t\tif (localRuntime.Native.Transform2D.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Transform2D.values;\n\t\t}\n\t\n\t\tvar A;\n\t\tif (typeof Float32Array === 'undefined')\n\t\t{\n\t\t\tA = function(arr)\n\t\t\t{\n\t\t\t\tthis.length = arr.length;\n\t\t\t\tthis[0] = arr[0];\n\t\t\t\tthis[1] = arr[1];\n\t\t\t\tthis[2] = arr[2];\n\t\t\t\tthis[3] = arr[3];\n\t\t\t\tthis[4] = arr[4];\n\t\t\t\tthis[5] = arr[5];\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tA = Float32Array;\n\t\t}\n\t\n\t\t// layout of matrix in an array is\n\t\t//\n\t\t//   | m11 m12 dx |\n\t\t//   | m21 m22 dy |\n\t\t//   |  0   0   1 |\n\t\t//\n\t\t//  new A([ m11, m12, dx, m21, m22, dy ])\n\t\n\t\tvar identity = new A([1, 0, 0, 0, 1, 0]);\n\t\tfunction matrix(m11, m12, m21, m22, dx, dy)\n\t\t{\n\t\t\treturn new A([m11, m12, dx, m21, m22, dy]);\n\t\t}\n\t\n\t\tfunction rotation(t)\n\t\t{\n\t\t\tvar c = Math.cos(t);\n\t\t\tvar s = Math.sin(t);\n\t\t\treturn new A([c, -s, 0, s, c, 0]);\n\t\t}\n\t\n\t\tfunction rotate(t, m)\n\t\t{\n\t\t\tvar c = Math.cos(t);\n\t\t\tvar s = Math.sin(t);\n\t\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n\t\t\treturn new A([m11 * c + m12 * s, -m11 * s + m12 * c, m[2],\n\t\t\t\t\t\t  m21 * c + m22 * s, -m21 * s + m22 * c, m[5]]);\n\t\t}\n\t\t/*\n\t\tfunction move(xy,m) {\n\t\t\tvar x = xy._0;\n\t\t\tvar y = xy._1;\n\t\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n\t\t\treturn new A([m11, m12, m11*x + m12*y + m[2],\n\t\t\t\t\t\t  m21, m22, m21*x + m22*y + m[5]]);\n\t\t}\n\t\tfunction scale(s,m) { return new A([m[0]*s, m[1]*s, m[2], m[3]*s, m[4]*s, m[5]]); }\n\t\tfunction scaleX(x,m) { return new A([m[0]*x, m[1], m[2], m[3]*x, m[4], m[5]]); }\n\t\tfunction scaleY(y,m) { return new A([m[0], m[1]*y, m[2], m[3], m[4]*y, m[5]]); }\n\t\tfunction reflectX(m) { return new A([-m[0], m[1], m[2], -m[3], m[4], m[5]]); }\n\t\tfunction reflectY(m) { return new A([m[0], -m[1], m[2], m[3], -m[4], m[5]]); }\n\t\n\t\tfunction transform(m11, m21, m12, m22, mdx, mdy, n) {\n\t\t\tvar n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n\t\t\treturn new A([m11*n11 + m12*n21,\n\t\t\t\t\t\t  m11*n12 + m12*n22,\n\t\t\t\t\t\t  m11*ndx + m12*ndy + mdx,\n\t\t\t\t\t\t  m21*n11 + m22*n21,\n\t\t\t\t\t\t  m21*n12 + m22*n22,\n\t\t\t\t\t\t  m21*ndx + m22*ndy + mdy]);\n\t\t}\n\t\t*/\n\t\tfunction multiply(m, n)\n\t\t{\n\t\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4], mdx = m[2], mdy = m[5];\n\t\t\tvar n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n\t\t\treturn new A([m11 * n11 + m12 * n21,\n\t\t\t\t\t\t  m11 * n12 + m12 * n22,\n\t\t\t\t\t\t  m11 * ndx + m12 * ndy + mdx,\n\t\t\t\t\t\t  m21 * n11 + m22 * n21,\n\t\t\t\t\t\t  m21 * n12 + m22 * n22,\n\t\t\t\t\t\t  m21 * ndx + m22 * ndy + mdy]);\n\t\t}\n\t\n\t\treturn localRuntime.Native.Transform2D.values = {\n\t\t\tidentity: identity,\n\t\t\tmatrix: F6(matrix),\n\t\t\trotation: rotation,\n\t\t\tmultiply: F2(multiply)\n\t\t\t/*\n\t\t\ttransform: F7(transform),\n\t\t\trotate: F2(rotate),\n\t\t\tmove: F2(move),\n\t\t\tscale: F2(scale),\n\t\t\tscaleX: F2(scaleX),\n\t\t\tscaleY: F2(scaleY),\n\t\t\treflectX: reflectX,\n\t\t\treflectY: reflectY\n\t\t\t*/\n\t\t};\n\t};\n\t\n\tElm.Transform2D = Elm.Transform2D || {};\n\tElm.Transform2D.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Transform2D = _elm.Transform2D || {};\n\t   if (_elm.Transform2D.values) return _elm.Transform2D.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Native$Transform2D = Elm.Native.Transform2D.make(_elm);\n\t   var _op = {};\n\t   var multiply = $Native$Transform2D.multiply;\n\t   var rotation = $Native$Transform2D.rotation;\n\t   var matrix = $Native$Transform2D.matrix;\n\t   var translation = F2(function (x,y) {    return A6(matrix,1,0,0,1,x,y);});\n\t   var scale = function (s) {    return A6(matrix,s,0,0,s,0,0);};\n\t   var scaleX = function (x) {    return A6(matrix,x,0,0,1,0,0);};\n\t   var scaleY = function (y) {    return A6(matrix,1,0,0,y,0,0);};\n\t   var identity = $Native$Transform2D.identity;\n\t   var Transform2D = {ctor: \"Transform2D\"};\n\t   return _elm.Transform2D.values = {_op: _op\n\t                                    ,identity: identity\n\t                                    ,matrix: matrix\n\t                                    ,multiply: multiply\n\t                                    ,rotation: rotation\n\t                                    ,translation: translation\n\t                                    ,scale: scale\n\t                                    ,scaleX: scaleX\n\t                                    ,scaleY: scaleY};\n\t};\n\t\n\t// setup\n\tElm.Native = Elm.Native || {};\n\tElm.Native.Graphics = Elm.Native.Graphics || {};\n\tElm.Native.Graphics.Collage = Elm.Native.Graphics.Collage || {};\n\t\n\t// definition\n\tElm.Native.Graphics.Collage.make = function(localRuntime) {\n\t\t'use strict';\n\t\n\t\t// attempt to short-circuit\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n\t\tlocalRuntime.Native.Graphics.Collage = localRuntime.Native.Graphics.Collage || {};\n\t\tif ('values' in localRuntime.Native.Graphics.Collage)\n\t\t{\n\t\t\treturn localRuntime.Native.Graphics.Collage.values;\n\t\t}\n\t\n\t\t// okay, we cannot short-ciruit, so now we define everything\n\t\tvar Color = Elm.Native.Color.make(localRuntime);\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\tvar NativeElement = Elm.Native.Graphics.Element.make(localRuntime);\n\t\tvar Transform = Elm.Transform2D.make(localRuntime);\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\tfunction setStrokeStyle(ctx, style)\n\t\t{\n\t\t\tctx.lineWidth = style.width;\n\t\n\t\t\tvar cap = style.cap.ctor;\n\t\t\tctx.lineCap = cap === 'Flat'\n\t\t\t\t? 'butt'\n\t\t\t\t: cap === 'Round'\n\t\t\t\t\t? 'round'\n\t\t\t\t\t: 'square';\n\t\n\t\t\tvar join = style.join.ctor;\n\t\t\tctx.lineJoin = join === 'Smooth'\n\t\t\t\t? 'round'\n\t\t\t\t: join === 'Sharp'\n\t\t\t\t\t? 'miter'\n\t\t\t\t\t: 'bevel';\n\t\n\t\t\tctx.miterLimit = style.join._0 || 10;\n\t\t\tctx.strokeStyle = Color.toCss(style.color);\n\t\t}\n\t\n\t\tfunction setFillStyle(redo, ctx, style)\n\t\t{\n\t\t\tvar sty = style.ctor;\n\t\t\tctx.fillStyle = sty === 'Solid'\n\t\t\t\t? Color.toCss(style._0)\n\t\t\t\t: sty === 'Texture'\n\t\t\t\t\t? texture(redo, ctx, style._0)\n\t\t\t\t\t: gradient(ctx, style._0);\n\t\t}\n\t\n\t\tfunction trace(ctx, path)\n\t\t{\n\t\t\tvar points = List.toArray(path);\n\t\t\tvar i = points.length - 1;\n\t\t\tif (i <= 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.moveTo(points[i]._0, points[i]._1);\n\t\t\twhile (i--)\n\t\t\t{\n\t\t\t\tctx.lineTo(points[i]._0, points[i]._1);\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t{\n\t\t\t\ti = points.length - 1;\n\t\t\t\tctx.lineTo(points[i]._0, points[i]._1);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction line(ctx, style, path)\n\t\t{\n\t\t\tif (style.dashing.ctor === '[]')\n\t\t\t{\n\t\t\t\ttrace(ctx, path);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcustomLineHelp(ctx, style, path);\n\t\t\t}\n\t\t\tctx.scale(1, -1);\n\t\t\tctx.stroke();\n\t\t}\n\t\n\t\tfunction customLineHelp(ctx, style, path)\n\t\t{\n\t\t\tvar points = List.toArray(path);\n\t\t\tif (path.closed)\n\t\t\t{\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\t\t\tvar pattern = List.toArray(style.dashing);\n\t\t\tvar i = points.length - 1;\n\t\t\tif (i <= 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar x0 = points[i]._0, y0 = points[i]._1;\n\t\t\tvar x1 = 0, y1 = 0, dx = 0, dy = 0, remaining = 0;\n\t\t\tvar pindex = 0, plen = pattern.length;\n\t\t\tvar draw = true, segmentLength = pattern[0];\n\t\t\tctx.moveTo(x0, y0);\n\t\t\twhile (i--)\n\t\t\t{\n\t\t\t\tx1 = points[i]._0;\n\t\t\t\ty1 = points[i]._1;\n\t\t\t\tdx = x1 - x0;\n\t\t\t\tdy = y1 - y0;\n\t\t\t\tremaining = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\twhile (segmentLength <= remaining)\n\t\t\t\t{\n\t\t\t\t\tx0 += dx * segmentLength / remaining;\n\t\t\t\t\ty0 += dy * segmentLength / remaining;\n\t\t\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x0, y0);\n\t\t\t\t\t// update starting position\n\t\t\t\t\tdx = x1 - x0;\n\t\t\t\t\tdy = y1 - y0;\n\t\t\t\t\tremaining = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\t// update pattern\n\t\t\t\t\tdraw = !draw;\n\t\t\t\t\tpindex = (pindex + 1) % plen;\n\t\t\t\t\tsegmentLength = pattern[pindex];\n\t\t\t\t}\n\t\t\t\tif (remaining > 0)\n\t\t\t\t{\n\t\t\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x1, y1);\n\t\t\t\t\tsegmentLength -= remaining;\n\t\t\t\t}\n\t\t\t\tx0 = x1;\n\t\t\t\ty0 = y1;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction drawLine(ctx, style, path)\n\t\t{\n\t\t\tsetStrokeStyle(ctx, style);\n\t\t\treturn line(ctx, style, path);\n\t\t}\n\t\n\t\tfunction texture(redo, ctx, src)\n\t\t{\n\t\t\tvar img = new Image();\n\t\t\timg.src = src;\n\t\t\timg.onload = redo;\n\t\t\treturn ctx.createPattern(img, 'repeat');\n\t\t}\n\t\n\t\tfunction gradient(ctx, grad)\n\t\t{\n\t\t\tvar g;\n\t\t\tvar stops = [];\n\t\t\tif (grad.ctor === 'Linear')\n\t\t\t{\n\t\t\t\tvar p0 = grad._0, p1 = grad._1;\n\t\t\t\tg = ctx.createLinearGradient(p0._0, -p0._1, p1._0, -p1._1);\n\t\t\t\tstops = List.toArray(grad._2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar p0 = grad._0, p2 = grad._2;\n\t\t\t\tg = ctx.createRadialGradient(p0._0, -p0._1, grad._1, p2._0, -p2._1, grad._3);\n\t\t\t\tstops = List.toArray(grad._4);\n\t\t\t}\n\t\t\tvar len = stops.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tg.addColorStop(stop._0, Color.toCss(stop._1));\n\t\t\t}\n\t\t\treturn g;\n\t\t}\n\t\n\t\tfunction drawShape(redo, ctx, style, path)\n\t\t{\n\t\t\ttrace(ctx, path);\n\t\t\tsetFillStyle(redo, ctx, style);\n\t\t\tctx.scale(1, -1);\n\t\t\tctx.fill();\n\t\t}\n\t\n\t\n\t\t// TEXT RENDERING\n\t\n\t\tfunction fillText(redo, ctx, text)\n\t\t{\n\t\t\tdrawText(ctx, text, ctx.fillText);\n\t\t}\n\t\n\t\tfunction strokeText(redo, ctx, style, text)\n\t\t{\n\t\t\tsetStrokeStyle(ctx, style);\n\t\t\t// Use native canvas API for dashes only for text for now\n\t\t\t// Degrades to non-dashed on IE 9 + 10\n\t\t\tif (style.dashing.ctor !== '[]' && ctx.setLineDash)\n\t\t\t{\n\t\t\t\tvar pattern = List.toArray(style.dashing);\n\t\t\t\tctx.setLineDash(pattern);\n\t\t\t}\n\t\t\tdrawText(ctx, text, ctx.strokeText);\n\t\t}\n\t\n\t\tfunction drawText(ctx, text, canvasDrawFn)\n\t\t{\n\t\t\tvar textChunks = chunkText(defaultContext, text);\n\t\n\t\t\tvar totalWidth = 0;\n\t\t\tvar maxHeight = 0;\n\t\t\tvar numChunks = textChunks.length;\n\t\n\t\t\tctx.scale(1,-1);\n\t\n\t\t\tfor (var i = numChunks; i--; )\n\t\t\t{\n\t\t\t\tvar chunk = textChunks[i];\n\t\t\t\tctx.font = chunk.font;\n\t\t\t\tvar metrics = ctx.measureText(chunk.text);\n\t\t\t\tchunk.width = metrics.width;\n\t\t\t\ttotalWidth += chunk.width;\n\t\t\t\tif (chunk.height > maxHeight)\n\t\t\t\t{\n\t\t\t\t\tmaxHeight = chunk.height;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar x = -totalWidth / 2.0;\n\t\t\tfor (var i = 0; i < numChunks; ++i)\n\t\t\t{\n\t\t\t\tvar chunk = textChunks[i];\n\t\t\t\tctx.font = chunk.font;\n\t\t\t\tctx.fillStyle = chunk.color;\n\t\t\t\tcanvasDrawFn.call(ctx, chunk.text, x, maxHeight / 2);\n\t\t\t\tx += chunk.width;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction toFont(props)\n\t\t{\n\t\t\treturn [\n\t\t\t\tprops['font-style'],\n\t\t\t\tprops['font-variant'],\n\t\t\t\tprops['font-weight'],\n\t\t\t\tprops['font-size'],\n\t\t\t\tprops['font-family']\n\t\t\t].join(' ');\n\t\t}\n\t\n\t\n\t\t// Convert the object returned by the text module\n\t\t// into something we can use for styling canvas text\n\t\tfunction chunkText(context, text)\n\t\t{\n\t\t\tvar tag = text.ctor;\n\t\t\tif (tag === 'Text:Append')\n\t\t\t{\n\t\t\t\tvar leftChunks = chunkText(context, text._0);\n\t\t\t\tvar rightChunks = chunkText(context, text._1);\n\t\t\t\treturn leftChunks.concat(rightChunks);\n\t\t\t}\n\t\t\tif (tag === 'Text:Text')\n\t\t\t{\n\t\t\t\treturn [{\n\t\t\t\t\ttext: text._0,\n\t\t\t\t\tcolor: context.color,\n\t\t\t\t\theight: context['font-size'].slice(0, -2) | 0,\n\t\t\t\t\tfont: toFont(context)\n\t\t\t\t}];\n\t\t\t}\n\t\t\tif (tag === 'Text:Meta')\n\t\t\t{\n\t\t\t\tvar newContext = freshContext(text._0, context);\n\t\t\t\treturn chunkText(newContext, text._1);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction freshContext(props, ctx)\n\t\t{\n\t\t\treturn {\n\t\t\t\t'font-style': props['font-style'] || ctx['font-style'],\n\t\t\t\t'font-variant': props['font-variant'] || ctx['font-variant'],\n\t\t\t\t'font-weight': props['font-weight'] || ctx['font-weight'],\n\t\t\t\t'font-size': props['font-size'] || ctx['font-size'],\n\t\t\t\t'font-family': props['font-family'] || ctx['font-family'],\n\t\t\t\t'color': props['color'] || ctx['color']\n\t\t\t};\n\t\t}\n\t\n\t\tvar defaultContext = {\n\t\t\t'font-style': 'normal',\n\t\t\t'font-variant': 'normal',\n\t\t\t'font-weight': 'normal',\n\t\t\t'font-size': '12px',\n\t\t\t'font-family': 'sans-serif',\n\t\t\t'color': 'black'\n\t\t};\n\t\n\t\n\t\t// IMAGES\n\t\n\t\tfunction drawImage(redo, ctx, form)\n\t\t{\n\t\t\tvar img = new Image();\n\t\t\timg.onload = redo;\n\t\t\timg.src = form._3;\n\t\t\tvar w = form._0,\n\t\t\t\th = form._1,\n\t\t\t\tpos = form._2,\n\t\t\t\tsrcX = pos._0,\n\t\t\t\tsrcY = pos._1,\n\t\t\t\tsrcW = w,\n\t\t\t\tsrcH = h,\n\t\t\t\tdestX = -w / 2,\n\t\t\t\tdestY = -h / 2,\n\t\t\t\tdestW = w,\n\t\t\t\tdestH = h;\n\t\n\t\t\tctx.scale(1, -1);\n\t\t\tctx.drawImage(img, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\t\t}\n\t\n\t\tfunction renderForm(redo, ctx, form)\n\t\t{\n\t\t\tctx.save();\n\t\n\t\t\tvar x = form.x,\n\t\t\t\ty = form.y,\n\t\t\t\ttheta = form.theta,\n\t\t\t\tscale = form.scale;\n\t\n\t\t\tif (x !== 0 || y !== 0)\n\t\t\t{\n\t\t\t\tctx.translate(x, y);\n\t\t\t}\n\t\t\tif (theta !== 0)\n\t\t\t{\n\t\t\t\tctx.rotate(theta % (Math.PI * 2));\n\t\t\t}\n\t\t\tif (scale !== 1)\n\t\t\t{\n\t\t\t\tctx.scale(scale, scale);\n\t\t\t}\n\t\t\tif (form.alpha !== 1)\n\t\t\t{\n\t\t\t\tctx.globalAlpha = ctx.globalAlpha * form.alpha;\n\t\t\t}\n\t\n\t\t\tctx.beginPath();\n\t\t\tvar f = form.form;\n\t\t\tswitch (f.ctor)\n\t\t\t{\n\t\t\t\tcase 'FPath':\n\t\t\t\t\tdrawLine(ctx, f._0, f._1);\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'FImage':\n\t\t\t\t\tdrawImage(redo, ctx, f);\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'FShape':\n\t\t\t\t\tif (f._0.ctor === 'Line')\n\t\t\t\t\t{\n\t\t\t\t\t\tf._1.closed = true;\n\t\t\t\t\t\tdrawLine(ctx, f._0._0, f._1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdrawShape(redo, ctx, f._0._0, f._1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'FText':\n\t\t\t\t\tfillText(redo, ctx, f._0);\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'FOutlinedText':\n\t\t\t\t\tstrokeText(redo, ctx, f._0, f._1);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t\n\t\tfunction formToMatrix(form)\n\t\t{\n\t\t   var scale = form.scale;\n\t\t   var matrix = A6( Transform.matrix, scale, 0, 0, scale, form.x, form.y );\n\t\n\t\t   var theta = form.theta;\n\t\t   if (theta !== 0)\n\t\t   {\n\t\t\t   matrix = A2( Transform.multiply, matrix, Transform.rotation(theta) );\n\t\t   }\n\t\n\t\t   return matrix;\n\t\t}\n\t\n\t\tfunction str(n)\n\t\t{\n\t\t\tif (n < 0.00001 && n > -0.00001)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\t\n\t\tfunction makeTransform(w, h, form, matrices)\n\t\t{\n\t\t\tvar props = form.form._0._0.props;\n\t\t\tvar m = A6( Transform.matrix, 1, 0, 0, -1,\n\t\t\t\t\t\t(w - props.width ) / 2,\n\t\t\t\t\t\t(h - props.height) / 2 );\n\t\t\tvar len = matrices.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tm = A2( Transform.multiply, m, matrices[i] );\n\t\t\t}\n\t\t\tm = A2( Transform.multiply, m, formToMatrix(form) );\n\t\n\t\t\treturn 'matrix(' +\n\t\t\t\tstr( m[0]) + ', ' + str( m[3]) + ', ' +\n\t\t\t\tstr(-m[1]) + ', ' + str(-m[4]) + ', ' +\n\t\t\t\tstr( m[2]) + ', ' + str( m[5]) + ')';\n\t\t}\n\t\n\t\tfunction stepperHelp(list)\n\t\t{\n\t\t\tvar arr = List.toArray(list);\n\t\t\tvar i = 0;\n\t\t\tfunction peekNext()\n\t\t\t{\n\t\t\t\treturn i < arr.length ? arr[i]._0.form.ctor : '';\n\t\t\t}\n\t\t\t// assumes that there is a next element\n\t\t\tfunction next()\n\t\t\t{\n\t\t\t\tvar out = arr[i]._0;\n\t\t\t\t++i;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tpeekNext: peekNext,\n\t\t\t\tnext: next\n\t\t\t};\n\t\t}\n\t\n\t\tfunction formStepper(forms)\n\t\t{\n\t\t\tvar ps = [stepperHelp(forms)];\n\t\t\tvar matrices = [];\n\t\t\tvar alphas = [];\n\t\t\tfunction peekNext()\n\t\t\t{\n\t\t\t\tvar len = ps.length;\n\t\t\t\tvar formType = '';\n\t\t\t\tfor (var i = 0; i < len; ++i )\n\t\t\t\t{\n\t\t\t\t\tif (formType = ps[i].peekNext()) return formType;\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\t// assumes that there is a next element\n\t\t\tfunction next(ctx)\n\t\t\t{\n\t\t\t\twhile (!ps[0].peekNext())\n\t\t\t\t{\n\t\t\t\t\tps.shift();\n\t\t\t\t\tmatrices.pop();\n\t\t\t\t\talphas.shift();\n\t\t\t\t\tif (ctx)\n\t\t\t\t\t{\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar out = ps[0].next();\n\t\t\t\tvar f = out.form;\n\t\t\t\tif (f.ctor === 'FGroup')\n\t\t\t\t{\n\t\t\t\t\tps.unshift(stepperHelp(f._1));\n\t\t\t\t\tvar m = A2(Transform.multiply, f._0, formToMatrix(out));\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n\t\t\t\t\tmatrices.push(m);\n\t\n\t\t\t\t\tvar alpha = (alphas[0] || 1) * out.alpha;\n\t\t\t\t\talphas.unshift(alpha);\n\t\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tfunction transforms()\n\t\t\t{\n\t\t\t\treturn matrices;\n\t\t\t}\n\t\t\tfunction alpha()\n\t\t\t{\n\t\t\t\treturn alphas[0] || 1;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tpeekNext: peekNext,\n\t\t\t\tnext: next,\n\t\t\t\ttransforms: transforms,\n\t\t\t\talpha: alpha\n\t\t\t};\n\t\t}\n\t\n\t\tfunction makeCanvas(w, h)\n\t\t{\n\t\t\tvar canvas = NativeElement.createNode('canvas');\n\t\t\tcanvas.style.width  = w + 'px';\n\t\t\tcanvas.style.height = h + 'px';\n\t\t\tcanvas.style.display = 'block';\n\t\t\tcanvas.style.position = 'absolute';\n\t\t\tvar ratio = window.devicePixelRatio || 1;\n\t\t\tcanvas.width  = w * ratio;\n\t\t\tcanvas.height = h * ratio;\n\t\t\treturn canvas;\n\t\t}\n\t\n\t\tfunction render(model)\n\t\t{\n\t\t\tvar div = NativeElement.createNode('div');\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.position = 'relative';\n\t\t\tupdate(div, model, model);\n\t\t\treturn div;\n\t\t}\n\t\n\t\tfunction nodeStepper(w, h, div)\n\t\t{\n\t\t\tvar kids = div.childNodes;\n\t\t\tvar i = 0;\n\t\t\tvar ratio = window.devicePixelRatio || 1;\n\t\n\t\t\tfunction transform(transforms, ctx)\n\t\t\t{\n\t\t\t\tctx.translate( w / 2 * ratio, h / 2 * ratio );\n\t\t\t\tctx.scale( ratio, -ratio );\n\t\t\t\tvar len = transforms.length;\n\t\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t\t{\n\t\t\t\t\tvar m = transforms[i];\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n\t\t\t\t}\n\t\t\t\treturn ctx;\n\t\t\t}\n\t\t\tfunction nextContext(transforms)\n\t\t\t{\n\t\t\t\twhile (i < kids.length)\n\t\t\t\t{\n\t\t\t\t\tvar node = kids[i];\n\t\t\t\t\tif (node.getContext)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = w * ratio;\n\t\t\t\t\t\tnode.height = h * ratio;\n\t\t\t\t\t\tnode.style.width = w + 'px';\n\t\t\t\t\t\tnode.style.height = h + 'px';\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\treturn transform(transforms, node.getContext('2d'));\n\t\t\t\t\t}\n\t\t\t\t\tdiv.removeChild(node);\n\t\t\t\t}\n\t\t\t\tvar canvas = makeCanvas(w, h);\n\t\t\t\tdiv.appendChild(canvas);\n\t\t\t\t// we have added a new node, so we must step our position\n\t\t\t\t++i;\n\t\t\t\treturn transform(transforms, canvas.getContext('2d'));\n\t\t\t}\n\t\t\tfunction addElement(matrices, alpha, form)\n\t\t\t{\n\t\t\t\tvar kid = kids[i];\n\t\t\t\tvar elem = form.form._0;\n\t\n\t\t\t\tvar node = (!kid || kid.getContext)\n\t\t\t\t\t? NativeElement.render(elem)\n\t\t\t\t\t: NativeElement.update(kid, kid.oldElement, elem);\n\t\n\t\t\t\tnode.style.position = 'absolute';\n\t\t\t\tnode.style.opacity = alpha * form.alpha * elem._0.props.opacity;\n\t\t\t\tNativeElement.addTransform(node.style, makeTransform(w, h, form, matrices));\n\t\t\t\tnode.oldElement = elem;\n\t\t\t\t++i;\n\t\t\t\tif (!kid)\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.insertBefore(node, kid);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction clearRest()\n\t\t\t{\n\t\t\t\twhile (i < kids.length)\n\t\t\t\t{\n\t\t\t\t\tdiv.removeChild(kids[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tnextContext: nextContext,\n\t\t\t\taddElement: addElement,\n\t\t\t\tclearRest: clearRest\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction update(div, _, model)\n\t\t{\n\t\t\tvar w = model.w;\n\t\t\tvar h = model.h;\n\t\n\t\t\tvar forms = formStepper(model.forms);\n\t\t\tvar nodes = nodeStepper(w, h, div);\n\t\t\tvar ctx = null;\n\t\t\tvar formType = '';\n\t\n\t\t\twhile (formType = forms.peekNext())\n\t\t\t{\n\t\t\t\t// make sure we have context if we need it\n\t\t\t\tif (ctx === null && formType !== 'FElement')\n\t\t\t\t{\n\t\t\t\t\tctx = nodes.nextContext(forms.transforms());\n\t\t\t\t\tctx.globalAlpha = forms.alpha();\n\t\t\t\t}\n\t\n\t\t\t\tvar form = forms.next(ctx);\n\t\t\t\t// if it is FGroup, all updates are made within formStepper when next is called.\n\t\t\t\tif (formType === 'FElement')\n\t\t\t\t{\n\t\t\t\t\t// update or insert an element, get a new context\n\t\t\t\t\tnodes.addElement(forms.transforms(), forms.alpha(), form);\n\t\t\t\t\tctx = null;\n\t\t\t\t}\n\t\t\t\telse if (formType !== 'FGroup')\n\t\t\t\t{\n\t\t\t\t\trenderForm(function() { update(div, model, model); }, ctx, form);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnodes.clearRest();\n\t\t\treturn div;\n\t\t}\n\t\n\t\n\t\tfunction collage(w, h, forms)\n\t\t{\n\t\t\treturn A3(NativeElement.newElement, w, h, {\n\t\t\t\tctor: 'Custom',\n\t\t\t\ttype: 'Collage',\n\t\t\t\trender: render,\n\t\t\t\tupdate: update,\n\t\t\t\tmodel: {w: w, h: h, forms: forms}\n\t\t\t});\n\t\t}\n\t\n\t\treturn localRuntime.Native.Graphics.Collage.values = {\n\t\t\tcollage: F3(collage)\n\t\t};\n\t};\n\t\n\tElm.Native.Color = {};\n\tElm.Native.Color.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Color = localRuntime.Native.Color || {};\n\t\tif (localRuntime.Native.Color.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Color.values;\n\t\t}\n\t\n\t\tfunction toCss(c)\n\t\t{\n\t\t\tvar format = '';\n\t\t\tvar colors = '';\n\t\t\tif (c.ctor === 'RGBA')\n\t\t\t{\n\t\t\t\tformat = 'rgb';\n\t\t\t\tcolors = c._0 + ', ' + c._1 + ', ' + c._2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tformat = 'hsl';\n\t\t\t\tcolors = (c._0 * 180 / Math.PI) + ', ' +\n\t\t\t\t\t\t (c._1 * 100) + '%, ' +\n\t\t\t\t\t\t (c._2 * 100) + '%';\n\t\t\t}\n\t\t\tif (c._3 === 1)\n\t\t\t{\n\t\t\t\treturn format + '(' + colors + ')';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn format + 'a(' + colors + ', ' + c._3 + ')';\n\t\t\t}\n\t\t}\n\t\n\t\treturn localRuntime.Native.Color.values = {\n\t\t\ttoCss: toCss\n\t\t};\n\t};\n\t\n\tElm.Color = Elm.Color || {};\n\tElm.Color.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Color = _elm.Color || {};\n\t   if (_elm.Color.values) return _elm.Color.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm);\n\t   var _op = {};\n\t   var Radial = F5(function (a,b,c,d,e) {    return {ctor: \"Radial\",_0: a,_1: b,_2: c,_3: d,_4: e};});\n\t   var radial = Radial;\n\t   var Linear = F3(function (a,b,c) {    return {ctor: \"Linear\",_0: a,_1: b,_2: c};});\n\t   var linear = Linear;\n\t   var fmod = F2(function (f,n) {    var integer = $Basics.floor(f);return $Basics.toFloat(A2($Basics._op[\"%\"],integer,n)) + f - $Basics.toFloat(integer);});\n\t   var rgbToHsl = F3(function (red,green,blue) {\n\t      var b = $Basics.toFloat(blue) / 255;\n\t      var g = $Basics.toFloat(green) / 255;\n\t      var r = $Basics.toFloat(red) / 255;\n\t      var cMax = A2($Basics.max,A2($Basics.max,r,g),b);\n\t      var cMin = A2($Basics.min,A2($Basics.min,r,g),b);\n\t      var c = cMax - cMin;\n\t      var lightness = (cMax + cMin) / 2;\n\t      var saturation = _U.eq(lightness,0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n\t      var hue = $Basics.degrees(60) * (_U.eq(cMax,r) ? A2(fmod,(g - b) / c,6) : _U.eq(cMax,g) ? (b - r) / c + 2 : (r - g) / c + 4);\n\t      return {ctor: \"_Tuple3\",_0: hue,_1: saturation,_2: lightness};\n\t   });\n\t   var hslToRgb = F3(function (hue,saturation,lightness) {\n\t      var hue$ = hue / $Basics.degrees(60);\n\t      var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n\t      var x = chroma * (1 - $Basics.abs(A2(fmod,hue$,2) - 1));\n\t      var _p0 = _U.cmp(hue$,0) < 0 ? {ctor: \"_Tuple3\",_0: 0,_1: 0,_2: 0} : _U.cmp(hue$,1) < 0 ? {ctor: \"_Tuple3\",_0: chroma,_1: x,_2: 0} : _U.cmp(hue$,\n\t      2) < 0 ? {ctor: \"_Tuple3\",_0: x,_1: chroma,_2: 0} : _U.cmp(hue$,3) < 0 ? {ctor: \"_Tuple3\",_0: 0,_1: chroma,_2: x} : _U.cmp(hue$,4) < 0 ? {ctor: \"_Tuple3\"\n\t                                                                                                                                               ,_0: 0\n\t                                                                                                                                               ,_1: x\n\t                                                                                                                                               ,_2: chroma} : _U.cmp(hue$,\n\t      5) < 0 ? {ctor: \"_Tuple3\",_0: x,_1: 0,_2: chroma} : _U.cmp(hue$,6) < 0 ? {ctor: \"_Tuple3\",_0: chroma,_1: 0,_2: x} : {ctor: \"_Tuple3\",_0: 0,_1: 0,_2: 0};\n\t      var r = _p0._0;\n\t      var g = _p0._1;\n\t      var b = _p0._2;\n\t      var m = lightness - chroma / 2;\n\t      return {ctor: \"_Tuple3\",_0: r + m,_1: g + m,_2: b + m};\n\t   });\n\t   var toRgb = function (color) {\n\t      var _p1 = color;\n\t      if (_p1.ctor === \"RGBA\") {\n\t            return {red: _p1._0,green: _p1._1,blue: _p1._2,alpha: _p1._3};\n\t         } else {\n\t            var _p2 = A3(hslToRgb,_p1._0,_p1._1,_p1._2);\n\t            var r = _p2._0;\n\t            var g = _p2._1;\n\t            var b = _p2._2;\n\t            return {red: $Basics.round(255 * r),green: $Basics.round(255 * g),blue: $Basics.round(255 * b),alpha: _p1._3};\n\t         }\n\t   };\n\t   var toHsl = function (color) {\n\t      var _p3 = color;\n\t      if (_p3.ctor === \"HSLA\") {\n\t            return {hue: _p3._0,saturation: _p3._1,lightness: _p3._2,alpha: _p3._3};\n\t         } else {\n\t            var _p4 = A3(rgbToHsl,_p3._0,_p3._1,_p3._2);\n\t            var h = _p4._0;\n\t            var s = _p4._1;\n\t            var l = _p4._2;\n\t            return {hue: h,saturation: s,lightness: l,alpha: _p3._3};\n\t         }\n\t   };\n\t   var HSLA = F4(function (a,b,c,d) {    return {ctor: \"HSLA\",_0: a,_1: b,_2: c,_3: d};});\n\t   var hsla = F4(function (hue,saturation,lightness,alpha) {\n\t      return A4(HSLA,hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),saturation,lightness,alpha);\n\t   });\n\t   var hsl = F3(function (hue,saturation,lightness) {    return A4(hsla,hue,saturation,lightness,1);});\n\t   var complement = function (color) {\n\t      var _p5 = color;\n\t      if (_p5.ctor === \"HSLA\") {\n\t            return A4(hsla,_p5._0 + $Basics.degrees(180),_p5._1,_p5._2,_p5._3);\n\t         } else {\n\t            var _p6 = A3(rgbToHsl,_p5._0,_p5._1,_p5._2);\n\t            var h = _p6._0;\n\t            var s = _p6._1;\n\t            var l = _p6._2;\n\t            return A4(hsla,h + $Basics.degrees(180),s,l,_p5._3);\n\t         }\n\t   };\n\t   var grayscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n\t   var greyscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n\t   var RGBA = F4(function (a,b,c,d) {    return {ctor: \"RGBA\",_0: a,_1: b,_2: c,_3: d};});\n\t   var rgba = RGBA;\n\t   var rgb = F3(function (r,g,b) {    return A4(RGBA,r,g,b,1);});\n\t   var lightRed = A4(RGBA,239,41,41,1);\n\t   var red = A4(RGBA,204,0,0,1);\n\t   var darkRed = A4(RGBA,164,0,0,1);\n\t   var lightOrange = A4(RGBA,252,175,62,1);\n\t   var orange = A4(RGBA,245,121,0,1);\n\t   var darkOrange = A4(RGBA,206,92,0,1);\n\t   var lightYellow = A4(RGBA,255,233,79,1);\n\t   var yellow = A4(RGBA,237,212,0,1);\n\t   var darkYellow = A4(RGBA,196,160,0,1);\n\t   var lightGreen = A4(RGBA,138,226,52,1);\n\t   var green = A4(RGBA,115,210,22,1);\n\t   var darkGreen = A4(RGBA,78,154,6,1);\n\t   var lightBlue = A4(RGBA,114,159,207,1);\n\t   var blue = A4(RGBA,52,101,164,1);\n\t   var darkBlue = A4(RGBA,32,74,135,1);\n\t   var lightPurple = A4(RGBA,173,127,168,1);\n\t   var purple = A4(RGBA,117,80,123,1);\n\t   var darkPurple = A4(RGBA,92,53,102,1);\n\t   var lightBrown = A4(RGBA,233,185,110,1);\n\t   var brown = A4(RGBA,193,125,17,1);\n\t   var darkBrown = A4(RGBA,143,89,2,1);\n\t   var black = A4(RGBA,0,0,0,1);\n\t   var white = A4(RGBA,255,255,255,1);\n\t   var lightGrey = A4(RGBA,238,238,236,1);\n\t   var grey = A4(RGBA,211,215,207,1);\n\t   var darkGrey = A4(RGBA,186,189,182,1);\n\t   var lightGray = A4(RGBA,238,238,236,1);\n\t   var gray = A4(RGBA,211,215,207,1);\n\t   var darkGray = A4(RGBA,186,189,182,1);\n\t   var lightCharcoal = A4(RGBA,136,138,133,1);\n\t   var charcoal = A4(RGBA,85,87,83,1);\n\t   var darkCharcoal = A4(RGBA,46,52,54,1);\n\t   return _elm.Color.values = {_op: _op\n\t                              ,rgb: rgb\n\t                              ,rgba: rgba\n\t                              ,hsl: hsl\n\t                              ,hsla: hsla\n\t                              ,greyscale: greyscale\n\t                              ,grayscale: grayscale\n\t                              ,complement: complement\n\t                              ,linear: linear\n\t                              ,radial: radial\n\t                              ,toRgb: toRgb\n\t                              ,toHsl: toHsl\n\t                              ,red: red\n\t                              ,orange: orange\n\t                              ,yellow: yellow\n\t                              ,green: green\n\t                              ,blue: blue\n\t                              ,purple: purple\n\t                              ,brown: brown\n\t                              ,lightRed: lightRed\n\t                              ,lightOrange: lightOrange\n\t                              ,lightYellow: lightYellow\n\t                              ,lightGreen: lightGreen\n\t                              ,lightBlue: lightBlue\n\t                              ,lightPurple: lightPurple\n\t                              ,lightBrown: lightBrown\n\t                              ,darkRed: darkRed\n\t                              ,darkOrange: darkOrange\n\t                              ,darkYellow: darkYellow\n\t                              ,darkGreen: darkGreen\n\t                              ,darkBlue: darkBlue\n\t                              ,darkPurple: darkPurple\n\t                              ,darkBrown: darkBrown\n\t                              ,white: white\n\t                              ,lightGrey: lightGrey\n\t                              ,grey: grey\n\t                              ,darkGrey: darkGrey\n\t                              ,lightCharcoal: lightCharcoal\n\t                              ,charcoal: charcoal\n\t                              ,darkCharcoal: darkCharcoal\n\t                              ,black: black\n\t                              ,lightGray: lightGray\n\t                              ,gray: gray\n\t                              ,darkGray: darkGray};\n\t};\n\t\n\t// setup\n\tElm.Native = Elm.Native || {};\n\tElm.Native.Graphics = Elm.Native.Graphics || {};\n\tElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\t\n\t// definition\n\tElm.Native.Graphics.Element.make = function(localRuntime) {\n\t\t'use strict';\n\t\n\t\t// attempt to short-circuit\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n\t\tlocalRuntime.Native.Graphics.Element = localRuntime.Native.Graphics.Element || {};\n\t\tif ('values' in localRuntime.Native.Graphics.Element)\n\t\t{\n\t\t\treturn localRuntime.Native.Graphics.Element.values;\n\t\t}\n\t\n\t\tvar Color = Elm.Native.Color.make(localRuntime);\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\tvar Maybe = Elm.Maybe.make(localRuntime);\n\t\tvar Text = Elm.Native.Text.make(localRuntime);\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\n\t\t// CREATION\n\t\n\t\tvar createNode =\n\t\t\ttypeof document === 'undefined'\n\t\t\t\t?\n\t\t\t\t\tfunction(_)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstyle: {},\n\t\t\t\t\t\t\tappendChild: function() {}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t:\n\t\t\t\t\tfunction(elementType)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar node = document.createElement(elementType);\n\t\t\t\t\t\tnode.style.padding = '0';\n\t\t\t\t\t\tnode.style.margin = '0';\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t;\n\t\n\t\n\t\tfunction newElement(width, height, elementPrim)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: 'Element_elm_builtin',\n\t\t\t\t_0: {\n\t\t\t\t\telement: elementPrim,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tid: Utils.guid(),\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tcolor: Maybe.Nothing,\n\t\t\t\t\t\thref: '',\n\t\t\t\t\t\ttag: '',\n\t\t\t\t\t\thover: Utils.Tuple0,\n\t\t\t\t\t\tclick: Utils.Tuple0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// PROPERTIES\n\t\n\t\tfunction setProps(elem, node)\n\t\t{\n\t\t\tvar props = elem.props;\n\t\n\t\t\tvar element = elem.element;\n\t\t\tvar width = props.width - (element.adjustWidth || 0);\n\t\t\tvar height = props.height - (element.adjustHeight || 0);\n\t\t\tnode.style.width  = (width | 0) + 'px';\n\t\t\tnode.style.height = (height | 0) + 'px';\n\t\n\t\t\tif (props.opacity !== 1)\n\t\t\t{\n\t\t\t\tnode.style.opacity = props.opacity;\n\t\t\t}\n\t\n\t\t\tif (props.color.ctor === 'Just')\n\t\t\t{\n\t\t\t\tnode.style.backgroundColor = Color.toCss(props.color._0);\n\t\t\t}\n\t\n\t\t\tif (props.tag !== '')\n\t\t\t{\n\t\t\t\tnode.id = props.tag;\n\t\t\t}\n\t\n\t\t\tif (props.hover.ctor !== '_Tuple0')\n\t\t\t{\n\t\t\t\taddHover(node, props.hover);\n\t\t\t}\n\t\n\t\t\tif (props.click.ctor !== '_Tuple0')\n\t\t\t{\n\t\t\t\taddClick(node, props.click);\n\t\t\t}\n\t\n\t\t\tif (props.href !== '')\n\t\t\t{\n\t\t\t\tvar anchor = createNode('a');\n\t\t\t\tanchor.href = props.href;\n\t\t\t\tanchor.style.display = 'block';\n\t\t\t\tanchor.style.pointerEvents = 'auto';\n\t\t\t\tanchor.appendChild(node);\n\t\t\t\tnode = anchor;\n\t\t\t}\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction addClick(e, handler)\n\t\t{\n\t\t\te.style.pointerEvents = 'auto';\n\t\t\te.elm_click_handler = handler;\n\t\t\tfunction trigger(ev)\n\t\t\t{\n\t\t\t\te.elm_click_handler(Utils.Tuple0);\n\t\t\t\tev.stopPropagation();\n\t\t\t}\n\t\t\te.elm_click_trigger = trigger;\n\t\t\te.addEventListener('click', trigger);\n\t\t}\n\t\n\t\tfunction removeClick(e, handler)\n\t\t{\n\t\t\tif (e.elm_click_trigger)\n\t\t\t{\n\t\t\t\te.removeEventListener('click', e.elm_click_trigger);\n\t\t\t\te.elm_click_trigger = null;\n\t\t\t\te.elm_click_handler = null;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addHover(e, handler)\n\t\t{\n\t\t\te.style.pointerEvents = 'auto';\n\t\t\te.elm_hover_handler = handler;\n\t\t\te.elm_hover_count = 0;\n\t\n\t\t\tfunction over(evt)\n\t\t\t{\n\t\t\t\tif (e.elm_hover_count++ > 0) return;\n\t\t\t\te.elm_hover_handler(true);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\t\t\tfunction out(evt)\n\t\t\t{\n\t\t\t\tif (e.contains(evt.toElement || evt.relatedTarget)) return;\n\t\t\t\te.elm_hover_count = 0;\n\t\t\t\te.elm_hover_handler(false);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\t\t\te.elm_hover_over = over;\n\t\t\te.elm_hover_out = out;\n\t\t\te.addEventListener('mouseover', over);\n\t\t\te.addEventListener('mouseout', out);\n\t\t}\n\t\n\t\tfunction removeHover(e)\n\t\t{\n\t\t\te.elm_hover_handler = null;\n\t\t\tif (e.elm_hover_over)\n\t\t\t{\n\t\t\t\te.removeEventListener('mouseover', e.elm_hover_over);\n\t\t\t\te.elm_hover_over = null;\n\t\t\t}\n\t\t\tif (e.elm_hover_out)\n\t\t\t{\n\t\t\t\te.removeEventListener('mouseout', e.elm_hover_out);\n\t\t\t\te.elm_hover_out = null;\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// IMAGES\n\t\n\t\tfunction image(props, img)\n\t\t{\n\t\t\tswitch (img._0.ctor)\n\t\t\t{\n\t\t\t\tcase 'Plain':\n\t\t\t\t\treturn plainImage(img._3);\n\t\n\t\t\t\tcase 'Fitted':\n\t\t\t\t\treturn fittedImage(props.width, props.height, img._3);\n\t\n\t\t\t\tcase 'Cropped':\n\t\t\t\t\treturn croppedImage(img, props.width, props.height, img._3);\n\t\n\t\t\t\tcase 'Tiled':\n\t\t\t\t\treturn tiledImage(img._3);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction plainImage(src)\n\t\t{\n\t\t\tvar img = createNode('img');\n\t\t\timg.src = src;\n\t\t\timg.name = src;\n\t\t\timg.style.display = 'block';\n\t\t\treturn img;\n\t\t}\n\t\n\t\tfunction tiledImage(src)\n\t\t{\n\t\t\tvar div = createNode('div');\n\t\t\tdiv.style.backgroundImage = 'url(' + src + ')';\n\t\t\treturn div;\n\t\t}\n\t\n\t\tfunction fittedImage(w, h, src)\n\t\t{\n\t\t\tvar div = createNode('div');\n\t\t\tdiv.style.background = 'url(' + src + ') no-repeat center';\n\t\t\tdiv.style.webkitBackgroundSize = 'cover';\n\t\t\tdiv.style.MozBackgroundSize = 'cover';\n\t\t\tdiv.style.OBackgroundSize = 'cover';\n\t\t\tdiv.style.backgroundSize = 'cover';\n\t\t\treturn div;\n\t\t}\n\t\n\t\tfunction croppedImage(elem, w, h, src)\n\t\t{\n\t\t\tvar pos = elem._0._0;\n\t\t\tvar e = createNode('div');\n\t\t\te.style.overflow = 'hidden';\n\t\n\t\t\tvar img = createNode('img');\n\t\t\timg.onload = function() {\n\t\t\t\tvar sw = w / elem._1, sh = h / elem._2;\n\t\t\t\timg.style.width = ((this.width * sw) | 0) + 'px';\n\t\t\t\timg.style.height = ((this.height * sh) | 0) + 'px';\n\t\t\t\timg.style.marginLeft = ((- pos._0 * sw) | 0) + 'px';\n\t\t\t\timg.style.marginTop = ((- pos._1 * sh) | 0) + 'px';\n\t\t\t};\n\t\t\timg.src = src;\n\t\t\timg.name = src;\n\t\t\te.appendChild(img);\n\t\t\treturn e;\n\t\t}\n\t\n\t\n\t\t// FLOW\n\t\n\t\tfunction goOut(node)\n\t\t{\n\t\t\tnode.style.position = 'absolute';\n\t\t\treturn node;\n\t\t}\n\t\tfunction goDown(node)\n\t\t{\n\t\t\treturn node;\n\t\t}\n\t\tfunction goRight(node)\n\t\t{\n\t\t\tnode.style.styleFloat = 'left';\n\t\t\tnode.style.cssFloat = 'left';\n\t\t\treturn node;\n\t\t}\n\t\n\t\tvar directionTable = {\n\t\t\tDUp: goDown,\n\t\t\tDDown: goDown,\n\t\t\tDLeft: goRight,\n\t\t\tDRight: goRight,\n\t\t\tDIn: goOut,\n\t\t\tDOut: goOut\n\t\t};\n\t\tfunction needsReversal(dir)\n\t\t{\n\t\t\treturn dir === 'DUp' || dir === 'DLeft' || dir === 'DIn';\n\t\t}\n\t\n\t\tfunction flow(dir, elist)\n\t\t{\n\t\t\tvar array = List.toArray(elist);\n\t\t\tvar container = createNode('div');\n\t\t\tvar goDir = directionTable[dir];\n\t\t\tif (goDir === goOut)\n\t\t\t{\n\t\t\t\tcontainer.style.pointerEvents = 'none';\n\t\t\t}\n\t\t\tif (needsReversal(dir))\n\t\t\t{\n\t\t\t\tarray.reverse();\n\t\t\t}\n\t\t\tvar len = array.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tcontainer.appendChild(goDir(render(array[i])));\n\t\t\t}\n\t\t\treturn container;\n\t\t}\n\t\n\t\n\t\t// CONTAINER\n\t\n\t\tfunction toPos(pos)\n\t\t{\n\t\t\treturn pos.ctor === 'Absolute'\n\t\t\t\t? pos._0 + 'px'\n\t\t\t\t: (pos._0 * 100) + '%';\n\t\t}\n\t\n\t\t// must clear right, left, top, bottom, and transform\n\t\t// before calling this function\n\t\tfunction setPos(pos, wrappedElement, e)\n\t\t{\n\t\t\tvar elem = wrappedElement._0;\n\t\t\tvar element = elem.element;\n\t\t\tvar props = elem.props;\n\t\t\tvar w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n\t\t\tvar h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\t\n\t\t\te.style.position = 'absolute';\n\t\t\te.style.margin = 'auto';\n\t\t\tvar transform = '';\n\t\n\t\t\tswitch (pos.horizontal.ctor)\n\t\t\t{\n\t\t\t\tcase 'P':\n\t\t\t\t\te.style.right = toPos(pos.x);\n\t\t\t\t\te.style.removeProperty('left');\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'Z':\n\t\t\t\t\ttransform = 'translateX(' + ((-w / 2) | 0) + 'px) ';\n\t\n\t\t\t\tcase 'N':\n\t\t\t\t\te.style.left = toPos(pos.x);\n\t\t\t\t\te.style.removeProperty('right');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (pos.vertical.ctor)\n\t\t\t{\n\t\t\t\tcase 'N':\n\t\t\t\t\te.style.bottom = toPos(pos.y);\n\t\t\t\t\te.style.removeProperty('top');\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'Z':\n\t\t\t\t\ttransform += 'translateY(' + ((-h / 2) | 0) + 'px)';\n\t\n\t\t\t\tcase 'P':\n\t\t\t\t\te.style.top = toPos(pos.y);\n\t\t\t\t\te.style.removeProperty('bottom');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (transform !== '')\n\t\t\t{\n\t\t\t\taddTransform(e.style, transform);\n\t\t\t}\n\t\t\treturn e;\n\t\t}\n\t\n\t\tfunction addTransform(style, transform)\n\t\t{\n\t\t\tstyle.transform       = transform;\n\t\t\tstyle.msTransform     = transform;\n\t\t\tstyle.MozTransform    = transform;\n\t\t\tstyle.webkitTransform = transform;\n\t\t\tstyle.OTransform      = transform;\n\t\t}\n\t\n\t\tfunction container(pos, elem)\n\t\t{\n\t\t\tvar e = render(elem);\n\t\t\tsetPos(pos, elem, e);\n\t\t\tvar div = createNode('div');\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.appendChild(e);\n\t\t\treturn div;\n\t\t}\n\t\n\t\n\t\tfunction rawHtml(elem)\n\t\t{\n\t\t\tvar html = elem.html;\n\t\t\tvar align = elem.align;\n\t\n\t\t\tvar div = createNode('div');\n\t\t\tdiv.innerHTML = html;\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tif (align)\n\t\t\t{\n\t\t\t\tdiv.style.textAlign = align;\n\t\t\t}\n\t\t\tdiv.style.visibility = 'visible';\n\t\t\tdiv.style.pointerEvents = 'auto';\n\t\t\treturn div;\n\t\t}\n\t\n\t\n\t\t// RENDER\n\t\n\t\tfunction render(wrappedElement)\n\t\t{\n\t\t\tvar elem = wrappedElement._0;\n\t\t\treturn setProps(elem, makeElement(elem));\n\t\t}\n\t\n\t\tfunction makeElement(e)\n\t\t{\n\t\t\tvar elem = e.element;\n\t\t\tswitch (elem.ctor)\n\t\t\t{\n\t\t\t\tcase 'Image':\n\t\t\t\t\treturn image(e.props, elem);\n\t\n\t\t\t\tcase 'Flow':\n\t\t\t\t\treturn flow(elem._0.ctor, elem._1);\n\t\n\t\t\t\tcase 'Container':\n\t\t\t\t\treturn container(elem._0, elem._1);\n\t\n\t\t\t\tcase 'Spacer':\n\t\t\t\t\treturn createNode('div');\n\t\n\t\t\t\tcase 'RawHtml':\n\t\t\t\t\treturn rawHtml(elem);\n\t\n\t\t\t\tcase 'Custom':\n\t\t\t\t\treturn elem.render(elem.model);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction updateAndReplace(node, curr, next)\n\t\t{\n\t\t\tvar newNode = update(node, curr, next);\n\t\t\tif (newNode !== node)\n\t\t\t{\n\t\t\t\tnode.parentNode.replaceChild(newNode, node);\n\t\t\t}\n\t\t\treturn newNode;\n\t\t}\n\t\n\t\n\t\t// UPDATE\n\t\n\t\tfunction update(node, wrappedCurrent, wrappedNext)\n\t\t{\n\t\t\tvar curr = wrappedCurrent._0;\n\t\t\tvar next = wrappedNext._0;\n\t\t\tvar rootNode = node;\n\t\t\tif (node.tagName === 'A')\n\t\t\t{\n\t\t\t\tnode = node.firstChild;\n\t\t\t}\n\t\t\tif (curr.props.id === next.props.id)\n\t\t\t{\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\t\t\t}\n\t\t\tif (curr.element.ctor !== next.element.ctor)\n\t\t\t{\n\t\t\t\treturn render(wrappedNext);\n\t\t\t}\n\t\t\tvar nextE = next.element;\n\t\t\tvar currE = curr.element;\n\t\t\tswitch (nextE.ctor)\n\t\t\t{\n\t\t\t\tcase 'Spacer':\n\t\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\t\treturn rootNode;\n\t\n\t\t\t\tcase 'RawHtml':\n\t\t\t\t\tif(currE.html.valueOf() !== nextE.html.valueOf())\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.innerHTML = nextE.html;\n\t\t\t\t\t}\n\t\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\t\treturn rootNode;\n\t\n\t\t\t\tcase 'Image':\n\t\t\t\t\tif (nextE._0.ctor === 'Plain')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (nextE._3 !== currE._3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.src = nextE._3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (!Utils.eq(nextE, currE)\n\t\t\t\t\t\t|| next.props.width !== curr.props.width\n\t\t\t\t\t\t|| next.props.height !== curr.props.height)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t\t}\n\t\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\t\treturn rootNode;\n\t\n\t\t\t\tcase 'Flow':\n\t\t\t\t\tvar arr = List.toArray(nextE._1);\n\t\t\t\t\tfor (var i = arr.length; i--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tarr[i] = arr[i]._0.element.ctor;\n\t\t\t\t\t}\n\t\t\t\t\tif (nextE._0.ctor !== currE._0.ctor)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t\t}\n\t\t\t\t\tvar nexts = List.toArray(nextE._1);\n\t\t\t\t\tvar kids = node.childNodes;\n\t\t\t\t\tif (nexts.length !== kids.length)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t\t}\n\t\t\t\t\tvar currs = List.toArray(currE._1);\n\t\t\t\t\tvar dir = nextE._0.ctor;\n\t\t\t\t\tvar goDir = directionTable[dir];\n\t\t\t\t\tvar toReverse = needsReversal(dir);\n\t\t\t\t\tvar len = kids.length;\n\t\t\t\t\tfor (var i = len; i--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar subNode = kids[toReverse ? len - i - 1 : i];\n\t\t\t\t\t\tgoDir(updateAndReplace(subNode, currs[i], nexts[i]));\n\t\t\t\t\t}\n\t\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\t\treturn rootNode;\n\t\n\t\t\t\tcase 'Container':\n\t\t\t\t\tvar subNode = node.firstChild;\n\t\t\t\t\tvar newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n\t\t\t\t\tsetPos(nextE._0, nextE._1, newSubNode);\n\t\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\t\treturn rootNode;\n\t\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tif (currE.type === nextE.type)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar updatedNode = nextE.update(node, currE.model, nextE.model);\n\t\t\t\t\t\tupdateProps(updatedNode, curr, next);\n\t\t\t\t\t\treturn updatedNode;\n\t\t\t\t\t}\n\t\t\t\t\treturn render(wrappedNext);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction updateProps(node, curr, next)\n\t\t{\n\t\t\tvar nextProps = next.props;\n\t\t\tvar currProps = curr.props;\n\t\n\t\t\tvar element = next.element;\n\t\t\tvar width = nextProps.width - (element.adjustWidth || 0);\n\t\t\tvar height = nextProps.height - (element.adjustHeight || 0);\n\t\t\tif (width !== currProps.width)\n\t\t\t{\n\t\t\t\tnode.style.width = (width | 0) + 'px';\n\t\t\t}\n\t\t\tif (height !== currProps.height)\n\t\t\t{\n\t\t\t\tnode.style.height = (height | 0) + 'px';\n\t\t\t}\n\t\n\t\t\tif (nextProps.opacity !== currProps.opacity)\n\t\t\t{\n\t\t\t\tnode.style.opacity = nextProps.opacity;\n\t\t\t}\n\t\n\t\t\tvar nextColor = nextProps.color.ctor === 'Just'\n\t\t\t\t? Color.toCss(nextProps.color._0)\n\t\t\t\t: '';\n\t\t\tif (node.style.backgroundColor !== nextColor)\n\t\t\t{\n\t\t\t\tnode.style.backgroundColor = nextColor;\n\t\t\t}\n\t\n\t\t\tif (nextProps.tag !== currProps.tag)\n\t\t\t{\n\t\t\t\tnode.id = nextProps.tag;\n\t\t\t}\n\t\n\t\t\tif (nextProps.href !== currProps.href)\n\t\t\t{\n\t\t\t\tif (currProps.href === '')\n\t\t\t\t{\n\t\t\t\t\t// add a surrounding href\n\t\t\t\t\tvar anchor = createNode('a');\n\t\t\t\t\tanchor.href = nextProps.href;\n\t\t\t\t\tanchor.style.display = 'block';\n\t\t\t\t\tanchor.style.pointerEvents = 'auto';\n\t\n\t\t\t\t\tnode.parentNode.replaceChild(anchor, node);\n\t\t\t\t\tanchor.appendChild(node);\n\t\t\t\t}\n\t\t\t\telse if (nextProps.href === '')\n\t\t\t\t{\n\t\t\t\t\t// remove the surrounding href\n\t\t\t\t\tvar anchor = node.parentNode;\n\t\t\t\t\tanchor.parentNode.replaceChild(node, anchor);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// just update the link\n\t\t\t\t\tnode.parentNode.href = nextProps.href;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// update click and hover handlers\n\t\t\tvar removed = false;\n\t\n\t\t\t// update hover handlers\n\t\t\tif (currProps.hover.ctor === '_Tuple0')\n\t\t\t{\n\t\t\t\tif (nextProps.hover.ctor !== '_Tuple0')\n\t\t\t\t{\n\t\t\t\t\taddHover(node, nextProps.hover);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (nextProps.hover.ctor === '_Tuple0')\n\t\t\t\t{\n\t\t\t\t\tremoved = true;\n\t\t\t\t\tremoveHover(node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.elm_hover_handler = nextProps.hover;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// update click handlers\n\t\t\tif (currProps.click.ctor === '_Tuple0')\n\t\t\t{\n\t\t\t\tif (nextProps.click.ctor !== '_Tuple0')\n\t\t\t\t{\n\t\t\t\t\taddClick(node, nextProps.click);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (nextProps.click.ctor === '_Tuple0')\n\t\t\t\t{\n\t\t\t\t\tremoved = true;\n\t\t\t\t\tremoveClick(node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.elm_click_handler = nextProps.click;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// stop capturing clicks if\n\t\t\tif (removed\n\t\t\t\t&& nextProps.hover.ctor === '_Tuple0'\n\t\t\t\t&& nextProps.click.ctor === '_Tuple0')\n\t\t\t{\n\t\t\t\tnode.style.pointerEvents = 'none';\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// TEXT\n\t\n\t\tfunction block(align)\n\t\t{\n\t\t\treturn function(text)\n\t\t\t{\n\t\t\t\tvar raw = {\n\t\t\t\t\tctor: 'RawHtml',\n\t\t\t\t\thtml: Text.renderHtml(text),\n\t\t\t\t\talign: align\n\t\t\t\t};\n\t\t\t\tvar pos = htmlHeight(0, raw);\n\t\t\t\treturn newElement(pos._0, pos._1, raw);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction markdown(text)\n\t\t{\n\t\t\tvar raw = {\n\t\t\t\tctor: 'RawHtml',\n\t\t\t\thtml: text,\n\t\t\t\talign: null\n\t\t\t};\n\t\t\tvar pos = htmlHeight(0, raw);\n\t\t\treturn newElement(pos._0, pos._1, raw);\n\t\t}\n\t\n\t\tvar htmlHeight =\n\t\t\ttypeof document !== 'undefined'\n\t\t\t\t? realHtmlHeight\n\t\t\t\t: function(a, b) { return Utils.Tuple2(0, 0); };\n\t\n\t\tfunction realHtmlHeight(width, rawHtml)\n\t\t{\n\t\t\t// create dummy node\n\t\t\tvar temp = document.createElement('div');\n\t\t\ttemp.innerHTML = rawHtml.html;\n\t\t\tif (width > 0)\n\t\t\t{\n\t\t\t\ttemp.style.width = width + 'px';\n\t\t\t}\n\t\t\ttemp.style.visibility = 'hidden';\n\t\t\ttemp.style.styleFloat = 'left';\n\t\t\ttemp.style.cssFloat = 'left';\n\t\n\t\t\tdocument.body.appendChild(temp);\n\t\n\t\t\t// get dimensions\n\t\t\tvar style = window.getComputedStyle(temp, null);\n\t\t\tvar w = Math.ceil(style.getPropertyValue('width').slice(0, -2) - 0);\n\t\t\tvar h = Math.ceil(style.getPropertyValue('height').slice(0, -2) - 0);\n\t\t\tdocument.body.removeChild(temp);\n\t\t\treturn Utils.Tuple2(w, h);\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Graphics.Element.values = {\n\t\t\trender: render,\n\t\t\tupdate: update,\n\t\t\tupdateAndReplace: updateAndReplace,\n\t\n\t\t\tcreateNode: createNode,\n\t\t\tnewElement: F3(newElement),\n\t\t\taddTransform: addTransform,\n\t\t\thtmlHeight: F2(htmlHeight),\n\t\t\tguid: Utils.guid,\n\t\n\t\t\tblock: block,\n\t\t\tmarkdown: markdown\n\t\t};\n\t};\n\t\n\tElm.Native.Text = {};\n\tElm.Native.Text.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Text = localRuntime.Native.Text || {};\n\t\tif (localRuntime.Native.Text.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Text.values;\n\t\t}\n\t\n\t\tvar toCss = Elm.Native.Color.make(localRuntime).toCss;\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\n\t\n\t\t// CONSTRUCTORS\n\t\n\t\tfunction fromString(str)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: 'Text:Text',\n\t\t\t\t_0: str\n\t\t\t};\n\t\t}\n\t\n\t\tfunction append(a, b)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: 'Text:Append',\n\t\t\t\t_0: a,\n\t\t\t\t_1: b\n\t\t\t};\n\t\t}\n\t\n\t\tfunction addMeta(field, value, text)\n\t\t{\n\t\t\tvar newProps = {};\n\t\t\tvar newText = {\n\t\t\t\tctor: 'Text:Meta',\n\t\t\t\t_0: newProps,\n\t\t\t\t_1: text\n\t\t\t};\n\t\n\t\t\tif (text.ctor === 'Text:Meta')\n\t\t\t{\n\t\t\t\tnewText._1 = text._1;\n\t\t\t\tvar props = text._0;\n\t\t\t\tfor (var i = metaKeys.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tvar key = metaKeys[i];\n\t\t\t\t\tvar val = props[key];\n\t\t\t\t\tif (val)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewProps[key] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewProps[field] = value;\n\t\t\treturn newText;\n\t\t}\n\t\n\t\tvar metaKeys = [\n\t\t\t'font-size',\n\t\t\t'font-family',\n\t\t\t'font-style',\n\t\t\t'font-weight',\n\t\t\t'href',\n\t\t\t'text-decoration',\n\t\t\t'color'\n\t\t];\n\t\n\t\n\t\t// conversions from Elm values to CSS\n\t\n\t\tfunction toTypefaces(list)\n\t\t{\n\t\t\tvar typefaces = List.toArray(list);\n\t\t\tfor (var i = typefaces.length; i--; )\n\t\t\t{\n\t\t\t\tvar typeface = typefaces[i];\n\t\t\t\tif (typeface.indexOf(' ') > -1)\n\t\t\t\t{\n\t\t\t\t\ttypefaces[i] = \"'\" + typeface + \"'\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn typefaces.join(',');\n\t\t}\n\t\n\t\tfunction toLine(line)\n\t\t{\n\t\t\tvar ctor = line.ctor;\n\t\t\treturn ctor === 'Under'\n\t\t\t\t? 'underline'\n\t\t\t\t: ctor === 'Over'\n\t\t\t\t\t? 'overline'\n\t\t\t\t\t: 'line-through';\n\t\t}\n\t\n\t\t// setting styles of Text\n\t\n\t\tfunction style(style, text)\n\t\t{\n\t\t\tvar newText = addMeta('color', toCss(style.color), text);\n\t\t\tvar props = newText._0;\n\t\n\t\t\tif (style.typeface.ctor !== '[]')\n\t\t\t{\n\t\t\t\tprops['font-family'] = toTypefaces(style.typeface);\n\t\t\t}\n\t\t\tif (style.height.ctor !== 'Nothing')\n\t\t\t{\n\t\t\t\tprops['font-size'] = style.height._0 + 'px';\n\t\t\t}\n\t\t\tif (style.bold)\n\t\t\t{\n\t\t\t\tprops['font-weight'] = 'bold';\n\t\t\t}\n\t\t\tif (style.italic)\n\t\t\t{\n\t\t\t\tprops['font-style'] = 'italic';\n\t\t\t}\n\t\t\tif (style.line.ctor !== 'Nothing')\n\t\t\t{\n\t\t\t\tprops['text-decoration'] = toLine(style.line._0);\n\t\t\t}\n\t\t\treturn newText;\n\t\t}\n\t\n\t\tfunction height(px, text)\n\t\t{\n\t\t\treturn addMeta('font-size', px + 'px', text);\n\t\t}\n\t\n\t\tfunction typeface(names, text)\n\t\t{\n\t\t\treturn addMeta('font-family', toTypefaces(names), text);\n\t\t}\n\t\n\t\tfunction monospace(text)\n\t\t{\n\t\t\treturn addMeta('font-family', 'monospace', text);\n\t\t}\n\t\n\t\tfunction italic(text)\n\t\t{\n\t\t\treturn addMeta('font-style', 'italic', text);\n\t\t}\n\t\n\t\tfunction bold(text)\n\t\t{\n\t\t\treturn addMeta('font-weight', 'bold', text);\n\t\t}\n\t\n\t\tfunction link(href, text)\n\t\t{\n\t\t\treturn addMeta('href', href, text);\n\t\t}\n\t\n\t\tfunction line(line, text)\n\t\t{\n\t\t\treturn addMeta('text-decoration', toLine(line), text);\n\t\t}\n\t\n\t\tfunction color(color, text)\n\t\t{\n\t\t\treturn addMeta('color', toCss(color), text);\n\t\t}\n\t\n\t\n\t\t// RENDER\n\t\n\t\tfunction renderHtml(text)\n\t\t{\n\t\t\tvar tag = text.ctor;\n\t\t\tif (tag === 'Text:Append')\n\t\t\t{\n\t\t\t\treturn renderHtml(text._0) + renderHtml(text._1);\n\t\t\t}\n\t\t\tif (tag === 'Text:Text')\n\t\t\t{\n\t\t\t\treturn properEscape(text._0);\n\t\t\t}\n\t\t\tif (tag === 'Text:Meta')\n\t\t\t{\n\t\t\t\treturn renderMeta(text._0, renderHtml(text._1));\n\t\t\t}\n\t\t}\n\t\n\t\tfunction renderMeta(metas, string)\n\t\t{\n\t\t\tvar href = metas.href;\n\t\t\tif (href)\n\t\t\t{\n\t\t\t\tstring = '<a href=\"' + href + '\">' + string + '</a>';\n\t\t\t}\n\t\t\tvar styles = '';\n\t\t\tfor (var key in metas)\n\t\t\t{\n\t\t\t\tif (key === 'href')\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstyles += key + ':' + metas[key] + ';';\n\t\t\t}\n\t\t\tif (styles)\n\t\t\t{\n\t\t\t\tstring = '<span style=\"' + styles + '\">' + string + '</span>';\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t\n\t\tfunction properEscape(str)\n\t\t{\n\t\t\tif (str.length === 0)\n\t\t\t{\n\t\t\t\treturn str;\n\t\t\t}\n\t\t\tstr = str //.replace(/&/g,  '&#38;')\n\t\t\t\t.replace(/\"/g,  '&#34;')\n\t\t\t\t.replace(/'/g,  '&#39;')\n\t\t\t\t.replace(/</g,  '&#60;')\n\t\t\t\t.replace(/>/g,  '&#62;');\n\t\t\tvar arr = str.split('\\n');\n\t\t\tfor (var i = arr.length; i--; )\n\t\t\t{\n\t\t\t\tarr[i] = makeSpaces(arr[i]);\n\t\t\t}\n\t\t\treturn arr.join('<br/>');\n\t\t}\n\t\n\t\tfunction makeSpaces(s)\n\t\t{\n\t\t\tif (s.length === 0)\n\t\t\t{\n\t\t\t\treturn s;\n\t\t\t}\n\t\t\tvar arr = s.split('');\n\t\t\tif (arr[0] === ' ')\n\t\t\t{\n\t\t\t\tarr[0] = '&nbsp;';\n\t\t\t}\n\t\t\tfor (var i = arr.length; --i; )\n\t\t\t{\n\t\t\t\tif (arr[i][0] === ' ' && arr[i - 1] === ' ')\n\t\t\t\t{\n\t\t\t\t\tarr[i - 1] = arr[i - 1] + arr[i];\n\t\t\t\t\tarr[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = arr.length; i--; )\n\t\t\t{\n\t\t\t\tif (arr[i].length > 1 && arr[i][0] === ' ')\n\t\t\t\t{\n\t\t\t\t\tvar spaces = arr[i].split('');\n\t\t\t\t\tfor (var j = spaces.length - 2; j >= 0; j -= 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tspaces[j] = '&nbsp;';\n\t\t\t\t\t}\n\t\t\t\t\tarr[i] = spaces.join('');\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr = arr.join('');\n\t\t\tif (arr[arr.length - 1] === ' ')\n\t\t\t{\n\t\t\t\treturn arr.slice(0, -1) + '&nbsp;';\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Text.values = {\n\t\t\tfromString: fromString,\n\t\t\tappend: F2(append),\n\t\n\t\t\theight: F2(height),\n\t\t\titalic: italic,\n\t\t\tbold: bold,\n\t\t\tline: F2(line),\n\t\t\tmonospace: monospace,\n\t\t\ttypeface: F2(typeface),\n\t\t\tcolor: F2(color),\n\t\t\tlink: F2(link),\n\t\t\tstyle: F2(style),\n\t\n\t\t\ttoTypefaces: toTypefaces,\n\t\t\ttoLine: toLine,\n\t\t\trenderHtml: renderHtml\n\t\t};\n\t};\n\t\n\tElm.Text = Elm.Text || {};\n\tElm.Text.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Text = _elm.Text || {};\n\t   if (_elm.Text.values) return _elm.Text.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Color = Elm.Color.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Text = Elm.Native.Text.make(_elm);\n\t   var _op = {};\n\t   var line = $Native$Text.line;\n\t   var italic = $Native$Text.italic;\n\t   var bold = $Native$Text.bold;\n\t   var color = $Native$Text.color;\n\t   var height = $Native$Text.height;\n\t   var link = $Native$Text.link;\n\t   var monospace = $Native$Text.monospace;\n\t   var typeface = $Native$Text.typeface;\n\t   var style = $Native$Text.style;\n\t   var append = $Native$Text.append;\n\t   var fromString = $Native$Text.fromString;\n\t   var empty = fromString(\"\");\n\t   var concat = function (texts) {    return A3($List.foldr,append,empty,texts);};\n\t   var join = F2(function (seperator,texts) {    return concat(A2($List.intersperse,seperator,texts));});\n\t   var defaultStyle = {typeface: _U.list([]),height: $Maybe.Nothing,color: $Color.black,bold: false,italic: false,line: $Maybe.Nothing};\n\t   var Style = F6(function (a,b,c,d,e,f) {    return {typeface: a,height: b,color: c,bold: d,italic: e,line: f};});\n\t   var Through = {ctor: \"Through\"};\n\t   var Over = {ctor: \"Over\"};\n\t   var Under = {ctor: \"Under\"};\n\t   var Text = {ctor: \"Text\"};\n\t   return _elm.Text.values = {_op: _op\n\t                             ,fromString: fromString\n\t                             ,empty: empty\n\t                             ,append: append\n\t                             ,concat: concat\n\t                             ,join: join\n\t                             ,link: link\n\t                             ,style: style\n\t                             ,defaultStyle: defaultStyle\n\t                             ,typeface: typeface\n\t                             ,monospace: monospace\n\t                             ,height: height\n\t                             ,color: color\n\t                             ,bold: bold\n\t                             ,italic: italic\n\t                             ,line: line\n\t                             ,Style: Style\n\t                             ,Under: Under\n\t                             ,Over: Over\n\t                             ,Through: Through};\n\t};\n\tElm.Graphics = Elm.Graphics || {};\n\tElm.Graphics.Element = Elm.Graphics.Element || {};\n\tElm.Graphics.Element.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Graphics = _elm.Graphics || {};\n\t   _elm.Graphics.Element = _elm.Graphics.Element || {};\n\t   if (_elm.Graphics.Element.values) return _elm.Graphics.Element.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Color = Elm.Color.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm),\n\t   $Text = Elm.Text.make(_elm);\n\t   var _op = {};\n\t   var DOut = {ctor: \"DOut\"};\n\t   var outward = DOut;\n\t   var DIn = {ctor: \"DIn\"};\n\t   var inward = DIn;\n\t   var DRight = {ctor: \"DRight\"};\n\t   var right = DRight;\n\t   var DLeft = {ctor: \"DLeft\"};\n\t   var left = DLeft;\n\t   var DDown = {ctor: \"DDown\"};\n\t   var down = DDown;\n\t   var DUp = {ctor: \"DUp\"};\n\t   var up = DUp;\n\t   var RawPosition = F4(function (a,b,c,d) {    return {horizontal: a,vertical: b,x: c,y: d};});\n\t   var Position = function (a) {    return {ctor: \"Position\",_0: a};};\n\t   var Relative = function (a) {    return {ctor: \"Relative\",_0: a};};\n\t   var relative = Relative;\n\t   var Absolute = function (a) {    return {ctor: \"Absolute\",_0: a};};\n\t   var absolute = Absolute;\n\t   var N = {ctor: \"N\"};\n\t   var bottomLeft = Position({horizontal: N,vertical: N,x: Absolute(0),y: Absolute(0)});\n\t   var bottomLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: N,x: x,y: y});});\n\t   var Z = {ctor: \"Z\"};\n\t   var middle = Position({horizontal: Z,vertical: Z,x: Relative(0.5),y: Relative(0.5)});\n\t   var midLeft = Position({horizontal: N,vertical: Z,x: Absolute(0),y: Relative(0.5)});\n\t   var midBottom = Position({horizontal: Z,vertical: N,x: Relative(0.5),y: Absolute(0)});\n\t   var middleAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: Z,x: x,y: y});});\n\t   var midLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: Z,x: x,y: y});});\n\t   var midBottomAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: N,x: x,y: y});});\n\t   var P = {ctor: \"P\"};\n\t   var topLeft = Position({horizontal: N,vertical: P,x: Absolute(0),y: Absolute(0)});\n\t   var topRight = Position({horizontal: P,vertical: P,x: Absolute(0),y: Absolute(0)});\n\t   var bottomRight = Position({horizontal: P,vertical: N,x: Absolute(0),y: Absolute(0)});\n\t   var midRight = Position({horizontal: P,vertical: Z,x: Absolute(0),y: Relative(0.5)});\n\t   var midTop = Position({horizontal: Z,vertical: P,x: Relative(0.5),y: Absolute(0)});\n\t   var topLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: P,x: x,y: y});});\n\t   var topRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: P,x: x,y: y});});\n\t   var bottomRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: N,x: x,y: y});});\n\t   var midRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: Z,x: x,y: y});});\n\t   var midTopAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: P,x: x,y: y});});\n\t   var justified = $Native$Graphics$Element.block(\"justify\");\n\t   var centered = $Native$Graphics$Element.block(\"center\");\n\t   var rightAligned = $Native$Graphics$Element.block(\"right\");\n\t   var leftAligned = $Native$Graphics$Element.block(\"left\");\n\t   var show = function (value) {    return leftAligned($Text.monospace($Text.fromString($Basics.toString(value))));};\n\t   var Tiled = {ctor: \"Tiled\"};\n\t   var Cropped = function (a) {    return {ctor: \"Cropped\",_0: a};};\n\t   var Fitted = {ctor: \"Fitted\"};\n\t   var Plain = {ctor: \"Plain\"};\n\t   var Custom = {ctor: \"Custom\"};\n\t   var RawHtml = {ctor: \"RawHtml\"};\n\t   var Spacer = {ctor: \"Spacer\"};\n\t   var Flow = F2(function (a,b) {    return {ctor: \"Flow\",_0: a,_1: b};});\n\t   var Container = F2(function (a,b) {    return {ctor: \"Container\",_0: a,_1: b};});\n\t   var Image = F4(function (a,b,c,d) {    return {ctor: \"Image\",_0: a,_1: b,_2: c,_3: d};});\n\t   var newElement = $Native$Graphics$Element.newElement;\n\t   var image = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Plain,w,h,src));});\n\t   var fittedImage = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Fitted,w,h,src));});\n\t   var croppedImage = F4(function (pos,w,h,src) {    return A3(newElement,w,h,A4(Image,Cropped(pos),w,h,src));});\n\t   var tiledImage = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Tiled,w,h,src));});\n\t   var container = F4(function (w,h,_p0,e) {    var _p1 = _p0;return A3(newElement,w,h,A2(Container,_p1._0,e));});\n\t   var spacer = F2(function (w,h) {    return A3(newElement,w,h,Spacer);});\n\t   var sizeOf = function (_p2) {    var _p3 = _p2;var _p4 = _p3._0;return {ctor: \"_Tuple2\",_0: _p4.props.width,_1: _p4.props.height};};\n\t   var heightOf = function (_p5) {    var _p6 = _p5;return _p6._0.props.height;};\n\t   var widthOf = function (_p7) {    var _p8 = _p7;return _p8._0.props.width;};\n\t   var above = F2(function (hi,lo) {\n\t      return A3(newElement,A2($Basics.max,widthOf(hi),widthOf(lo)),heightOf(hi) + heightOf(lo),A2(Flow,DDown,_U.list([hi,lo])));\n\t   });\n\t   var below = F2(function (lo,hi) {\n\t      return A3(newElement,A2($Basics.max,widthOf(hi),widthOf(lo)),heightOf(hi) + heightOf(lo),A2(Flow,DDown,_U.list([hi,lo])));\n\t   });\n\t   var beside = F2(function (lft,rht) {\n\t      return A3(newElement,widthOf(lft) + widthOf(rht),A2($Basics.max,heightOf(lft),heightOf(rht)),A2(Flow,right,_U.list([lft,rht])));\n\t   });\n\t   var layers = function (es) {\n\t      var hs = A2($List.map,heightOf,es);\n\t      var ws = A2($List.map,widthOf,es);\n\t      return A3(newElement,A2($Maybe.withDefault,0,$List.maximum(ws)),A2($Maybe.withDefault,0,$List.maximum(hs)),A2(Flow,DOut,es));\n\t   };\n\t   var empty = A2(spacer,0,0);\n\t   var flow = F2(function (dir,es) {\n\t      var newFlow = F2(function (w,h) {    return A3(newElement,w,h,A2(Flow,dir,es));});\n\t      var maxOrZero = function (list) {    return A2($Maybe.withDefault,0,$List.maximum(list));};\n\t      var hs = A2($List.map,heightOf,es);\n\t      var ws = A2($List.map,widthOf,es);\n\t      if (_U.eq(es,_U.list([]))) return empty; else {\n\t            var _p9 = dir;\n\t            switch (_p9.ctor)\n\t            {case \"DUp\": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n\t               case \"DDown\": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n\t               case \"DLeft\": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n\t               case \"DRight\": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n\t               case \"DIn\": return A2(newFlow,maxOrZero(ws),maxOrZero(hs));\n\t               default: return A2(newFlow,maxOrZero(ws),maxOrZero(hs));}\n\t         }\n\t   });\n\t   var Properties = F9(function (a,b,c,d,e,f,g,h,i) {    return {id: a,width: b,height: c,opacity: d,color: e,href: f,tag: g,hover: h,click: i};});\n\t   var Element_elm_builtin = function (a) {    return {ctor: \"Element_elm_builtin\",_0: a};};\n\t   var width = F2(function (newWidth,_p10) {\n\t      var _p11 = _p10;\n\t      var _p14 = _p11._0.props;\n\t      var _p13 = _p11._0.element;\n\t      var newHeight = function () {\n\t         var _p12 = _p13;\n\t         switch (_p12.ctor)\n\t         {case \"Image\": return $Basics.round($Basics.toFloat(_p12._2) / $Basics.toFloat(_p12._1) * $Basics.toFloat(newWidth));\n\t            case \"RawHtml\": return $Basics.snd(A2($Native$Graphics$Element.htmlHeight,newWidth,_p13));\n\t            default: return _p14.height;}\n\t      }();\n\t      return Element_elm_builtin({element: _p13,props: _U.update(_p14,{width: newWidth,height: newHeight})});\n\t   });\n\t   var height = F2(function (newHeight,_p15) {\n\t      var _p16 = _p15;\n\t      return Element_elm_builtin({element: _p16._0.element,props: _U.update(_p16._0.props,{height: newHeight})});\n\t   });\n\t   var size = F3(function (w,h,e) {    return A2(height,h,A2(width,w,e));});\n\t   var opacity = F2(function (givenOpacity,_p17) {\n\t      var _p18 = _p17;\n\t      return Element_elm_builtin({element: _p18._0.element,props: _U.update(_p18._0.props,{opacity: givenOpacity})});\n\t   });\n\t   var color = F2(function (clr,_p19) {\n\t      var _p20 = _p19;\n\t      return Element_elm_builtin({element: _p20._0.element,props: _U.update(_p20._0.props,{color: $Maybe.Just(clr)})});\n\t   });\n\t   var tag = F2(function (name,_p21) {    var _p22 = _p21;return Element_elm_builtin({element: _p22._0.element,props: _U.update(_p22._0.props,{tag: name})});});\n\t   var link = F2(function (href,_p23) {\n\t      var _p24 = _p23;\n\t      return Element_elm_builtin({element: _p24._0.element,props: _U.update(_p24._0.props,{href: href})});\n\t   });\n\t   return _elm.Graphics.Element.values = {_op: _op\n\t                                         ,image: image\n\t                                         ,fittedImage: fittedImage\n\t                                         ,croppedImage: croppedImage\n\t                                         ,tiledImage: tiledImage\n\t                                         ,leftAligned: leftAligned\n\t                                         ,rightAligned: rightAligned\n\t                                         ,centered: centered\n\t                                         ,justified: justified\n\t                                         ,show: show\n\t                                         ,width: width\n\t                                         ,height: height\n\t                                         ,size: size\n\t                                         ,color: color\n\t                                         ,opacity: opacity\n\t                                         ,link: link\n\t                                         ,tag: tag\n\t                                         ,widthOf: widthOf\n\t                                         ,heightOf: heightOf\n\t                                         ,sizeOf: sizeOf\n\t                                         ,flow: flow\n\t                                         ,up: up\n\t                                         ,down: down\n\t                                         ,left: left\n\t                                         ,right: right\n\t                                         ,inward: inward\n\t                                         ,outward: outward\n\t                                         ,layers: layers\n\t                                         ,above: above\n\t                                         ,below: below\n\t                                         ,beside: beside\n\t                                         ,empty: empty\n\t                                         ,spacer: spacer\n\t                                         ,container: container\n\t                                         ,middle: middle\n\t                                         ,midTop: midTop\n\t                                         ,midBottom: midBottom\n\t                                         ,midLeft: midLeft\n\t                                         ,midRight: midRight\n\t                                         ,topLeft: topLeft\n\t                                         ,topRight: topRight\n\t                                         ,bottomLeft: bottomLeft\n\t                                         ,bottomRight: bottomRight\n\t                                         ,absolute: absolute\n\t                                         ,relative: relative\n\t                                         ,middleAt: middleAt\n\t                                         ,midTopAt: midTopAt\n\t                                         ,midBottomAt: midBottomAt\n\t                                         ,midLeftAt: midLeftAt\n\t                                         ,midRightAt: midRightAt\n\t                                         ,topLeftAt: topLeftAt\n\t                                         ,topRightAt: topRightAt\n\t                                         ,bottomLeftAt: bottomLeftAt\n\t                                         ,bottomRightAt: bottomRightAt};\n\t};\n\tElm.Graphics = Elm.Graphics || {};\n\tElm.Graphics.Collage = Elm.Graphics.Collage || {};\n\tElm.Graphics.Collage.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Graphics = _elm.Graphics || {};\n\t   _elm.Graphics.Collage = _elm.Graphics.Collage || {};\n\t   if (_elm.Graphics.Collage.values) return _elm.Graphics.Collage.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Color = Elm.Color.make(_elm),\n\t   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Native$Graphics$Collage = Elm.Native.Graphics.Collage.make(_elm),\n\t   $Text = Elm.Text.make(_elm),\n\t   $Transform2D = Elm.Transform2D.make(_elm);\n\t   var _op = {};\n\t   var Shape = function (a) {    return {ctor: \"Shape\",_0: a};};\n\t   var polygon = function (points) {    return Shape(points);};\n\t   var rect = F2(function (w,h) {\n\t      var hh = h / 2;\n\t      var hw = w / 2;\n\t      return Shape(_U.list([{ctor: \"_Tuple2\",_0: 0 - hw,_1: 0 - hh}\n\t                           ,{ctor: \"_Tuple2\",_0: 0 - hw,_1: hh}\n\t                           ,{ctor: \"_Tuple2\",_0: hw,_1: hh}\n\t                           ,{ctor: \"_Tuple2\",_0: hw,_1: 0 - hh}]));\n\t   });\n\t   var square = function (n) {    return A2(rect,n,n);};\n\t   var oval = F2(function (w,h) {\n\t      var hh = h / 2;\n\t      var hw = w / 2;\n\t      var n = 50;\n\t      var t = 2 * $Basics.pi / n;\n\t      var f = function (i) {    return {ctor: \"_Tuple2\",_0: hw * $Basics.cos(t * i),_1: hh * $Basics.sin(t * i)};};\n\t      return Shape(A2($List.map,f,_U.range(0,n - 1)));\n\t   });\n\t   var circle = function (r) {    return A2(oval,2 * r,2 * r);};\n\t   var ngon = F2(function (n,r) {\n\t      var m = $Basics.toFloat(n);\n\t      var t = 2 * $Basics.pi / m;\n\t      var f = function (i) {    return {ctor: \"_Tuple2\",_0: r * $Basics.cos(t * i),_1: r * $Basics.sin(t * i)};};\n\t      return Shape(A2($List.map,f,_U.range(0,m - 1)));\n\t   });\n\t   var Path = function (a) {    return {ctor: \"Path\",_0: a};};\n\t   var path = function (ps) {    return Path(ps);};\n\t   var segment = F2(function (p1,p2) {    return Path(_U.list([p1,p2]));});\n\t   var collage = $Native$Graphics$Collage.collage;\n\t   var Fill = function (a) {    return {ctor: \"Fill\",_0: a};};\n\t   var Line = function (a) {    return {ctor: \"Line\",_0: a};};\n\t   var FGroup = F2(function (a,b) {    return {ctor: \"FGroup\",_0: a,_1: b};});\n\t   var FElement = function (a) {    return {ctor: \"FElement\",_0: a};};\n\t   var FImage = F4(function (a,b,c,d) {    return {ctor: \"FImage\",_0: a,_1: b,_2: c,_3: d};});\n\t   var FText = function (a) {    return {ctor: \"FText\",_0: a};};\n\t   var FOutlinedText = F2(function (a,b) {    return {ctor: \"FOutlinedText\",_0: a,_1: b};});\n\t   var FShape = F2(function (a,b) {    return {ctor: \"FShape\",_0: a,_1: b};});\n\t   var FPath = F2(function (a,b) {    return {ctor: \"FPath\",_0: a,_1: b};});\n\t   var LineStyle = F6(function (a,b,c,d,e,f) {    return {color: a,width: b,cap: c,join: d,dashing: e,dashOffset: f};});\n\t   var Clipped = {ctor: \"Clipped\"};\n\t   var Sharp = function (a) {    return {ctor: \"Sharp\",_0: a};};\n\t   var Smooth = {ctor: \"Smooth\"};\n\t   var Padded = {ctor: \"Padded\"};\n\t   var Round = {ctor: \"Round\"};\n\t   var Flat = {ctor: \"Flat\"};\n\t   var defaultLine = {color: $Color.black,width: 1,cap: Flat,join: Sharp(10),dashing: _U.list([]),dashOffset: 0};\n\t   var solid = function (clr) {    return _U.update(defaultLine,{color: clr});};\n\t   var dashed = function (clr) {    return _U.update(defaultLine,{color: clr,dashing: _U.list([8,4])});};\n\t   var dotted = function (clr) {    return _U.update(defaultLine,{color: clr,dashing: _U.list([3,3])});};\n\t   var Grad = function (a) {    return {ctor: \"Grad\",_0: a};};\n\t   var Texture = function (a) {    return {ctor: \"Texture\",_0: a};};\n\t   var Solid = function (a) {    return {ctor: \"Solid\",_0: a};};\n\t   var Form_elm_builtin = function (a) {    return {ctor: \"Form_elm_builtin\",_0: a};};\n\t   var form = function (f) {    return Form_elm_builtin({theta: 0,scale: 1,x: 0,y: 0,alpha: 1,form: f});};\n\t   var fill = F2(function (style,_p0) {    var _p1 = _p0;return form(A2(FShape,Fill(style),_p1._0));});\n\t   var filled = F2(function (color,shape) {    return A2(fill,Solid(color),shape);});\n\t   var textured = F2(function (src,shape) {    return A2(fill,Texture(src),shape);});\n\t   var gradient = F2(function (grad,shape) {    return A2(fill,Grad(grad),shape);});\n\t   var outlined = F2(function (style,_p2) {    var _p3 = _p2;return form(A2(FShape,Line(style),_p3._0));});\n\t   var traced = F2(function (style,_p4) {    var _p5 = _p4;return form(A2(FPath,style,_p5._0));});\n\t   var sprite = F4(function (w,h,pos,src) {    return form(A4(FImage,w,h,pos,src));});\n\t   var toForm = function (e) {    return form(FElement(e));};\n\t   var group = function (fs) {    return form(A2(FGroup,$Transform2D.identity,fs));};\n\t   var groupTransform = F2(function (matrix,fs) {    return form(A2(FGroup,matrix,fs));});\n\t   var text = function (t) {    return form(FText(t));};\n\t   var outlinedText = F2(function (ls,t) {    return form(A2(FOutlinedText,ls,t));});\n\t   var move = F2(function (_p7,_p6) {\n\t      var _p8 = _p7;\n\t      var _p9 = _p6;\n\t      var _p10 = _p9._0;\n\t      return Form_elm_builtin(_U.update(_p10,{x: _p10.x + _p8._0,y: _p10.y + _p8._1}));\n\t   });\n\t   var moveX = F2(function (x,_p11) {    var _p12 = _p11;var _p13 = _p12._0;return Form_elm_builtin(_U.update(_p13,{x: _p13.x + x}));});\n\t   var moveY = F2(function (y,_p14) {    var _p15 = _p14;var _p16 = _p15._0;return Form_elm_builtin(_U.update(_p16,{y: _p16.y + y}));});\n\t   var scale = F2(function (s,_p17) {    var _p18 = _p17;var _p19 = _p18._0;return Form_elm_builtin(_U.update(_p19,{scale: _p19.scale * s}));});\n\t   var rotate = F2(function (t,_p20) {    var _p21 = _p20;var _p22 = _p21._0;return Form_elm_builtin(_U.update(_p22,{theta: _p22.theta + t}));});\n\t   var alpha = F2(function (a,_p23) {    var _p24 = _p23;return Form_elm_builtin(_U.update(_p24._0,{alpha: a}));});\n\t   return _elm.Graphics.Collage.values = {_op: _op\n\t                                         ,collage: collage\n\t                                         ,toForm: toForm\n\t                                         ,filled: filled\n\t                                         ,textured: textured\n\t                                         ,gradient: gradient\n\t                                         ,outlined: outlined\n\t                                         ,traced: traced\n\t                                         ,text: text\n\t                                         ,outlinedText: outlinedText\n\t                                         ,move: move\n\t                                         ,moveX: moveX\n\t                                         ,moveY: moveY\n\t                                         ,scale: scale\n\t                                         ,rotate: rotate\n\t                                         ,alpha: alpha\n\t                                         ,group: group\n\t                                         ,groupTransform: groupTransform\n\t                                         ,rect: rect\n\t                                         ,oval: oval\n\t                                         ,square: square\n\t                                         ,circle: circle\n\t                                         ,ngon: ngon\n\t                                         ,polygon: polygon\n\t                                         ,segment: segment\n\t                                         ,path: path\n\t                                         ,solid: solid\n\t                                         ,dashed: dashed\n\t                                         ,dotted: dotted\n\t                                         ,defaultLine: defaultLine\n\t                                         ,LineStyle: LineStyle\n\t                                         ,Flat: Flat\n\t                                         ,Round: Round\n\t                                         ,Padded: Padded\n\t                                         ,Smooth: Smooth\n\t                                         ,Sharp: Sharp\n\t                                         ,Clipped: Clipped};\n\t};\n\tElm.Native.Debug = {};\n\tElm.Native.Debug.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Debug = localRuntime.Native.Debug || {};\n\t\tif (localRuntime.Native.Debug.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Debug.values;\n\t\t}\n\t\n\t\tvar toString = Elm.Native.Utils.make(localRuntime).toString;\n\t\n\t\tfunction log(tag, value)\n\t\t{\n\t\t\tvar msg = tag + ': ' + toString(value);\n\t\t\tvar process = process || {};\n\t\t\tif (process.stdout)\n\t\t\t{\n\t\t\t\tprocess.stdout.write(msg);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t\n\t\tfunction crash(message)\n\t\t{\n\t\t\tthrow new Error(message);\n\t\t}\n\t\n\t\tfunction tracePath(tag, form)\n\t\t{\n\t\t\tif (localRuntime.debug)\n\t\t\t{\n\t\t\t\treturn localRuntime.debug.trace(tag, form);\n\t\t\t}\n\t\t\treturn form;\n\t\t}\n\t\n\t\tfunction watch(tag, value)\n\t\t{\n\t\t\tif (localRuntime.debug)\n\t\t\t{\n\t\t\t\tlocalRuntime.debug.watch(tag, value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t\n\t\tfunction watchSummary(tag, summarize, value)\n\t\t{\n\t\t\tif (localRuntime.debug)\n\t\t\t{\n\t\t\t\tlocalRuntime.debug.watch(tag, summarize(value));\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t\n\t\treturn localRuntime.Native.Debug.values = {\n\t\t\tcrash: crash,\n\t\t\ttracePath: F2(tracePath),\n\t\t\tlog: F2(log),\n\t\t\twatch: F2(watch),\n\t\t\twatchSummary: F3(watchSummary)\n\t\t};\n\t};\n\t\n\tElm.Debug = Elm.Debug || {};\n\tElm.Debug.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Debug = _elm.Debug || {};\n\t   if (_elm.Debug.values) return _elm.Debug.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Graphics$Collage = Elm.Graphics.Collage.make(_elm),$Native$Debug = Elm.Native.Debug.make(_elm);\n\t   var _op = {};\n\t   var trace = $Native$Debug.tracePath;\n\t   var watchSummary = $Native$Debug.watchSummary;\n\t   var watch = $Native$Debug.watch;\n\t   var crash = $Native$Debug.crash;\n\t   var log = $Native$Debug.log;\n\t   return _elm.Debug.values = {_op: _op,log: log,crash: crash,watch: watch,watchSummary: watchSummary,trace: trace};\n\t};\n\tElm.Result = Elm.Result || {};\n\tElm.Result.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Result = _elm.Result || {};\n\t   if (_elm.Result.values) return _elm.Result.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Maybe = Elm.Maybe.make(_elm);\n\t   var _op = {};\n\t   var toMaybe = function (result) {    var _p0 = result;if (_p0.ctor === \"Ok\") {    return $Maybe.Just(_p0._0);} else {    return $Maybe.Nothing;}};\n\t   var withDefault = F2(function (def,result) {    var _p1 = result;if (_p1.ctor === \"Ok\") {    return _p1._0;} else {    return def;}});\n\t   var Err = function (a) {    return {ctor: \"Err\",_0: a};};\n\t   var andThen = F2(function (result,callback) {    var _p2 = result;if (_p2.ctor === \"Ok\") {    return callback(_p2._0);} else {    return Err(_p2._0);}});\n\t   var Ok = function (a) {    return {ctor: \"Ok\",_0: a};};\n\t   var map = F2(function (func,ra) {    var _p3 = ra;if (_p3.ctor === \"Ok\") {    return Ok(func(_p3._0));} else {    return Err(_p3._0);}});\n\t   var map2 = F3(function (func,ra,rb) {\n\t      var _p4 = {ctor: \"_Tuple2\",_0: ra,_1: rb};\n\t      if (_p4._0.ctor === \"Ok\") {\n\t            if (_p4._1.ctor === \"Ok\") {\n\t                  return Ok(A2(func,_p4._0._0,_p4._1._0));\n\t               } else {\n\t                  return Err(_p4._1._0);\n\t               }\n\t         } else {\n\t            return Err(_p4._0._0);\n\t         }\n\t   });\n\t   var map3 = F4(function (func,ra,rb,rc) {\n\t      var _p5 = {ctor: \"_Tuple3\",_0: ra,_1: rb,_2: rc};\n\t      if (_p5._0.ctor === \"Ok\") {\n\t            if (_p5._1.ctor === \"Ok\") {\n\t                  if (_p5._2.ctor === \"Ok\") {\n\t                        return Ok(A3(func,_p5._0._0,_p5._1._0,_p5._2._0));\n\t                     } else {\n\t                        return Err(_p5._2._0);\n\t                     }\n\t               } else {\n\t                  return Err(_p5._1._0);\n\t               }\n\t         } else {\n\t            return Err(_p5._0._0);\n\t         }\n\t   });\n\t   var map4 = F5(function (func,ra,rb,rc,rd) {\n\t      var _p6 = {ctor: \"_Tuple4\",_0: ra,_1: rb,_2: rc,_3: rd};\n\t      if (_p6._0.ctor === \"Ok\") {\n\t            if (_p6._1.ctor === \"Ok\") {\n\t                  if (_p6._2.ctor === \"Ok\") {\n\t                        if (_p6._3.ctor === \"Ok\") {\n\t                              return Ok(A4(func,_p6._0._0,_p6._1._0,_p6._2._0,_p6._3._0));\n\t                           } else {\n\t                              return Err(_p6._3._0);\n\t                           }\n\t                     } else {\n\t                        return Err(_p6._2._0);\n\t                     }\n\t               } else {\n\t                  return Err(_p6._1._0);\n\t               }\n\t         } else {\n\t            return Err(_p6._0._0);\n\t         }\n\t   });\n\t   var map5 = F6(function (func,ra,rb,rc,rd,re) {\n\t      var _p7 = {ctor: \"_Tuple5\",_0: ra,_1: rb,_2: rc,_3: rd,_4: re};\n\t      if (_p7._0.ctor === \"Ok\") {\n\t            if (_p7._1.ctor === \"Ok\") {\n\t                  if (_p7._2.ctor === \"Ok\") {\n\t                        if (_p7._3.ctor === \"Ok\") {\n\t                              if (_p7._4.ctor === \"Ok\") {\n\t                                    return Ok(A5(func,_p7._0._0,_p7._1._0,_p7._2._0,_p7._3._0,_p7._4._0));\n\t                                 } else {\n\t                                    return Err(_p7._4._0);\n\t                                 }\n\t                           } else {\n\t                              return Err(_p7._3._0);\n\t                           }\n\t                     } else {\n\t                        return Err(_p7._2._0);\n\t                     }\n\t               } else {\n\t                  return Err(_p7._1._0);\n\t               }\n\t         } else {\n\t            return Err(_p7._0._0);\n\t         }\n\t   });\n\t   var formatError = F2(function (f,result) {    var _p8 = result;if (_p8.ctor === \"Ok\") {    return Ok(_p8._0);} else {    return Err(f(_p8._0));}});\n\t   var fromMaybe = F2(function (err,maybe) {    var _p9 = maybe;if (_p9.ctor === \"Just\") {    return Ok(_p9._0);} else {    return Err(err);}});\n\t   return _elm.Result.values = {_op: _op\n\t                               ,withDefault: withDefault\n\t                               ,map: map\n\t                               ,map2: map2\n\t                               ,map3: map3\n\t                               ,map4: map4\n\t                               ,map5: map5\n\t                               ,andThen: andThen\n\t                               ,toMaybe: toMaybe\n\t                               ,fromMaybe: fromMaybe\n\t                               ,formatError: formatError\n\t                               ,Ok: Ok\n\t                               ,Err: Err};\n\t};\n\tElm.Native.Signal = {};\n\t\n\tElm.Native.Signal.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Signal = localRuntime.Native.Signal || {};\n\t\tif (localRuntime.Native.Signal.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Signal.values;\n\t\t}\n\t\n\t\n\t\tvar Task = Elm.Native.Task.make(localRuntime);\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\n\t\tfunction broadcastToKids(node, timestamp, update)\n\t\t{\n\t\t\tvar kids = node.kids;\n\t\t\tfor (var i = kids.length; i--; )\n\t\t\t{\n\t\t\t\tkids[i].notify(timestamp, update, node.id);\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// INPUT\n\t\n\t\tfunction input(name, base)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'input-' + name,\n\t\t\t\tvalue: base,\n\t\t\t\tparents: [],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, targetId, value) {\n\t\t\t\tvar update = targetId === node.id;\n\t\t\t\tif (update)\n\t\t\t\t{\n\t\t\t\t\tnode.value = value;\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t\treturn update;\n\t\t\t};\n\t\n\t\t\tlocalRuntime.inputs.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction constant(value)\n\t\t{\n\t\t\treturn input('constant', value);\n\t\t}\n\t\n\t\n\t\t// MAILBOX\n\t\n\t\tfunction mailbox(base)\n\t\t{\n\t\t\tvar signal = input('mailbox', base);\n\t\n\t\t\tfunction send(value) {\n\t\t\t\treturn Task.asyncFunction(function(callback) {\n\t\t\t\t\tlocalRuntime.setTimeout(function() {\n\t\t\t\t\t\tlocalRuntime.notify(signal.id, value);\n\t\t\t\t\t}, 0);\n\t\t\t\t\tcallback(Task.succeed(Utils.Tuple0));\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tsignal: signal,\n\t\t\t\taddress: {\n\t\t\t\t\tctor: 'Address',\n\t\t\t\t\t_0: send\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\tfunction sendMessage(message)\n\t\t{\n\t\t\tTask.perform(message._0);\n\t\t}\n\t\n\t\n\t\t// OUTPUT\n\t\n\t\tfunction output(name, handler, parent)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'output-' + name,\n\t\t\t\tparents: [parent],\n\t\t\t\tisOutput: true\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tif (parentUpdate)\n\t\t\t\t{\n\t\t\t\t\thandler(parent.value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tparent.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\t// MAP\n\t\n\t\tfunction mapMany(refreshValue, args)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'map' + args.length,\n\t\t\t\tvalue: refreshValue(),\n\t\t\t\tparents: args,\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tvar numberOfParents = args.length;\n\t\t\tvar count = 0;\n\t\t\tvar update = false;\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\t++count;\n\t\n\t\t\t\tupdate = update || parentUpdate;\n\t\n\t\t\t\tif (count === numberOfParents)\n\t\t\t\t{\n\t\t\t\t\tif (update)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.value = refreshValue();\n\t\t\t\t\t}\n\t\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t\t\tupdate = false;\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tfor (var i = numberOfParents; i--; )\n\t\t\t{\n\t\t\t\targs[i].kids.push(node);\n\t\t\t}\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\tfunction map(func, a)\n\t\t{\n\t\t\tfunction refreshValue()\n\t\t\t{\n\t\t\t\treturn func(a.value);\n\t\t\t}\n\t\t\treturn mapMany(refreshValue, [a]);\n\t\t}\n\t\n\t\n\t\tfunction map2(func, a, b)\n\t\t{\n\t\t\tfunction refreshValue()\n\t\t\t{\n\t\t\t\treturn A2( func, a.value, b.value );\n\t\t\t}\n\t\t\treturn mapMany(refreshValue, [a, b]);\n\t\t}\n\t\n\t\n\t\tfunction map3(func, a, b, c)\n\t\t{\n\t\t\tfunction refreshValue()\n\t\t\t{\n\t\t\t\treturn A3( func, a.value, b.value, c.value );\n\t\t\t}\n\t\t\treturn mapMany(refreshValue, [a, b, c]);\n\t\t}\n\t\n\t\n\t\tfunction map4(func, a, b, c, d)\n\t\t{\n\t\t\tfunction refreshValue()\n\t\t\t{\n\t\t\t\treturn A4( func, a.value, b.value, c.value, d.value );\n\t\t\t}\n\t\t\treturn mapMany(refreshValue, [a, b, c, d]);\n\t\t}\n\t\n\t\n\t\tfunction map5(func, a, b, c, d, e)\n\t\t{\n\t\t\tfunction refreshValue()\n\t\t\t{\n\t\t\t\treturn A5( func, a.value, b.value, c.value, d.value, e.value );\n\t\t\t}\n\t\t\treturn mapMany(refreshValue, [a, b, c, d, e]);\n\t\t}\n\t\n\t\n\t\t// FOLD\n\t\n\t\tfunction foldp(update, state, signal)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'foldp',\n\t\t\t\tparents: [signal],\n\t\t\t\tkids: [],\n\t\t\t\tvalue: state\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tif (parentUpdate)\n\t\t\t\t{\n\t\t\t\t\tnode.value = A2( update, signal.value, node.value );\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, parentUpdate);\n\t\t\t};\n\t\n\t\t\tsignal.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\t// TIME\n\t\n\t\tfunction timestamp(signal)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'timestamp',\n\t\t\t\tvalue: Utils.Tuple2(localRuntime.timer.programStart, signal.value),\n\t\t\t\tparents: [signal],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tif (parentUpdate)\n\t\t\t\t{\n\t\t\t\t\tnode.value = Utils.Tuple2(timestamp, signal.value);\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, parentUpdate);\n\t\t\t};\n\t\n\t\t\tsignal.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\tfunction delay(time, signal)\n\t\t{\n\t\t\tvar delayed = input('delay-input-' + time, signal.value);\n\t\n\t\t\tfunction handler(value)\n\t\t\t{\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tlocalRuntime.notify(delayed.id, value);\n\t\t\t\t}, time);\n\t\t\t}\n\t\n\t\t\toutput('delay-output-' + time, handler, signal);\n\t\n\t\t\treturn delayed;\n\t\t}\n\t\n\t\n\t\t// MERGING\n\t\n\t\tfunction genericMerge(tieBreaker, leftStream, rightStream)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'merge',\n\t\t\t\tvalue: A2(tieBreaker, leftStream.value, rightStream.value),\n\t\t\t\tparents: [leftStream, rightStream],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tvar left = { touched: false, update: false, value: null };\n\t\t\tvar right = { touched: false, update: false, value: null };\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tif (parentID === leftStream.id)\n\t\t\t\t{\n\t\t\t\t\tleft.touched = true;\n\t\t\t\t\tleft.update = parentUpdate;\n\t\t\t\t\tleft.value = leftStream.value;\n\t\t\t\t}\n\t\t\t\tif (parentID === rightStream.id)\n\t\t\t\t{\n\t\t\t\t\tright.touched = true;\n\t\t\t\t\tright.update = parentUpdate;\n\t\t\t\t\tright.value = rightStream.value;\n\t\t\t\t}\n\t\n\t\t\t\tif (left.touched && right.touched)\n\t\t\t\t{\n\t\t\t\t\tvar update = false;\n\t\t\t\t\tif (left.update && right.update)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.value = A2(tieBreaker, left.value, right.value);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (left.update)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.value = left.value;\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (right.update)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.value = right.value;\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t\tleft.touched = false;\n\t\t\t\t\tright.touched = false;\n\t\n\t\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tleftStream.kids.push(node);\n\t\t\trightStream.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\t// FILTERING\n\t\n\t\tfunction filterMap(toMaybe, base, signal)\n\t\t{\n\t\t\tvar maybe = toMaybe(signal.value);\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'filterMap',\n\t\t\t\tvalue: maybe.ctor === 'Nothing' ? base : maybe._0,\n\t\t\t\tparents: [signal],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tvar update = false;\n\t\t\t\tif (parentUpdate)\n\t\t\t\t{\n\t\t\t\t\tvar maybe = toMaybe(signal.value);\n\t\t\t\t\tif (maybe.ctor === 'Just')\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t\tnode.value = maybe._0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t};\n\t\n\t\t\tsignal.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\t// SAMPLING\n\t\n\t\tfunction sampleOn(ticker, signal)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'sampleOn',\n\t\t\t\tvalue: signal.value,\n\t\t\t\tparents: [ticker, signal],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tvar signalTouch = false;\n\t\t\tvar tickerTouch = false;\n\t\t\tvar tickerUpdate = false;\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tif (parentID === ticker.id)\n\t\t\t\t{\n\t\t\t\t\ttickerTouch = true;\n\t\t\t\t\ttickerUpdate = parentUpdate;\n\t\t\t\t}\n\t\t\t\tif (parentID === signal.id)\n\t\t\t\t{\n\t\t\t\t\tsignalTouch = true;\n\t\t\t\t}\n\t\n\t\t\t\tif (tickerTouch && signalTouch)\n\t\t\t\t{\n\t\t\t\t\tif (tickerUpdate)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.value = signal.value;\n\t\t\t\t\t}\n\t\t\t\t\ttickerTouch = false;\n\t\t\t\t\tsignalTouch = false;\n\t\n\t\t\t\t\tbroadcastToKids(node, timestamp, tickerUpdate);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tticker.kids.push(node);\n\t\t\tsignal.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\t// DROP REPEATS\n\t\n\t\tfunction dropRepeats(signal)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tid: Utils.guid(),\n\t\t\t\tname: 'dropRepeats',\n\t\t\t\tvalue: signal.value,\n\t\t\t\tparents: [signal],\n\t\t\t\tkids: []\n\t\t\t};\n\t\n\t\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t\t{\n\t\t\t\tvar update = false;\n\t\t\t\tif (parentUpdate && !Utils.eq(node.value, signal.value))\n\t\t\t\t{\n\t\t\t\t\tnode.value = signal.value;\n\t\t\t\t\tupdate = true;\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t};\n\t\n\t\t\tsignal.kids.push(node);\n\t\n\t\t\treturn node;\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Signal.values = {\n\t\t\tinput: input,\n\t\t\tconstant: constant,\n\t\t\tmailbox: mailbox,\n\t\t\tsendMessage: sendMessage,\n\t\t\toutput: output,\n\t\t\tmap: F2(map),\n\t\t\tmap2: F3(map2),\n\t\t\tmap3: F4(map3),\n\t\t\tmap4: F5(map4),\n\t\t\tmap5: F6(map5),\n\t\t\tfoldp: F3(foldp),\n\t\t\tgenericMerge: F3(genericMerge),\n\t\t\tfilterMap: F3(filterMap),\n\t\t\tsampleOn: F2(sampleOn),\n\t\t\tdropRepeats: dropRepeats,\n\t\t\ttimestamp: timestamp,\n\t\t\tdelay: F2(delay)\n\t\t};\n\t};\n\t\n\tElm.Native.Task = {};\n\t\n\tElm.Native.Task.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Task = localRuntime.Native.Task || {};\n\t\tif (localRuntime.Native.Task.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Task.values;\n\t\t}\n\t\n\t\tvar Result = Elm.Result.make(localRuntime);\n\t\tvar Signal;\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\n\t\t// CONSTRUCTORS\n\t\n\t\tfunction succeed(value)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttag: 'Succeed',\n\t\t\t\tvalue: value\n\t\t\t};\n\t\t}\n\t\n\t\tfunction fail(error)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttag: 'Fail',\n\t\t\t\tvalue: error\n\t\t\t};\n\t\t}\n\t\n\t\tfunction asyncFunction(func)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttag: 'Async',\n\t\t\t\tasyncFunction: func\n\t\t\t};\n\t\t}\n\t\n\t\tfunction andThen(task, callback)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttag: 'AndThen',\n\t\t\t\ttask: task,\n\t\t\t\tcallback: callback\n\t\t\t};\n\t\t}\n\t\n\t\tfunction catch_(task, callback)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttag: 'Catch',\n\t\t\t\ttask: task,\n\t\t\t\tcallback: callback\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// RUNNER\n\t\n\t\tfunction perform(task) {\n\t\t\trunTask({ task: task }, function() {});\n\t\t}\n\t\n\t\tfunction performSignal(name, signal)\n\t\t{\n\t\t\tvar workQueue = [];\n\t\n\t\t\tfunction onComplete()\n\t\t\t{\n\t\t\t\tworkQueue.shift();\n\t\n\t\t\t\tif (workQueue.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar task = workQueue[0];\n\t\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\trunTask(task, onComplete);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction register(task)\n\t\t\t{\n\t\t\t\tvar root = { task: task };\n\t\t\t\tworkQueue.push(root);\n\t\t\t\tif (workQueue.length === 1)\n\t\t\t\t{\n\t\t\t\t\trunTask(root, onComplete);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!Signal)\n\t\t\t{\n\t\t\t\tSignal = Elm.Native.Signal.make(localRuntime);\n\t\t\t}\n\t\t\tSignal.output('perform-tasks-' + name, register, signal);\n\t\n\t\t\tregister(signal.value);\n\t\n\t\t\treturn signal;\n\t\t}\n\t\n\t\tfunction mark(status, task)\n\t\t{\n\t\t\treturn { status: status, task: task };\n\t\t}\n\t\n\t\tfunction runTask(root, onComplete)\n\t\t{\n\t\t\tvar result = mark('runnable', root.task);\n\t\t\twhile (result.status === 'runnable')\n\t\t\t{\n\t\t\t\tresult = stepTask(onComplete, root, result.task);\n\t\t\t}\n\t\n\t\t\tif (result.status === 'done')\n\t\t\t{\n\t\t\t\troot.task = result.task;\n\t\t\t\tonComplete();\n\t\t\t}\n\t\n\t\t\tif (result.status === 'blocked')\n\t\t\t{\n\t\t\t\troot.task = result.task;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction stepTask(onComplete, root, task)\n\t\t{\n\t\t\tvar tag = task.tag;\n\t\n\t\t\tif (tag === 'Succeed' || tag === 'Fail')\n\t\t\t{\n\t\t\t\treturn mark('done', task);\n\t\t\t}\n\t\n\t\t\tif (tag === 'Async')\n\t\t\t{\n\t\t\t\tvar placeHolder = {};\n\t\t\t\tvar couldBeSync = true;\n\t\t\t\tvar wasSync = false;\n\t\n\t\t\t\ttask.asyncFunction(function(result) {\n\t\t\t\t\tplaceHolder.tag = result.tag;\n\t\t\t\t\tplaceHolder.value = result.value;\n\t\t\t\t\tif (couldBeSync)\n\t\t\t\t\t{\n\t\t\t\t\t\twasSync = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trunTask(root, onComplete);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcouldBeSync = false;\n\t\t\t\treturn mark(wasSync ? 'done' : 'blocked', placeHolder);\n\t\t\t}\n\t\n\t\t\tif (tag === 'AndThen' || tag === 'Catch')\n\t\t\t{\n\t\t\t\tvar result = mark('runnable', task.task);\n\t\t\t\twhile (result.status === 'runnable')\n\t\t\t\t{\n\t\t\t\t\tresult = stepTask(onComplete, root, result.task);\n\t\t\t\t}\n\t\n\t\t\t\tif (result.status === 'done')\n\t\t\t\t{\n\t\t\t\t\tvar activeTask = result.task;\n\t\t\t\t\tvar activeTag = activeTask.tag;\n\t\n\t\t\t\t\tvar succeedChain = activeTag === 'Succeed' && tag === 'AndThen';\n\t\t\t\t\tvar failChain = activeTag === 'Fail' && tag === 'Catch';\n\t\n\t\t\t\t\treturn (succeedChain || failChain)\n\t\t\t\t\t\t? mark('runnable', task.callback(activeTask.value))\n\t\t\t\t\t\t: mark('runnable', activeTask);\n\t\t\t\t}\n\t\t\t\tif (result.status === 'blocked')\n\t\t\t\t{\n\t\t\t\t\treturn mark('blocked', {\n\t\t\t\t\t\ttag: tag,\n\t\t\t\t\t\ttask: result.task,\n\t\t\t\t\t\tcallback: task.callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// THREADS\n\t\n\t\tfunction sleep(time) {\n\t\t\treturn asyncFunction(function(callback) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tcallback(succeed(Utils.Tuple0));\n\t\t\t\t}, time);\n\t\t\t});\n\t\t}\n\t\n\t\tfunction spawn(task) {\n\t\t\treturn asyncFunction(function(callback) {\n\t\t\t\tvar id = setTimeout(function() {\n\t\t\t\t\tperform(task);\n\t\t\t\t}, 0);\n\t\t\t\tcallback(succeed(id));\n\t\t\t});\n\t\t}\n\t\n\t\n\t\treturn localRuntime.Native.Task.values = {\n\t\t\tsucceed: succeed,\n\t\t\tfail: fail,\n\t\t\tasyncFunction: asyncFunction,\n\t\t\tandThen: F2(andThen),\n\t\t\tcatch_: F2(catch_),\n\t\t\tperform: perform,\n\t\t\tperformSignal: performSignal,\n\t\t\tspawn: spawn,\n\t\t\tsleep: sleep\n\t\t};\n\t};\n\t\n\tElm.Task = Elm.Task || {};\n\tElm.Task.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Task = _elm.Task || {};\n\t   if (_elm.Task.values) return _elm.Task.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Task = Elm.Native.Task.make(_elm),\n\t   $Result = Elm.Result.make(_elm);\n\t   var _op = {};\n\t   var sleep = $Native$Task.sleep;\n\t   var spawn = $Native$Task.spawn;\n\t   var ThreadID = function (a) {    return {ctor: \"ThreadID\",_0: a};};\n\t   var onError = $Native$Task.catch_;\n\t   var andThen = $Native$Task.andThen;\n\t   var fail = $Native$Task.fail;\n\t   var mapError = F2(function (f,task) {    return A2(onError,task,function (err) {    return fail(f(err));});});\n\t   var succeed = $Native$Task.succeed;\n\t   var map = F2(function (func,taskA) {    return A2(andThen,taskA,function (a) {    return succeed(func(a));});});\n\t   var map2 = F3(function (func,taskA,taskB) {\n\t      return A2(andThen,taskA,function (a) {    return A2(andThen,taskB,function (b) {    return succeed(A2(func,a,b));});});\n\t   });\n\t   var map3 = F4(function (func,taskA,taskB,taskC) {\n\t      return A2(andThen,\n\t      taskA,\n\t      function (a) {\n\t         return A2(andThen,taskB,function (b) {    return A2(andThen,taskC,function (c) {    return succeed(A3(func,a,b,c));});});\n\t      });\n\t   });\n\t   var map4 = F5(function (func,taskA,taskB,taskC,taskD) {\n\t      return A2(andThen,\n\t      taskA,\n\t      function (a) {\n\t         return A2(andThen,\n\t         taskB,\n\t         function (b) {\n\t            return A2(andThen,taskC,function (c) {    return A2(andThen,taskD,function (d) {    return succeed(A4(func,a,b,c,d));});});\n\t         });\n\t      });\n\t   });\n\t   var map5 = F6(function (func,taskA,taskB,taskC,taskD,taskE) {\n\t      return A2(andThen,\n\t      taskA,\n\t      function (a) {\n\t         return A2(andThen,\n\t         taskB,\n\t         function (b) {\n\t            return A2(andThen,\n\t            taskC,\n\t            function (c) {\n\t               return A2(andThen,taskD,function (d) {    return A2(andThen,taskE,function (e) {    return succeed(A5(func,a,b,c,d,e));});});\n\t            });\n\t         });\n\t      });\n\t   });\n\t   var andMap = F2(function (taskFunc,taskValue) {\n\t      return A2(andThen,taskFunc,function (func) {    return A2(andThen,taskValue,function (value) {    return succeed(func(value));});});\n\t   });\n\t   var sequence = function (tasks) {\n\t      var _p0 = tasks;\n\t      if (_p0.ctor === \"[]\") {\n\t            return succeed(_U.list([]));\n\t         } else {\n\t            return A3(map2,F2(function (x,y) {    return A2($List._op[\"::\"],x,y);}),_p0._0,sequence(_p0._1));\n\t         }\n\t   };\n\t   var toMaybe = function (task) {    return A2(onError,A2(map,$Maybe.Just,task),function (_p1) {    return succeed($Maybe.Nothing);});};\n\t   var fromMaybe = F2(function ($default,maybe) {    var _p2 = maybe;if (_p2.ctor === \"Just\") {    return succeed(_p2._0);} else {    return fail($default);}});\n\t   var toResult = function (task) {    return A2(onError,A2(map,$Result.Ok,task),function (msg) {    return succeed($Result.Err(msg));});};\n\t   var fromResult = function (result) {    var _p3 = result;if (_p3.ctor === \"Ok\") {    return succeed(_p3._0);} else {    return fail(_p3._0);}};\n\t   var Task = {ctor: \"Task\"};\n\t   return _elm.Task.values = {_op: _op\n\t                             ,succeed: succeed\n\t                             ,fail: fail\n\t                             ,map: map\n\t                             ,map2: map2\n\t                             ,map3: map3\n\t                             ,map4: map4\n\t                             ,map5: map5\n\t                             ,andMap: andMap\n\t                             ,sequence: sequence\n\t                             ,andThen: andThen\n\t                             ,onError: onError\n\t                             ,mapError: mapError\n\t                             ,toMaybe: toMaybe\n\t                             ,fromMaybe: fromMaybe\n\t                             ,toResult: toResult\n\t                             ,fromResult: fromResult\n\t                             ,spawn: spawn\n\t                             ,sleep: sleep};\n\t};\n\tElm.Signal = Elm.Signal || {};\n\tElm.Signal.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Signal = _elm.Signal || {};\n\t   if (_elm.Signal.values) return _elm.Signal.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Signal = Elm.Native.Signal.make(_elm),\n\t   $Task = Elm.Task.make(_elm);\n\t   var _op = {};\n\t   var send = F2(function (_p0,value) {\n\t      var _p1 = _p0;\n\t      return A2($Task.onError,_p1._0(value),function (_p2) {    return $Task.succeed({ctor: \"_Tuple0\"});});\n\t   });\n\t   var Message = function (a) {    return {ctor: \"Message\",_0: a};};\n\t   var message = F2(function (_p3,value) {    var _p4 = _p3;return Message(_p4._0(value));});\n\t   var mailbox = $Native$Signal.mailbox;\n\t   var Address = function (a) {    return {ctor: \"Address\",_0: a};};\n\t   var forwardTo = F2(function (_p5,f) {    var _p6 = _p5;return Address(function (x) {    return _p6._0(f(x));});});\n\t   var Mailbox = F2(function (a,b) {    return {address: a,signal: b};});\n\t   var sampleOn = $Native$Signal.sampleOn;\n\t   var dropRepeats = $Native$Signal.dropRepeats;\n\t   var filterMap = $Native$Signal.filterMap;\n\t   var filter = F3(function (isOk,base,signal) {\n\t      return A3(filterMap,function (value) {    return isOk(value) ? $Maybe.Just(value) : $Maybe.Nothing;},base,signal);\n\t   });\n\t   var merge = F2(function (left,right) {    return A3($Native$Signal.genericMerge,$Basics.always,left,right);});\n\t   var mergeMany = function (signalList) {\n\t      var _p7 = $List.reverse(signalList);\n\t      if (_p7.ctor === \"[]\") {\n\t            return _U.crashCase(\"Signal\",{start: {line: 184,column: 3},end: {line: 189,column: 40}},_p7)(\"mergeMany was given an empty list!\");\n\t         } else {\n\t            return A3($List.foldl,merge,_p7._0,_p7._1);\n\t         }\n\t   };\n\t   var foldp = $Native$Signal.foldp;\n\t   var map5 = $Native$Signal.map5;\n\t   var map4 = $Native$Signal.map4;\n\t   var map3 = $Native$Signal.map3;\n\t   var map2 = $Native$Signal.map2;\n\t   var map = $Native$Signal.map;\n\t   var constant = $Native$Signal.constant;\n\t   var Signal = {ctor: \"Signal\"};\n\t   return _elm.Signal.values = {_op: _op\n\t                               ,merge: merge\n\t                               ,mergeMany: mergeMany\n\t                               ,map: map\n\t                               ,map2: map2\n\t                               ,map3: map3\n\t                               ,map4: map4\n\t                               ,map5: map5\n\t                               ,constant: constant\n\t                               ,dropRepeats: dropRepeats\n\t                               ,filter: filter\n\t                               ,filterMap: filterMap\n\t                               ,sampleOn: sampleOn\n\t                               ,foldp: foldp\n\t                               ,mailbox: mailbox\n\t                               ,send: send\n\t                               ,message: message\n\t                               ,forwardTo: forwardTo\n\t                               ,Mailbox: Mailbox};\n\t};\n\tElm.Signal = Elm.Signal || {};\n\tElm.Signal.Extra = Elm.Signal.Extra || {};\n\tElm.Signal.Extra.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Signal = _elm.Signal || {};\n\t   _elm.Signal.Extra = _elm.Signal.Extra || {};\n\t   if (_elm.Signal.Extra.values) return _elm.Signal.Extra.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm);\n\t   var _op = {};\n\t   var unsafeFromJust = function (maybe) {\n\t      var _p0 = maybe;\n\t      if (_p0.ctor === \"Just\") {\n\t            return _p0._0;\n\t         } else {\n\t            return _U.crashCase(\"Signal.Extra\",{start: {line: 510,column: 3},end: {line: 515,column: 59}},_p0)(\"This case should have been unreachable\");\n\t         }\n\t   };\n\t   var passiveMap2 = F2(function (func,a) {    return function (_p2) {    return A3($Signal.map2,func,a,A2($Signal.sampleOn,a,_p2));};});\n\t   var withPassive = passiveMap2(F2(function (x,y) {    return x(y);}));\n\t   var combine = A2($List.foldr,$Signal.map2(F2(function (x,y) {    return A2($List._op[\"::\"],x,y);})),$Signal.constant(_U.list([])));\n\t   var mergeMany = F2(function (original,others) {    return A3($List.foldl,$Signal.merge,original,others);});\n\t   var filter = function (initial) {    return A2($Signal.filterMap,$Basics.identity,initial);};\n\t   var keepIf = $Signal.filter;\n\t   var runBuffer$ = F3(function (l,n,input) {\n\t      var f = F2(function (inp,prev) {\n\t         var l = $List.length(prev);\n\t         return _U.cmp(l,n) < 0 ? A2($Basics._op[\"++\"],prev,_U.list([inp])) : A2($Basics._op[\"++\"],A2($List.drop,l - n + 1,prev),_U.list([inp]));\n\t      });\n\t      return A3($Signal.foldp,f,l,input);\n\t   });\n\t   var runBuffer = runBuffer$(_U.list([]));\n\t   var initSignal = function (s) {    return A2($Signal.sampleOn,$Signal.constant({ctor: \"_Tuple0\"}),s);};\n\t   var zip4 = $Signal.map4(F4(function (v0,v1,v2,v3) {    return {ctor: \"_Tuple4\",_0: v0,_1: v1,_2: v2,_3: v3};}));\n\t   var zip3 = $Signal.map3(F3(function (v0,v1,v2) {    return {ctor: \"_Tuple3\",_0: v0,_1: v1,_2: v2};}));\n\t   var zip = $Signal.map2(F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}));\n\t   var keepWhen = F3(function (boolSig,a,aSig) {\n\t      return A2($Signal.map,$Basics.snd,A3(keepIf,$Basics.fst,{ctor: \"_Tuple2\",_0: true,_1: a},A2($Signal.sampleOn,aSig,A2(zip,boolSig,aSig))));\n\t   });\n\t   var sampleWhen = F3(function (bs,def,sig) {\n\t      return A2($Signal.map,$Basics.snd,A3(keepIf,$Basics.fst,{ctor: \"_Tuple2\",_0: true,_1: def},A2(zip,bs,sig)));\n\t   });\n\t   var andMap = $Signal.map2(F2(function (x,y) {    return x(y);}));\n\t   _op[\"~\"] = andMap;\n\t   var applyMany = F2(function (fs,l) {    return A2(_op[\"~\"],fs,combine(l));});\n\t   _op[\"~>\"] = $Basics.flip($Signal.map);\n\t   var foldpWith = F4(function (unpack,step,init,input) {\n\t      var step$ = F2(function (a,_p3) {    var _p4 = _p3;return unpack(A2(step,a,_p4._1));});\n\t      return A2(_op[\"~>\"],A3($Signal.foldp,step$,init,input),$Basics.fst);\n\t   });\n\t   _op[\"<~\"] = $Signal.map;\n\t   var unzip = function (pairS) {    return {ctor: \"_Tuple2\",_0: A2(_op[\"<~\"],$Basics.fst,pairS),_1: A2(_op[\"<~\"],$Basics.snd,pairS)};};\n\t   var unzip3 = function (pairS) {\n\t      return {ctor: \"_Tuple3\"\n\t             ,_0: A2(_op[\"<~\"],function (_p5) {    var _p6 = _p5;return _p6._0;},pairS)\n\t             ,_1: A2(_op[\"<~\"],function (_p7) {    var _p8 = _p7;return _p8._1;},pairS)\n\t             ,_2: A2(_op[\"<~\"],function (_p9) {    var _p10 = _p9;return _p10._2;},pairS)};\n\t   };\n\t   var unzip4 = function (pairS) {\n\t      return {ctor: \"_Tuple4\"\n\t             ,_0: A2(_op[\"<~\"],function (_p11) {    var _p12 = _p11;return _p12._0;},pairS)\n\t             ,_1: A2(_op[\"<~\"],function (_p13) {    var _p14 = _p13;return _p14._1;},pairS)\n\t             ,_2: A2(_op[\"<~\"],function (_p15) {    var _p16 = _p15;return _p16._2;},pairS)\n\t             ,_3: A2(_op[\"<~\"],function (_p17) {    var _p18 = _p17;return _p18._3;},pairS)};\n\t   };\n\t   var foldp$ = F3(function (fun,initFun,input) {\n\t      var fun$ = F2(function (_p19,mb) {    var _p20 = _p19;return $Maybe.Just(A2(fun,_p20._0,A2($Maybe.withDefault,_p20._1,mb)));});\n\t      var initial = A2(_op[\"~>\"],initSignal(input),initFun);\n\t      var rest = A3($Signal.foldp,fun$,$Maybe.Nothing,A2(zip,input,initial));\n\t      return A2(_op[\"<~\"],unsafeFromJust,A2($Signal.merge,A2(_op[\"<~\"],$Maybe.Just,initial),rest));\n\t   });\n\t   var deltas = function (signal) {\n\t      var initial = function (value) {    return {ctor: \"_Tuple2\",_0: value,_1: value};};\n\t      var step = F2(function (value,delta) {    return {ctor: \"_Tuple2\",_0: $Basics.snd(delta),_1: value};});\n\t      return A3(foldp$,step,initial,signal);\n\t   };\n\t   var foldps = F3(function (f,bs,aS) {\n\t      return A2(_op[\"<~\"],$Basics.fst,A3($Signal.foldp,F2(function (a,_p21) {    var _p22 = _p21;return A2(f,a,_p22._1);}),bs,aS));\n\t   });\n\t   var delayRound = F2(function (b,bS) {\n\t      return A3(foldps,F2(function ($new,old) {    return {ctor: \"_Tuple2\",_0: old,_1: $new};}),{ctor: \"_Tuple2\",_0: b,_1: b},bS);\n\t   });\n\t   var filterFold = F2(function (f,initial) {\n\t      var f$ = F2(function (a,s) {    var res = A2(f,a,s);return {ctor: \"_Tuple2\",_0: res,_1: A2($Maybe.withDefault,s,res)};});\n\t      return function (_p23) {\n\t         return A2(filter,initial,A3(foldps,f$,{ctor: \"_Tuple2\",_0: $Maybe.Just(initial),_1: initial},_p23));\n\t      };\n\t   });\n\t   var foldps$ = F3(function (f,iF,aS) {\n\t      return A2(_op[\"<~\"],$Basics.fst,A3(foldp$,F2(function (a,_p24) {    var _p25 = _p24;return A2(f,a,_p25._1);}),iF,aS));\n\t   });\n\t   var switchHelper = F4(function (filter,b,l,r) {\n\t      var lAndR = A2($Signal.merge,\n\t      A3(filter,b,$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,l)),\n\t      A3(filter,A2(_op[\"<~\"],$Basics.not,b),$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,r)));\n\t      var base = A2(_op[\"~\"],\n\t      A2(_op[\"~\"],A2(_op[\"<~\"],F3(function (bi,li,ri) {    return $Maybe.Just(bi ? li : ri);}),initSignal(b)),initSignal(l)),\n\t      initSignal(r));\n\t      return A2(_op[\"<~\"],unsafeFromJust,A2($Signal.merge,base,lAndR));\n\t   });\n\t   var switchWhen = F3(function (b,l,r) {    return A4(switchHelper,keepWhen,b,l,r);});\n\t   var switchSample = F3(function (b,l,r) {    return A4(switchHelper,sampleWhen,b,l,r);});\n\t   var keepThen = F3(function (choice,base,signal) {    return A3(switchSample,choice,signal,$Signal.constant(base));});\n\t   var keepWhenI = F2(function (fs,s) {\n\t      return A2(_op[\"~>\"],A3(keepWhen,A2($Signal.merge,$Signal.constant(true),fs),$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,s)),unsafeFromJust);\n\t   });\n\t   var fairMerge = F3(function (resolve,left,right) {\n\t      var merged = A2($Signal.merge,left,right);\n\t      var boolRight = A2(_op[\"<~\"],$Basics.always(false),right);\n\t      var boolLeft = A2(_op[\"<~\"],$Basics.always(true),left);\n\t      var bothUpdated = A2(_op[\"~\"],\n\t      A2(_op[\"<~\"],F2(function (x,y) {    return !_U.eq(x,y);}),A2($Signal.merge,boolLeft,boolRight)),\n\t      A2($Signal.merge,boolRight,boolLeft));\n\t      var keep = keepWhenI(bothUpdated);\n\t      var resolved = A2(_op[\"~\"],A2(_op[\"<~\"],resolve,keep(left)),keep(right));\n\t      return A2($Signal.merge,resolved,merged);\n\t   });\n\t   var mapMany = F2(function (f,l) {    return A2(_op[\"<~\"],f,combine(l));});\n\t   return _elm.Signal.Extra.values = {_op: _op\n\t                                     ,andMap: andMap\n\t                                     ,zip: zip\n\t                                     ,zip3: zip3\n\t                                     ,zip4: zip4\n\t                                     ,unzip: unzip\n\t                                     ,unzip3: unzip3\n\t                                     ,unzip4: unzip4\n\t                                     ,foldp$: foldp$\n\t                                     ,foldps: foldps\n\t                                     ,foldps$: foldps$\n\t                                     ,runBuffer: runBuffer\n\t                                     ,runBuffer$: runBuffer$\n\t                                     ,deltas: deltas\n\t                                     ,delayRound: delayRound\n\t                                     ,keepIf: keepIf\n\t                                     ,keepWhen: keepWhen\n\t                                     ,sampleWhen: sampleWhen\n\t                                     ,switchWhen: switchWhen\n\t                                     ,keepWhenI: keepWhenI\n\t                                     ,switchSample: switchSample\n\t                                     ,keepThen: keepThen\n\t                                     ,filter: filter\n\t                                     ,filterFold: filterFold\n\t                                     ,fairMerge: fairMerge\n\t                                     ,mergeMany: mergeMany\n\t                                     ,combine: combine\n\t                                     ,mapMany: mapMany\n\t                                     ,applyMany: applyMany\n\t                                     ,passiveMap2: passiveMap2\n\t                                     ,withPassive: withPassive};\n\t};\n\tElm.Native.Time = {};\n\t\n\tElm.Native.Time.make = function(localRuntime)\n\t{\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Time = localRuntime.Native.Time || {};\n\t\tif (localRuntime.Native.Time.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Time.values;\n\t\t}\n\t\n\t\tvar NS = Elm.Native.Signal.make(localRuntime);\n\t\tvar Maybe = Elm.Maybe.make(localRuntime);\n\t\n\t\n\t\t// FRAMES PER SECOND\n\t\n\t\tfunction fpsWhen(desiredFPS, isOn)\n\t\t{\n\t\t\tvar msPerFrame = 1000 / desiredFPS;\n\t\t\tvar ticker = NS.input('fps-' + desiredFPS, null);\n\t\n\t\t\tfunction notifyTicker()\n\t\t\t{\n\t\t\t\tlocalRuntime.notify(ticker.id, null);\n\t\t\t}\n\t\n\t\t\tfunction firstArg(x, y)\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\n\t\t\t// input fires either when isOn changes, or when ticker fires.\n\t\t\t// Its value is a tuple with the current timestamp, and the state of isOn\n\t\t\tvar input = NS.timestamp(A3(NS.map2, F2(firstArg), NS.dropRepeats(isOn), ticker));\n\t\n\t\t\tvar initialState = {\n\t\t\t\tisOn: false,\n\t\t\t\ttime: localRuntime.timer.programStart,\n\t\t\t\tdelta: 0\n\t\t\t};\n\t\n\t\t\tvar timeoutId;\n\t\n\t\t\tfunction update(input, state)\n\t\t\t{\n\t\t\t\tvar currentTime = input._0;\n\t\t\t\tvar isOn = input._1;\n\t\t\t\tvar wasOn = state.isOn;\n\t\t\t\tvar previousTime = state.time;\n\t\n\t\t\t\tif (isOn)\n\t\t\t\t{\n\t\t\t\t\ttimeoutId = localRuntime.setTimeout(notifyTicker, msPerFrame);\n\t\t\t\t}\n\t\t\t\telse if (wasOn)\n\t\t\t\t{\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tisOn: isOn,\n\t\t\t\t\ttime: currentTime,\n\t\t\t\t\tdelta: (isOn && !wasOn) ? 0 : currentTime - previousTime\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn A2(\n\t\t\t\tNS.map,\n\t\t\t\tfunction(state) { return state.delta; },\n\t\t\t\tA3(NS.foldp, F2(update), update(input.value, initialState), input)\n\t\t\t);\n\t\t}\n\t\n\t\n\t\t// EVERY\n\t\n\t\tfunction every(t)\n\t\t{\n\t\t\tvar ticker = NS.input('every-' + t, null);\n\t\t\tfunction tellTime()\n\t\t\t{\n\t\t\t\tlocalRuntime.notify(ticker.id, null);\n\t\t\t}\n\t\t\tvar clock = A2(NS.map, fst, NS.timestamp(ticker));\n\t\t\tsetInterval(tellTime, t);\n\t\t\treturn clock;\n\t\t}\n\t\n\t\n\t\tfunction fst(pair)\n\t\t{\n\t\t\treturn pair._0;\n\t\t}\n\t\n\t\n\t\tfunction read(s)\n\t\t{\n\t\t\tvar t = Date.parse(s);\n\t\t\treturn isNaN(t) ? Maybe.Nothing : Maybe.Just(t);\n\t\t}\n\t\n\t\treturn localRuntime.Native.Time.values = {\n\t\t\tfpsWhen: F2(fpsWhen),\n\t\t\tevery: every,\n\t\t\ttoDate: function(t) { return new Date(t); },\n\t\t\tread: read\n\t\t};\n\t};\n\t\n\tElm.Time = Elm.Time || {};\n\tElm.Time.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Time = _elm.Time || {};\n\t   if (_elm.Time.values) return _elm.Time.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Native$Signal = Elm.Native.Signal.make(_elm),\n\t   $Native$Time = Elm.Native.Time.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm);\n\t   var _op = {};\n\t   var delay = $Native$Signal.delay;\n\t   var since = F2(function (time,signal) {\n\t      var stop = A2($Signal.map,$Basics.always(-1),A2(delay,time,signal));\n\t      var start = A2($Signal.map,$Basics.always(1),signal);\n\t      var delaydiff = A3($Signal.foldp,F2(function (x,y) {    return x + y;}),0,A2($Signal.merge,start,stop));\n\t      return A2($Signal.map,F2(function (x,y) {    return !_U.eq(x,y);})(0),delaydiff);\n\t   });\n\t   var timestamp = $Native$Signal.timestamp;\n\t   var every = $Native$Time.every;\n\t   var fpsWhen = $Native$Time.fpsWhen;\n\t   var fps = function (targetFrames) {    return A2(fpsWhen,targetFrames,$Signal.constant(true));};\n\t   var inMilliseconds = function (t) {    return t;};\n\t   var millisecond = 1;\n\t   var second = 1000 * millisecond;\n\t   var minute = 60 * second;\n\t   var hour = 60 * minute;\n\t   var inHours = function (t) {    return t / hour;};\n\t   var inMinutes = function (t) {    return t / minute;};\n\t   var inSeconds = function (t) {    return t / second;};\n\t   return _elm.Time.values = {_op: _op\n\t                             ,millisecond: millisecond\n\t                             ,second: second\n\t                             ,minute: minute\n\t                             ,hour: hour\n\t                             ,inMilliseconds: inMilliseconds\n\t                             ,inSeconds: inSeconds\n\t                             ,inMinutes: inMinutes\n\t                             ,inHours: inHours\n\t                             ,fps: fps\n\t                             ,fpsWhen: fpsWhen\n\t                             ,every: every\n\t                             ,timestamp: timestamp\n\t                             ,delay: delay\n\t                             ,since: since};\n\t};\n\tElm.Native.Array = {};\n\tElm.Native.Array.make = function(localRuntime) {\n\t\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Array = localRuntime.Native.Array || {};\n\t\tif (localRuntime.Native.Array.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Array.values;\n\t\t}\n\t\tif ('values' in Elm.Native.Array)\n\t\t{\n\t\t\treturn localRuntime.Native.Array.values = Elm.Native.Array.values;\n\t\t}\n\t\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\n\t\t// A RRB-Tree has two distinct data types.\n\t\t// Leaf -> \"height\"  is always 0\n\t\t//         \"table\"   is an array of elements\n\t\t// Node -> \"height\"  is always greater than 0\n\t\t//         \"table\"   is an array of child nodes\n\t\t//         \"lengths\" is an array of accumulated lengths of the child nodes\n\t\n\t\t// M is the maximal table size. 32 seems fast. E is the allowed increase\n\t\t// of search steps when concatting to find an index. Lower values will\n\t\t// decrease balancing, but will increase search steps.\n\t\tvar M = 32;\n\t\tvar E = 2;\n\t\n\t\t// An empty array.\n\t\tvar empty = {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: []\n\t\t};\n\t\n\t\n\t\tfunction get(i, array)\n\t\t{\n\t\t\tif (i < 0 || i >= length(array))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\n\t\t\t\t\t'your array first or use getMaybe or getWithDefault.');\n\t\t\t}\n\t\t\treturn unsafeGet(i, array);\n\t\t}\n\t\n\t\n\t\tfunction unsafeGet(i, array)\n\t\t{\n\t\t\tfor (var x = array.height; x > 0; x--)\n\t\t\t{\n\t\t\t\tvar slot = i >> (x * 5);\n\t\t\t\twhile (array.lengths[slot] <= i)\n\t\t\t\t{\n\t\t\t\t\tslot++;\n\t\t\t\t}\n\t\t\t\tif (slot > 0)\n\t\t\t\t{\n\t\t\t\t\ti -= array.lengths[slot - 1];\n\t\t\t\t}\n\t\t\t\tarray = array.table[slot];\n\t\t\t}\n\t\t\treturn array.table[i];\n\t\t}\n\t\n\t\n\t\t// Sets the value at the index i. Only the nodes leading to i will get\n\t\t// copied and updated.\n\t\tfunction set(i, item, array)\n\t\t{\n\t\t\tif (i < 0 || length(array) <= i)\n\t\t\t{\n\t\t\t\treturn array;\n\t\t\t}\n\t\t\treturn unsafeSet(i, item, array);\n\t\t}\n\t\n\t\n\t\tfunction unsafeSet(i, item, array)\n\t\t{\n\t\t\tarray = nodeCopy(array);\n\t\n\t\t\tif (array.height === 0)\n\t\t\t{\n\t\t\t\tarray.table[i] = item;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar slot = getSlot(i, array);\n\t\t\t\tif (slot > 0)\n\t\t\t\t{\n\t\t\t\t\ti -= array.lengths[slot - 1];\n\t\t\t\t}\n\t\t\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\t\n\t\n\t\tfunction initialize(len, f)\n\t\t{\n\t\t\tif (len <= 0)\n\t\t\t{\n\t\t\t\treturn empty;\n\t\t\t}\n\t\t\tvar h = Math.floor( Math.log(len) / Math.log(M) );\n\t\t\treturn initialize_(f, h, 0, len);\n\t\t}\n\t\n\t\tfunction initialize_(f, h, from, to)\n\t\t{\n\t\t\tif (h === 0)\n\t\t\t{\n\t\t\t\tvar table = new Array((to - from) % (M + 1));\n\t\t\t\tfor (var i = 0; i < table.length; i++)\n\t\t\t\t{\n\t\t\t\t  table[i] = f(from + i);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: table\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tvar step = Math.pow(M, h);\n\t\t\tvar table = new Array(Math.ceil((to - from) / step));\n\t\t\tvar lengths = new Array(table.length);\n\t\t\tfor (var i = 0; i < table.length; i++)\n\t\t\t{\n\t\t\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\t\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h,\n\t\t\t\ttable: table,\n\t\t\t\tlengths: lengths\n\t\t\t};\n\t\t}\n\t\n\t\tfunction fromList(list)\n\t\t{\n\t\t\tif (list === List.Nil)\n\t\t\t{\n\t\t\t\treturn empty;\n\t\t\t}\n\t\n\t\t\t// Allocate M sized blocks (table) and write list elements to it.\n\t\t\tvar table = new Array(M);\n\t\t\tvar nodes = [];\n\t\t\tvar i = 0;\n\t\n\t\t\twhile (list.ctor !== '[]')\n\t\t\t{\n\t\t\t\ttable[i] = list._0;\n\t\t\t\tlist = list._1;\n\t\t\t\ti++;\n\t\n\t\t\t\t// table is full, so we can push a leaf containing it into the\n\t\t\t\t// next node.\n\t\t\t\tif (i === M)\n\t\t\t\t{\n\t\t\t\t\tvar leaf = {\n\t\t\t\t\t\tctor: '_Array',\n\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\ttable: table\n\t\t\t\t\t};\n\t\t\t\t\tfromListPush(leaf, nodes);\n\t\t\t\t\ttable = new Array(M);\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Maybe there is something left on the table.\n\t\t\tif (i > 0)\n\t\t\t{\n\t\t\t\tvar leaf = {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: table.splice(0, i)\n\t\t\t\t};\n\t\t\t\tfromListPush(leaf, nodes);\n\t\t\t}\n\t\n\t\t\t// Go through all of the nodes and eventually push them into higher nodes.\n\t\t\tfor (var h = 0; h < nodes.length - 1; h++)\n\t\t\t{\n\t\t\t\tif (nodes[h].table.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfromListPush(nodes[h], nodes);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar head = nodes[nodes.length - 1];\n\t\t\tif (head.height > 0 && head.table.length === 1)\n\t\t\t{\n\t\t\t\treturn head.table[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn head;\n\t\t\t}\n\t\t}\n\t\n\t\t// Push a node into a higher node as a child.\n\t\tfunction fromListPush(toPush, nodes)\n\t\t{\n\t\t\tvar h = toPush.height;\n\t\n\t\t\t// Maybe the node on this height does not exist.\n\t\t\tif (nodes.length === h)\n\t\t\t{\n\t\t\t\tvar node = {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: h + 1,\n\t\t\t\t\ttable: [],\n\t\t\t\t\tlengths: []\n\t\t\t\t};\n\t\t\t\tnodes.push(node);\n\t\t\t}\n\t\n\t\t\tnodes[h].table.push(toPush);\n\t\t\tvar len = length(toPush);\n\t\t\tif (nodes[h].lengths.length > 0)\n\t\t\t{\n\t\t\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\n\t\t\t}\n\t\t\tnodes[h].lengths.push(len);\n\t\n\t\t\tif (nodes[h].table.length === M)\n\t\t\t{\n\t\t\t\tfromListPush(nodes[h], nodes);\n\t\t\t\tnodes[h] = {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: h + 1,\n\t\t\t\t\ttable: [],\n\t\t\t\t\tlengths: []\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\n\t\t// Pushes an item via push_ to the bottom right of a tree.\n\t\tfunction push(item, a)\n\t\t{\n\t\t\tvar pushed = push_(item, a);\n\t\t\tif (pushed !== null)\n\t\t\t{\n\t\t\t\treturn pushed;\n\t\t\t}\n\t\n\t\t\tvar newTree = create(item, a.height);\n\t\t\treturn siblise(a, newTree);\n\t\t}\n\t\n\t\t// Recursively tries to push an item to the bottom-right most\n\t\t// tree possible. If there is no space left for the item,\n\t\t// null will be returned.\n\t\tfunction push_(item, a)\n\t\t{\n\t\t\t// Handle resursion stop at leaf level.\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tif (a.table.length < M)\n\t\t\t\t{\n\t\t\t\t\tvar newA = {\n\t\t\t\t\t\tctor: '_Array',\n\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\ttable: a.table.slice()\n\t\t\t\t\t};\n\t\t\t\t\tnewA.table.push(item);\n\t\t\t\t\treturn newA;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t  return null;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Recursively push\n\t\t\tvar pushed = push_(item, botRight(a));\n\t\n\t\t\t// There was space in the bottom right tree, so the slot will\n\t\t\t// be updated.\n\t\t\tif (pushed !== null)\n\t\t\t{\n\t\t\t\tvar newA = nodeCopy(a);\n\t\t\t\tnewA.table[newA.table.length - 1] = pushed;\n\t\t\t\tnewA.lengths[newA.lengths.length - 1]++;\n\t\t\t\treturn newA;\n\t\t\t}\n\t\n\t\t\t// When there was no space left, check if there is space left\n\t\t\t// for a new slot with a tree which contains only the item\n\t\t\t// at the bottom.\n\t\t\tif (a.table.length < M)\n\t\t\t{\n\t\t\t\tvar newSlot = create(item, a.height - 1);\n\t\t\t\tvar newA = nodeCopy(a);\n\t\t\t\tnewA.table.push(newSlot);\n\t\t\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n\t\t\t\treturn newA;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\n\t\t// Converts an array into a list of elements.\n\t\tfunction toList(a)\n\t\t{\n\t\t\treturn toList_(List.Nil, a);\n\t\t}\n\t\n\t\tfunction toList_(list, a)\n\t\t{\n\t\t\tfor (var i = a.table.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tlist =\n\t\t\t\t\ta.height === 0\n\t\t\t\t\t\t? List.Cons(a.table[i], list)\n\t\t\t\t\t\t: toList_(list, a.table[i]);\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t\n\t\t// Maps a function over the elements of an array.\n\t\tfunction map(f, a)\n\t\t{\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height,\n\t\t\t\ttable: new Array(a.table.length)\n\t\t\t};\n\t\t\tif (a.height > 0)\n\t\t\t{\n\t\t\t\tnewA.lengths = a.lengths;\n\t\t\t}\n\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t{\n\t\t\t\tnewA.table[i] =\n\t\t\t\t\ta.height === 0\n\t\t\t\t\t\t? f(a.table[i])\n\t\t\t\t\t\t: map(f, a.table[i]);\n\t\t\t}\n\t\t\treturn newA;\n\t\t}\n\t\n\t\t// Maps a function over the elements with their index as first argument.\n\t\tfunction indexedMap(f, a)\n\t\t{\n\t\t\treturn indexedMap_(f, a, 0);\n\t\t}\n\t\n\t\tfunction indexedMap_(f, a, from)\n\t\t{\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height,\n\t\t\t\ttable: new Array(a.table.length)\n\t\t\t};\n\t\t\tif (a.height > 0)\n\t\t\t{\n\t\t\t\tnewA.lengths = a.lengths;\n\t\t\t}\n\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t{\n\t\t\t\tnewA.table[i] =\n\t\t\t\t\ta.height === 0\n\t\t\t\t\t\t? A2(f, from + i, a.table[i])\n\t\t\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\n\t\t\t}\n\t\t\treturn newA;\n\t\t}\n\t\n\t\tfunction foldl(f, b, a)\n\t\t{\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t\t{\n\t\t\t\t\tb = A2(f, a.table[i], b);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t\t{\n\t\t\t\t\tb = foldl(f, b, a.table[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t\n\t\tfunction foldr(f, b, a)\n\t\t{\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tfor (var i = a.table.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tb = A2(f, a.table[i], b);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = a.table.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tb = foldr(f, b, a.table[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t\n\t\t// TODO: currently, it slices the right, then the left. This can be\n\t\t// optimized.\n\t\tfunction slice(from, to, a)\n\t\t{\n\t\t\tif (from < 0)\n\t\t\t{\n\t\t\t\tfrom += length(a);\n\t\t\t}\n\t\t\tif (to < 0)\n\t\t\t{\n\t\t\t\tto += length(a);\n\t\t\t}\n\t\t\treturn sliceLeft(from, sliceRight(to, a));\n\t\t}\n\t\n\t\tfunction sliceRight(to, a)\n\t\t{\n\t\t\tif (to === length(a))\n\t\t\t{\n\t\t\t\treturn a;\n\t\t\t}\n\t\n\t\t\t// Handle leaf level.\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tvar newA = { ctor:'_Array', height:0 };\n\t\t\t\tnewA.table = a.table.slice(0, to);\n\t\t\t\treturn newA;\n\t\t\t}\n\t\n\t\t\t// Slice the right recursively.\n\t\t\tvar right = getSlot(to, a);\n\t\t\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\t\n\t\t\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\t\t\tif (right === 0)\n\t\t\t{\n\t\t\t\treturn sliced;\n\t\t\t}\n\t\n\t\t\t// Create new node.\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height,\n\t\t\t\ttable: a.table.slice(0, right),\n\t\t\t\tlengths: a.lengths.slice(0, right)\n\t\t\t};\n\t\t\tif (sliced.table.length > 0)\n\t\t\t{\n\t\t\t\tnewA.table[right] = sliced;\n\t\t\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n\t\t\t}\n\t\t\treturn newA;\n\t\t}\n\t\n\t\tfunction sliceLeft(from, a)\n\t\t{\n\t\t\tif (from === 0)\n\t\t\t{\n\t\t\t\treturn a;\n\t\t\t}\n\t\n\t\t\t// Handle leaf level.\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tvar newA = { ctor:'_Array', height:0 };\n\t\t\t\tnewA.table = a.table.slice(from, a.table.length + 1);\n\t\t\t\treturn newA;\n\t\t\t}\n\t\n\t\t\t// Slice the left recursively.\n\t\t\tvar left = getSlot(from, a);\n\t\t\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\t\n\t\t\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\t\t\tif (left === a.table.length - 1)\n\t\t\t{\n\t\t\t\treturn sliced;\n\t\t\t}\n\t\n\t\t\t// Create new node.\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height,\n\t\t\t\ttable: a.table.slice(left, a.table.length + 1),\n\t\t\t\tlengths: new Array(a.table.length - left)\n\t\t\t};\n\t\t\tnewA.table[0] = sliced;\n\t\t\tvar len = 0;\n\t\t\tfor (var i = 0; i < newA.table.length; i++)\n\t\t\t{\n\t\t\t\tlen += length(newA.table[i]);\n\t\t\t\tnewA.lengths[i] = len;\n\t\t\t}\n\t\n\t\t\treturn newA;\n\t\t}\n\t\n\t\t// Appends two trees.\n\t\tfunction append(a,b)\n\t\t{\n\t\t\tif (a.table.length === 0)\n\t\t\t{\n\t\t\t\treturn b;\n\t\t\t}\n\t\t\tif (b.table.length === 0)\n\t\t\t{\n\t\t\t\treturn a;\n\t\t\t}\n\t\n\t\t\tvar c = append_(a, b);\n\t\n\t\t\t// Check if both nodes can be crunshed together.\n\t\t\tif (c[0].table.length + c[1].table.length <= M)\n\t\t\t{\n\t\t\t\tif (c[0].table.length === 0)\n\t\t\t\t{\n\t\t\t\t\treturn c[1];\n\t\t\t\t}\n\t\t\t\tif (c[1].table.length === 0)\n\t\t\t\t{\n\t\t\t\t\treturn c[0];\n\t\t\t\t}\n\t\n\t\t\t\t// Adjust .table and .lengths\n\t\t\t\tc[0].table = c[0].table.concat(c[1].table);\n\t\t\t\tif (c[0].height > 0)\n\t\t\t\t{\n\t\t\t\t\tvar len = length(c[0]);\n\t\t\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tc[1].lengths[i] += len;\n\t\t\t\t\t}\n\t\t\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\n\t\t\t\t}\n\t\n\t\t\t\treturn c[0];\n\t\t\t}\n\t\n\t\t\tif (c[0].height > 0)\n\t\t\t{\n\t\t\t\tvar toRemove = calcToRemove(a, b);\n\t\t\t\tif (toRemove > E)\n\t\t\t\t{\n\t\t\t\t\tc = shuffle(c[0], c[1], toRemove);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn siblise(c[0], c[1]);\n\t\t}\n\t\n\t\t// Returns an array of two nodes; right and left. One node _may_ be empty.\n\t\tfunction append_(a, b)\n\t\t{\n\t\t\tif (a.height === 0 && b.height === 0)\n\t\t\t{\n\t\t\t\treturn [a, b];\n\t\t\t}\n\t\n\t\t\tif (a.height !== 1 || b.height !== 1)\n\t\t\t{\n\t\t\t\tif (a.height === b.height)\n\t\t\t\t{\n\t\t\t\t\ta = nodeCopy(a);\n\t\t\t\t\tb = nodeCopy(b);\n\t\t\t\t\tvar appended = append_(botRight(a), botLeft(b));\n\t\n\t\t\t\t\tinsertRight(a, appended[1]);\n\t\t\t\t\tinsertLeft(b, appended[0]);\n\t\t\t\t}\n\t\t\t\telse if (a.height > b.height)\n\t\t\t\t{\n\t\t\t\t\ta = nodeCopy(a);\n\t\t\t\t\tvar appended = append_(botRight(a), b);\n\t\n\t\t\t\t\tinsertRight(a, appended[0]);\n\t\t\t\t\tb = parentise(appended[1], appended[1].height + 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tb = nodeCopy(b);\n\t\t\t\t\tvar appended = append_(a, botLeft(b));\n\t\n\t\t\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\n\t\t\t\t\tvar right = left === 0 ? 1 : 0;\n\t\t\t\t\tinsertLeft(b, appended[left]);\n\t\t\t\t\ta = parentise(appended[right], appended[right].height + 1);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Check if balancing is needed and return based on that.\n\t\t\tif (a.table.length === 0 || b.table.length === 0)\n\t\t\t{\n\t\t\t\treturn [a, b];\n\t\t\t}\n\t\n\t\t\tvar toRemove = calcToRemove(a, b);\n\t\t\tif (toRemove <= E)\n\t\t\t{\n\t\t\t\treturn [a, b];\n\t\t\t}\n\t\t\treturn shuffle(a, b, toRemove);\n\t\t}\n\t\n\t\t// Helperfunctions for append_. Replaces a child node at the side of the parent.\n\t\tfunction insertRight(parent, node)\n\t\t{\n\t\t\tvar index = parent.table.length - 1;\n\t\t\tparent.table[index] = node;\n\t\t\tparent.lengths[index] = length(node);\n\t\t\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n\t\t}\n\t\n\t\tfunction insertLeft(parent, node)\n\t\t{\n\t\t\tif (node.table.length > 0)\n\t\t\t{\n\t\t\t\tparent.table[0] = node;\n\t\t\t\tparent.lengths[0] = length(node);\n\t\n\t\t\t\tvar len = length(parent.table[0]);\n\t\t\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlen += length(parent.table[i]);\n\t\t\t\t\tparent.lengths[i] = len;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparent.table.shift();\n\t\t\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n\t\t\t\t}\n\t\t\t\tparent.lengths.shift();\n\t\t\t}\n\t\t}\n\t\n\t\t// Returns the extra search steps for E. Refer to the paper.\n\t\tfunction calcToRemove(a, b)\n\t\t{\n\t\t\tvar subLengths = 0;\n\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t{\n\t\t\t\tsubLengths += a.table[i].table.length;\n\t\t\t}\n\t\t\tfor (var i = 0; i < b.table.length; i++)\n\t\t\t{\n\t\t\t\tsubLengths += b.table[i].table.length;\n\t\t\t}\n\t\n\t\t\tvar toRemove = a.table.length + b.table.length;\n\t\t\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\n\t\t}\n\t\n\t\t// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n\t\tfunction get2(a, b, index)\n\t\t{\n\t\t\treturn index < a.length\n\t\t\t\t? a[index]\n\t\t\t\t: b[index - a.length];\n\t\t}\n\t\n\t\tfunction set2(a, b, index, value)\n\t\t{\n\t\t\tif (index < a.length)\n\t\t\t{\n\t\t\t\ta[index] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb[index - a.length] = value;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction saveSlot(a, b, index, slot)\n\t\t{\n\t\t\tset2(a.table, b.table, index, slot);\n\t\n\t\t\tvar l = (index === 0 || index === a.lengths.length)\n\t\t\t\t? 0\n\t\t\t\t: get2(a.lengths, a.lengths, index - 1);\n\t\n\t\t\tset2(a.lengths, b.lengths, index, l + length(slot));\n\t\t}\n\t\n\t\t// Creates a node or leaf with a given length at their arrays for perfomance.\n\t\t// Is only used by shuffle.\n\t\tfunction createNode(h, length)\n\t\t{\n\t\t\tif (length < 0)\n\t\t\t{\n\t\t\t\tlength = 0;\n\t\t\t}\n\t\t\tvar a = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h,\n\t\t\t\ttable: new Array(length)\n\t\t\t};\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\ta.lengths = new Array(length);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\n\t\t// Returns an array of two balanced nodes.\n\t\tfunction shuffle(a, b, toRemove)\n\t\t{\n\t\t\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n\t\t\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\t\n\t\t\t// Skip the slots with size M. More precise: copy the slot references\n\t\t\t// to the new node\n\t\t\tvar read = 0;\n\t\t\twhile (get2(a.table, b.table, read).table.length % M === 0)\n\t\t\t{\n\t\t\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\n\t\t\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n\t\t\t\tread++;\n\t\t\t}\n\t\n\t\t\t// Pulling items from left to right, caching in a slot before writing\n\t\t\t// it into the new nodes.\n\t\t\tvar write = read;\n\t\t\tvar slot = new createNode(a.height - 1, 0);\n\t\t\tvar from = 0;\n\t\n\t\t\t// If the current slot is still containing data, then there will be at\n\t\t\t// least one more write, so we do not break this loop yet.\n\t\t\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\n\t\t\t{\n\t\t\t\t// Find out the max possible items for copying.\n\t\t\t\tvar source = get2(a.table, b.table, read);\n\t\t\t\tvar to = Math.min(M - slot.table.length, source.table.length);\n\t\n\t\t\t\t// Copy and adjust size table.\n\t\t\t\tslot.table = slot.table.concat(source.table.slice(from, to));\n\t\t\t\tif (slot.height > 0)\n\t\t\t\t{\n\t\t\t\t\tvar len = slot.lengths.length;\n\t\t\t\t\tfor (var i = len; i < len + to - from; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tslot.lengths[i] = length(slot.table[i]);\n\t\t\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfrom += to;\n\t\n\t\t\t\t// Only proceed to next slots[i] if the current one was\n\t\t\t\t// fully copied.\n\t\t\t\tif (source.table.length <= to)\n\t\t\t\t{\n\t\t\t\t\tread++; from = 0;\n\t\t\t\t}\n\t\n\t\t\t\t// Only create a new slot if the current one is filled up.\n\t\t\t\tif (slot.table.length === M)\n\t\t\t\t{\n\t\t\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\t\t\tslot = createNode(a.height - 1, 0);\n\t\t\t\t\twrite++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cleanup after the loop. Copy the last slot into the new nodes.\n\t\t\tif (slot.table.length > 0)\n\t\t\t{\n\t\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\t\twrite++;\n\t\t\t}\n\t\n\t\t\t// Shift the untouched slots to the left\n\t\t\twhile (read < a.table.length + b.table.length )\n\t\t\t{\n\t\t\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\n\t\t\t\tread++;\n\t\t\t\twrite++;\n\t\t\t}\n\t\n\t\t\treturn [newA, newB];\n\t\t}\n\t\n\t\t// Navigation functions\n\t\tfunction botRight(a)\n\t\t{\n\t\t\treturn a.table[a.table.length - 1];\n\t\t}\n\t\tfunction botLeft(a)\n\t\t{\n\t\t\treturn a.table[0];\n\t\t}\n\t\n\t\t// Copies a node for updating. Note that you should not use this if\n\t\t// only updating only one of \"table\" or \"lengths\" for performance reasons.\n\t\tfunction nodeCopy(a)\n\t\t{\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height,\n\t\t\t\ttable: a.table.slice()\n\t\t\t};\n\t\t\tif (a.height > 0)\n\t\t\t{\n\t\t\t\tnewA.lengths = a.lengths.slice();\n\t\t\t}\n\t\t\treturn newA;\n\t\t}\n\t\n\t\t// Returns how many items are in the tree.\n\t\tfunction length(array)\n\t\t{\n\t\t\tif (array.height === 0)\n\t\t\t{\n\t\t\t\treturn array.table.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn array.lengths[array.lengths.length - 1];\n\t\t\t}\n\t\t}\n\t\n\t\t// Calculates in which slot of \"table\" the item probably is, then\n\t\t// find the exact slot via forward searching in  \"lengths\". Returns the index.\n\t\tfunction getSlot(i, a)\n\t\t{\n\t\t\tvar slot = i >> (5 * a.height);\n\t\t\twhile (a.lengths[slot] <= i)\n\t\t\t{\n\t\t\t\tslot++;\n\t\t\t}\n\t\t\treturn slot;\n\t\t}\n\t\n\t\t// Recursively creates a tree with a given height containing\n\t\t// only the given item.\n\t\tfunction create(item, h)\n\t\t{\n\t\t\tif (h === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: [item]\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h,\n\t\t\t\ttable: [create(item, h - 1)],\n\t\t\t\tlengths: [1]\n\t\t\t};\n\t\t}\n\t\n\t\t// Recursively creates a tree that contains the given tree.\n\t\tfunction parentise(tree, h)\n\t\t{\n\t\t\tif (h === tree.height)\n\t\t\t{\n\t\t\t\treturn tree;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h,\n\t\t\t\ttable: [parentise(tree, h - 1)],\n\t\t\t\tlengths: [length(tree)]\n\t\t\t};\n\t\t}\n\t\n\t\t// Emphasizes blood brotherhood beneath two trees.\n\t\tfunction siblise(a, b)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: a.height + 1,\n\t\t\t\ttable: [a, b],\n\t\t\t\tlengths: [length(a), length(a) + length(b)]\n\t\t\t};\n\t\t}\n\t\n\t\tfunction toJSArray(a)\n\t\t{\n\t\t\tvar jsArray = new Array(length(a));\n\t\t\ttoJSArray_(jsArray, 0, a);\n\t\t\treturn jsArray;\n\t\t}\n\t\n\t\tfunction toJSArray_(jsArray, i, a)\n\t\t{\n\t\t\tfor (var t = 0; t < a.table.length; t++)\n\t\t\t{\n\t\t\t\tif (a.height === 0)\n\t\t\t\t{\n\t\t\t\t\tjsArray[i + t] = a.table[t];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\n\t\t\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction fromJSArray(jsArray)\n\t\t{\n\t\t\tif (jsArray.length === 0)\n\t\t\t{\n\t\t\t\treturn empty;\n\t\t\t}\n\t\t\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n\t\t\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\n\t\t}\n\t\n\t\tfunction fromJSArray_(jsArray, h, from, to)\n\t\t{\n\t\t\tif (h === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: jsArray.slice(from, to)\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tvar step = Math.pow(M, h);\n\t\t\tvar table = new Array(Math.ceil((to - from) / step));\n\t\t\tvar lengths = new Array(table.length);\n\t\t\tfor (var i = 0; i < table.length; i++)\n\t\t\t{\n\t\t\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\t\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h,\n\t\t\t\ttable: table,\n\t\t\t\tlengths: lengths\n\t\t\t};\n\t\t}\n\t\n\t\tElm.Native.Array.values = {\n\t\t\tempty: empty,\n\t\t\tfromList: fromList,\n\t\t\ttoList: toList,\n\t\t\tinitialize: F2(initialize),\n\t\t\tappend: F2(append),\n\t\t\tpush: F2(push),\n\t\t\tslice: F3(slice),\n\t\t\tget: F2(get),\n\t\t\tset: F3(set),\n\t\t\tmap: F2(map),\n\t\t\tindexedMap: F2(indexedMap),\n\t\t\tfoldl: F3(foldl),\n\t\t\tfoldr: F3(foldr),\n\t\t\tlength: length,\n\t\n\t\t\ttoJSArray: toJSArray,\n\t\t\tfromJSArray: fromJSArray\n\t\t};\n\t\n\t\treturn localRuntime.Native.Array.values = Elm.Native.Array.values;\n\t};\n\t\n\tElm.Array = Elm.Array || {};\n\tElm.Array.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Array = _elm.Array || {};\n\t   if (_elm.Array.values) return _elm.Array.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Array = Elm.Native.Array.make(_elm);\n\t   var _op = {};\n\t   var append = $Native$Array.append;\n\t   var length = $Native$Array.length;\n\t   var isEmpty = function (array) {    return _U.eq(length(array),0);};\n\t   var slice = $Native$Array.slice;\n\t   var set = $Native$Array.set;\n\t   var get = F2(function (i,array) {\n\t      return _U.cmp(0,i) < 1 && _U.cmp(i,$Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,i,array)) : $Maybe.Nothing;\n\t   });\n\t   var push = $Native$Array.push;\n\t   var empty = $Native$Array.empty;\n\t   var filter = F2(function (isOkay,arr) {\n\t      var update = F2(function (x,xs) {    return isOkay(x) ? A2($Native$Array.push,x,xs) : xs;});\n\t      return A3($Native$Array.foldl,update,$Native$Array.empty,arr);\n\t   });\n\t   var foldr = $Native$Array.foldr;\n\t   var foldl = $Native$Array.foldl;\n\t   var indexedMap = $Native$Array.indexedMap;\n\t   var map = $Native$Array.map;\n\t   var toIndexedList = function (array) {\n\t      return A3($List.map2,\n\t      F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}),\n\t      _U.range(0,$Native$Array.length(array) - 1),\n\t      $Native$Array.toList(array));\n\t   };\n\t   var toList = $Native$Array.toList;\n\t   var fromList = $Native$Array.fromList;\n\t   var initialize = $Native$Array.initialize;\n\t   var repeat = F2(function (n,e) {    return A2(initialize,n,$Basics.always(e));});\n\t   var Array = {ctor: \"Array\"};\n\t   return _elm.Array.values = {_op: _op\n\t                              ,empty: empty\n\t                              ,repeat: repeat\n\t                              ,initialize: initialize\n\t                              ,fromList: fromList\n\t                              ,isEmpty: isEmpty\n\t                              ,length: length\n\t                              ,push: push\n\t                              ,append: append\n\t                              ,get: get\n\t                              ,set: set\n\t                              ,slice: slice\n\t                              ,toList: toList\n\t                              ,toIndexedList: toIndexedList\n\t                              ,map: map\n\t                              ,indexedMap: indexedMap\n\t                              ,filter: filter\n\t                              ,foldl: foldl\n\t                              ,foldr: foldr};\n\t};\n\tElm.Native.Char = {};\n\tElm.Native.Char.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Char = localRuntime.Native.Char || {};\n\t\tif (localRuntime.Native.Char.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Char.values;\n\t\t}\n\t\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\treturn localRuntime.Native.Char.values = {\n\t\t\tfromCode: function(c) { return Utils.chr(String.fromCharCode(c)); },\n\t\t\ttoCode: function(c) { return c.charCodeAt(0); },\n\t\t\ttoUpper: function(c) { return Utils.chr(c.toUpperCase()); },\n\t\t\ttoLower: function(c) { return Utils.chr(c.toLowerCase()); },\n\t\t\ttoLocaleUpper: function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n\t\t\ttoLocaleLower: function(c) { return Utils.chr(c.toLocaleLowerCase()); }\n\t\t};\n\t};\n\t\n\tElm.Char = Elm.Char || {};\n\tElm.Char.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Char = _elm.Char || {};\n\t   if (_elm.Char.values) return _elm.Char.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Native$Char = Elm.Native.Char.make(_elm);\n\t   var _op = {};\n\t   var fromCode = $Native$Char.fromCode;\n\t   var toCode = $Native$Char.toCode;\n\t   var toLocaleLower = $Native$Char.toLocaleLower;\n\t   var toLocaleUpper = $Native$Char.toLocaleUpper;\n\t   var toLower = $Native$Char.toLower;\n\t   var toUpper = $Native$Char.toUpper;\n\t   var isBetween = F3(function (low,high,$char) {    var code = toCode($char);return _U.cmp(code,toCode(low)) > -1 && _U.cmp(code,toCode(high)) < 1;});\n\t   var isUpper = A2(isBetween,_U.chr(\"A\"),_U.chr(\"Z\"));\n\t   var isLower = A2(isBetween,_U.chr(\"a\"),_U.chr(\"z\"));\n\t   var isDigit = A2(isBetween,_U.chr(\"0\"),_U.chr(\"9\"));\n\t   var isOctDigit = A2(isBetween,_U.chr(\"0\"),_U.chr(\"7\"));\n\t   var isHexDigit = function ($char) {\n\t      return isDigit($char) || (A3(isBetween,_U.chr(\"a\"),_U.chr(\"f\"),$char) || A3(isBetween,_U.chr(\"A\"),_U.chr(\"F\"),$char));\n\t   };\n\t   return _elm.Char.values = {_op: _op\n\t                             ,isUpper: isUpper\n\t                             ,isLower: isLower\n\t                             ,isDigit: isDigit\n\t                             ,isOctDigit: isOctDigit\n\t                             ,isHexDigit: isHexDigit\n\t                             ,toUpper: toUpper\n\t                             ,toLower: toLower\n\t                             ,toLocaleUpper: toLocaleUpper\n\t                             ,toLocaleLower: toLocaleLower\n\t                             ,toCode: toCode\n\t                             ,fromCode: fromCode};\n\t};\n\tElm.Native.String = {};\n\t\n\tElm.Native.String.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.String = localRuntime.Native.String || {};\n\t\tif (localRuntime.Native.String.values)\n\t\t{\n\t\t\treturn localRuntime.Native.String.values;\n\t\t}\n\t\tif ('values' in Elm.Native.String)\n\t\t{\n\t\t\treturn localRuntime.Native.String.values = Elm.Native.String.values;\n\t\t}\n\t\n\t\n\t\tvar Char = Elm.Char.make(localRuntime);\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\tvar Maybe = Elm.Maybe.make(localRuntime);\n\t\tvar Result = Elm.Result.make(localRuntime);\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\tfunction isEmpty(str)\n\t\t{\n\t\t\treturn str.length === 0;\n\t\t}\n\t\tfunction cons(chr, str)\n\t\t{\n\t\t\treturn chr + str;\n\t\t}\n\t\tfunction uncons(str)\n\t\t{\n\t\t\tvar hd = str[0];\n\t\t\tif (hd)\n\t\t\t{\n\t\t\t\treturn Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)));\n\t\t\t}\n\t\t\treturn Maybe.Nothing;\n\t\t}\n\t\tfunction append(a, b)\n\t\t{\n\t\t\treturn a + b;\n\t\t}\n\t\tfunction concat(strs)\n\t\t{\n\t\t\treturn List.toArray(strs).join('');\n\t\t}\n\t\tfunction length(str)\n\t\t{\n\t\t\treturn str.length;\n\t\t}\n\t\tfunction map(f, str)\n\t\t{\n\t\t\tvar out = str.split('');\n\t\t\tfor (var i = out.length; i--; )\n\t\t\t{\n\t\t\t\tout[i] = f(Utils.chr(out[i]));\n\t\t\t}\n\t\t\treturn out.join('');\n\t\t}\n\t\tfunction filter(pred, str)\n\t\t{\n\t\t\treturn str.split('').map(Utils.chr).filter(pred).join('');\n\t\t}\n\t\tfunction reverse(str)\n\t\t{\n\t\t\treturn str.split('').reverse().join('');\n\t\t}\n\t\tfunction foldl(f, b, str)\n\t\t{\n\t\t\tvar len = str.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tb = A2(f, Utils.chr(str[i]), b);\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t\tfunction foldr(f, b, str)\n\t\t{\n\t\t\tfor (var i = str.length; i--; )\n\t\t\t{\n\t\t\t\tb = A2(f, Utils.chr(str[i]), b);\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t\tfunction split(sep, str)\n\t\t{\n\t\t\treturn List.fromArray(str.split(sep));\n\t\t}\n\t\tfunction join(sep, strs)\n\t\t{\n\t\t\treturn List.toArray(strs).join(sep);\n\t\t}\n\t\tfunction repeat(n, str)\n\t\t{\n\t\t\tvar result = '';\n\t\t\twhile (n > 0)\n\t\t\t{\n\t\t\t\tif (n & 1)\n\t\t\t\t{\n\t\t\t\t\tresult += str;\n\t\t\t\t}\n\t\t\t\tn >>= 1, str += str;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tfunction slice(start, end, str)\n\t\t{\n\t\t\treturn str.slice(start, end);\n\t\t}\n\t\tfunction left(n, str)\n\t\t{\n\t\t\treturn n < 1 ? '' : str.slice(0, n);\n\t\t}\n\t\tfunction right(n, str)\n\t\t{\n\t\t\treturn n < 1 ? '' : str.slice(-n);\n\t\t}\n\t\tfunction dropLeft(n, str)\n\t\t{\n\t\t\treturn n < 1 ? str : str.slice(n);\n\t\t}\n\t\tfunction dropRight(n, str)\n\t\t{\n\t\t\treturn n < 1 ? str : str.slice(0, -n);\n\t\t}\n\t\tfunction pad(n, chr, str)\n\t\t{\n\t\t\tvar half = (n - str.length) / 2;\n\t\t\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\n\t\t}\n\t\tfunction padRight(n, chr, str)\n\t\t{\n\t\t\treturn str + repeat(n - str.length, chr);\n\t\t}\n\t\tfunction padLeft(n, chr, str)\n\t\t{\n\t\t\treturn repeat(n - str.length, chr) + str;\n\t\t}\n\t\n\t\tfunction trim(str)\n\t\t{\n\t\t\treturn str.trim();\n\t\t}\n\t\tfunction trimLeft(str)\n\t\t{\n\t\t\treturn str.replace(/^\\s+/, '');\n\t\t}\n\t\tfunction trimRight(str)\n\t\t{\n\t\t\treturn str.replace(/\\s+$/, '');\n\t\t}\n\t\n\t\tfunction words(str)\n\t\t{\n\t\t\treturn List.fromArray(str.trim().split(/\\s+/g));\n\t\t}\n\t\tfunction lines(str)\n\t\t{\n\t\t\treturn List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n\t\t}\n\t\n\t\tfunction toUpper(str)\n\t\t{\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\tfunction toLower(str)\n\t\t{\n\t\t\treturn str.toLowerCase();\n\t\t}\n\t\n\t\tfunction any(pred, str)\n\t\t{\n\t\t\tfor (var i = str.length; i--; )\n\t\t\t{\n\t\t\t\tif (pred(Utils.chr(str[i])))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tfunction all(pred, str)\n\t\t{\n\t\t\tfor (var i = str.length; i--; )\n\t\t\t{\n\t\t\t\tif (!pred(Utils.chr(str[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\tfunction contains(sub, str)\n\t\t{\n\t\t\treturn str.indexOf(sub) > -1;\n\t\t}\n\t\tfunction startsWith(sub, str)\n\t\t{\n\t\t\treturn str.indexOf(sub) === 0;\n\t\t}\n\t\tfunction endsWith(sub, str)\n\t\t{\n\t\t\treturn str.length >= sub.length &&\n\t\t\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n\t\t}\n\t\tfunction indexes(sub, str)\n\t\t{\n\t\t\tvar subLen = sub.length;\n\t\t\tvar i = 0;\n\t\t\tvar is = [];\n\t\t\twhile ((i = str.indexOf(sub, i)) > -1)\n\t\t\t{\n\t\t\t\tis.push(i);\n\t\t\t\ti = i + subLen;\n\t\t\t}\n\t\t\treturn List.fromArray(is);\n\t\t}\n\t\n\t\tfunction toInt(s)\n\t\t{\n\t\t\tvar len = s.length;\n\t\t\tif (len === 0)\n\t\t\t{\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t\t}\n\t\t\tvar start = 0;\n\t\t\tif (s[0] === '-')\n\t\t\t{\n\t\t\t\tif (len === 1)\n\t\t\t\t{\n\t\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t\t\t}\n\t\t\t\tstart = 1;\n\t\t\t}\n\t\t\tfor (var i = start; i < len; ++i)\n\t\t\t{\n\t\t\t\tif (!Char.isDigit(s[i]))\n\t\t\t\t{\n\t\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Result.Ok(parseInt(s, 10));\n\t\t}\n\t\n\t\tfunction toFloat(s)\n\t\t{\n\t\t\tvar len = s.length;\n\t\t\tif (len === 0)\n\t\t\t{\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t\t}\n\t\t\tvar start = 0;\n\t\t\tif (s[0] === '-')\n\t\t\t{\n\t\t\t\tif (len === 1)\n\t\t\t\t{\n\t\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t\t\t}\n\t\t\t\tstart = 1;\n\t\t\t}\n\t\t\tvar dotCount = 0;\n\t\t\tfor (var i = start; i < len; ++i)\n\t\t\t{\n\t\t\t\tif (Char.isDigit(s[i]))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (s[i] === '.')\n\t\t\t\t{\n\t\t\t\t\tdotCount += 1;\n\t\t\t\t\tif (dotCount <= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t\t}\n\t\t\treturn Result.Ok(parseFloat(s));\n\t\t}\n\t\n\t\tfunction toList(str)\n\t\t{\n\t\t\treturn List.fromArray(str.split('').map(Utils.chr));\n\t\t}\n\t\tfunction fromList(chars)\n\t\t{\n\t\t\treturn List.toArray(chars).join('');\n\t\t}\n\t\n\t\treturn Elm.Native.String.values = {\n\t\t\tisEmpty: isEmpty,\n\t\t\tcons: F2(cons),\n\t\t\tuncons: uncons,\n\t\t\tappend: F2(append),\n\t\t\tconcat: concat,\n\t\t\tlength: length,\n\t\t\tmap: F2(map),\n\t\t\tfilter: F2(filter),\n\t\t\treverse: reverse,\n\t\t\tfoldl: F3(foldl),\n\t\t\tfoldr: F3(foldr),\n\t\n\t\t\tsplit: F2(split),\n\t\t\tjoin: F2(join),\n\t\t\trepeat: F2(repeat),\n\t\n\t\t\tslice: F3(slice),\n\t\t\tleft: F2(left),\n\t\t\tright: F2(right),\n\t\t\tdropLeft: F2(dropLeft),\n\t\t\tdropRight: F2(dropRight),\n\t\n\t\t\tpad: F3(pad),\n\t\t\tpadLeft: F3(padLeft),\n\t\t\tpadRight: F3(padRight),\n\t\n\t\t\ttrim: trim,\n\t\t\ttrimLeft: trimLeft,\n\t\t\ttrimRight: trimRight,\n\t\n\t\t\twords: words,\n\t\t\tlines: lines,\n\t\n\t\t\ttoUpper: toUpper,\n\t\t\ttoLower: toLower,\n\t\n\t\t\tany: F2(any),\n\t\t\tall: F2(all),\n\t\n\t\t\tcontains: F2(contains),\n\t\t\tstartsWith: F2(startsWith),\n\t\t\tendsWith: F2(endsWith),\n\t\t\tindexes: F2(indexes),\n\t\n\t\t\ttoInt: toInt,\n\t\t\ttoFloat: toFloat,\n\t\t\ttoList: toList,\n\t\t\tfromList: fromList\n\t\t};\n\t};\n\t\n\tElm.String = Elm.String || {};\n\tElm.String.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.String = _elm.String || {};\n\t   if (_elm.String.values) return _elm.String.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Maybe = Elm.Maybe.make(_elm),$Native$String = Elm.Native.String.make(_elm),$Result = Elm.Result.make(_elm);\n\t   var _op = {};\n\t   var fromList = $Native$String.fromList;\n\t   var toList = $Native$String.toList;\n\t   var toFloat = $Native$String.toFloat;\n\t   var toInt = $Native$String.toInt;\n\t   var indices = $Native$String.indexes;\n\t   var indexes = $Native$String.indexes;\n\t   var endsWith = $Native$String.endsWith;\n\t   var startsWith = $Native$String.startsWith;\n\t   var contains = $Native$String.contains;\n\t   var all = $Native$String.all;\n\t   var any = $Native$String.any;\n\t   var toLower = $Native$String.toLower;\n\t   var toUpper = $Native$String.toUpper;\n\t   var lines = $Native$String.lines;\n\t   var words = $Native$String.words;\n\t   var trimRight = $Native$String.trimRight;\n\t   var trimLeft = $Native$String.trimLeft;\n\t   var trim = $Native$String.trim;\n\t   var padRight = $Native$String.padRight;\n\t   var padLeft = $Native$String.padLeft;\n\t   var pad = $Native$String.pad;\n\t   var dropRight = $Native$String.dropRight;\n\t   var dropLeft = $Native$String.dropLeft;\n\t   var right = $Native$String.right;\n\t   var left = $Native$String.left;\n\t   var slice = $Native$String.slice;\n\t   var repeat = $Native$String.repeat;\n\t   var join = $Native$String.join;\n\t   var split = $Native$String.split;\n\t   var foldr = $Native$String.foldr;\n\t   var foldl = $Native$String.foldl;\n\t   var reverse = $Native$String.reverse;\n\t   var filter = $Native$String.filter;\n\t   var map = $Native$String.map;\n\t   var length = $Native$String.length;\n\t   var concat = $Native$String.concat;\n\t   var append = $Native$String.append;\n\t   var uncons = $Native$String.uncons;\n\t   var cons = $Native$String.cons;\n\t   var fromChar = function ($char) {    return A2(cons,$char,\"\");};\n\t   var isEmpty = $Native$String.isEmpty;\n\t   return _elm.String.values = {_op: _op\n\t                               ,isEmpty: isEmpty\n\t                               ,length: length\n\t                               ,reverse: reverse\n\t                               ,repeat: repeat\n\t                               ,cons: cons\n\t                               ,uncons: uncons\n\t                               ,fromChar: fromChar\n\t                               ,append: append\n\t                               ,concat: concat\n\t                               ,split: split\n\t                               ,join: join\n\t                               ,words: words\n\t                               ,lines: lines\n\t                               ,slice: slice\n\t                               ,left: left\n\t                               ,right: right\n\t                               ,dropLeft: dropLeft\n\t                               ,dropRight: dropRight\n\t                               ,contains: contains\n\t                               ,startsWith: startsWith\n\t                               ,endsWith: endsWith\n\t                               ,indexes: indexes\n\t                               ,indices: indices\n\t                               ,toInt: toInt\n\t                               ,toFloat: toFloat\n\t                               ,toList: toList\n\t                               ,fromList: fromList\n\t                               ,toUpper: toUpper\n\t                               ,toLower: toLower\n\t                               ,pad: pad\n\t                               ,padLeft: padLeft\n\t                               ,padRight: padRight\n\t                               ,trim: trim\n\t                               ,trimLeft: trimLeft\n\t                               ,trimRight: trimRight\n\t                               ,map: map\n\t                               ,filter: filter\n\t                               ,foldl: foldl\n\t                               ,foldr: foldr\n\t                               ,any: any\n\t                               ,all: all};\n\t};\n\tElm.Dict = Elm.Dict || {};\n\tElm.Dict.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Dict = _elm.Dict || {};\n\t   if (_elm.Dict.values) return _elm.Dict.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Debug = Elm.Native.Debug.make(_elm),\n\t   $String = Elm.String.make(_elm);\n\t   var _op = {};\n\t   var foldr = F3(function (f,acc,t) {\n\t      foldr: while (true) {\n\t         var _p0 = t;\n\t         if (_p0.ctor === \"RBEmpty_elm_builtin\") {\n\t               return acc;\n\t            } else {\n\t               var _v1 = f,_v2 = A3(f,_p0._1,_p0._2,A3(foldr,f,acc,_p0._4)),_v3 = _p0._3;\n\t               f = _v1;\n\t               acc = _v2;\n\t               t = _v3;\n\t               continue foldr;\n\t            }\n\t      }\n\t   });\n\t   var keys = function (dict) {    return A3(foldr,F3(function (key,value,keyList) {    return A2($List._op[\"::\"],key,keyList);}),_U.list([]),dict);};\n\t   var values = function (dict) {    return A3(foldr,F3(function (key,value,valueList) {    return A2($List._op[\"::\"],value,valueList);}),_U.list([]),dict);};\n\t   var toList = function (dict) {\n\t      return A3(foldr,F3(function (key,value,list) {    return A2($List._op[\"::\"],{ctor: \"_Tuple2\",_0: key,_1: value},list);}),_U.list([]),dict);\n\t   };\n\t   var foldl = F3(function (f,acc,dict) {\n\t      foldl: while (true) {\n\t         var _p1 = dict;\n\t         if (_p1.ctor === \"RBEmpty_elm_builtin\") {\n\t               return acc;\n\t            } else {\n\t               var _v5 = f,_v6 = A3(f,_p1._1,_p1._2,A3(foldl,f,acc,_p1._3)),_v7 = _p1._4;\n\t               f = _v5;\n\t               acc = _v6;\n\t               dict = _v7;\n\t               continue foldl;\n\t            }\n\t      }\n\t   });\n\t   var reportRemBug = F4(function (msg,c,lgot,rgot) {\n\t      return $Native$Debug.crash($String.concat(_U.list([\"Internal red-black tree invariant violated, expected \"\n\t                                                        ,msg\n\t                                                        ,\" and got \"\n\t                                                        ,$Basics.toString(c)\n\t                                                        ,\"/\"\n\t                                                        ,lgot\n\t                                                        ,\"/\"\n\t                                                        ,rgot\n\t                                                        ,\"\\nPlease report this bug to <https://github.com/elm-lang/core/issues>\"])));\n\t   });\n\t   var isBBlack = function (dict) {\n\t      var _p2 = dict;\n\t      _v8_2: do {\n\t         if (_p2.ctor === \"RBNode_elm_builtin\") {\n\t               if (_p2._0.ctor === \"BBlack\") {\n\t                     return true;\n\t                  } else {\n\t                     break _v8_2;\n\t                  }\n\t            } else {\n\t               if (_p2._0.ctor === \"LBBlack\") {\n\t                     return true;\n\t                  } else {\n\t                     break _v8_2;\n\t                  }\n\t            }\n\t      } while (false);\n\t      return false;\n\t   };\n\t   var Same = {ctor: \"Same\"};\n\t   var Remove = {ctor: \"Remove\"};\n\t   var Insert = {ctor: \"Insert\"};\n\t   var sizeHelp = F2(function (n,dict) {\n\t      sizeHelp: while (true) {\n\t         var _p3 = dict;\n\t         if (_p3.ctor === \"RBEmpty_elm_builtin\") {\n\t               return n;\n\t            } else {\n\t               var _v10 = A2(sizeHelp,n + 1,_p3._4),_v11 = _p3._3;\n\t               n = _v10;\n\t               dict = _v11;\n\t               continue sizeHelp;\n\t            }\n\t      }\n\t   });\n\t   var size = function (dict) {    return A2(sizeHelp,0,dict);};\n\t   var get = F2(function (targetKey,dict) {\n\t      get: while (true) {\n\t         var _p4 = dict;\n\t         if (_p4.ctor === \"RBEmpty_elm_builtin\") {\n\t               return $Maybe.Nothing;\n\t            } else {\n\t               var _p5 = A2($Basics.compare,targetKey,_p4._1);\n\t               switch (_p5.ctor)\n\t               {case \"LT\": var _v14 = targetKey,_v15 = _p4._3;\n\t                    targetKey = _v14;\n\t                    dict = _v15;\n\t                    continue get;\n\t                  case \"EQ\": return $Maybe.Just(_p4._2);\n\t                  default: var _v16 = targetKey,_v17 = _p4._4;\n\t                    targetKey = _v16;\n\t                    dict = _v17;\n\t                    continue get;}\n\t            }\n\t      }\n\t   });\n\t   var member = F2(function (key,dict) {    var _p6 = A2(get,key,dict);if (_p6.ctor === \"Just\") {    return true;} else {    return false;}});\n\t   var maxWithDefault = F3(function (k,v,r) {\n\t      maxWithDefault: while (true) {\n\t         var _p7 = r;\n\t         if (_p7.ctor === \"RBEmpty_elm_builtin\") {\n\t               return {ctor: \"_Tuple2\",_0: k,_1: v};\n\t            } else {\n\t               var _v20 = _p7._1,_v21 = _p7._2,_v22 = _p7._4;\n\t               k = _v20;\n\t               v = _v21;\n\t               r = _v22;\n\t               continue maxWithDefault;\n\t            }\n\t      }\n\t   });\n\t   var RBEmpty_elm_builtin = function (a) {    return {ctor: \"RBEmpty_elm_builtin\",_0: a};};\n\t   var RBNode_elm_builtin = F5(function (a,b,c,d,e) {    return {ctor: \"RBNode_elm_builtin\",_0: a,_1: b,_2: c,_3: d,_4: e};});\n\t   var LBBlack = {ctor: \"LBBlack\"};\n\t   var LBlack = {ctor: \"LBlack\"};\n\t   var empty = RBEmpty_elm_builtin(LBlack);\n\t   var isEmpty = function (dict) {    return _U.eq(dict,empty);};\n\t   var map = F2(function (f,dict) {\n\t      var _p8 = dict;\n\t      if (_p8.ctor === \"RBEmpty_elm_builtin\") {\n\t            return RBEmpty_elm_builtin(LBlack);\n\t         } else {\n\t            var _p9 = _p8._1;\n\t            return A5(RBNode_elm_builtin,_p8._0,_p9,A2(f,_p9,_p8._2),A2(map,f,_p8._3),A2(map,f,_p8._4));\n\t         }\n\t   });\n\t   var NBlack = {ctor: \"NBlack\"};\n\t   var BBlack = {ctor: \"BBlack\"};\n\t   var Black = {ctor: \"Black\"};\n\t   var ensureBlackRoot = function (dict) {\n\t      var _p10 = dict;\n\t      if (_p10.ctor === \"RBNode_elm_builtin\" && _p10._0.ctor === \"Red\") {\n\t            return A5(RBNode_elm_builtin,Black,_p10._1,_p10._2,_p10._3,_p10._4);\n\t         } else {\n\t            return dict;\n\t         }\n\t   };\n\t   var blackish = function (t) {\n\t      var _p11 = t;\n\t      if (_p11.ctor === \"RBNode_elm_builtin\") {\n\t            var _p12 = _p11._0;\n\t            return _U.eq(_p12,Black) || _U.eq(_p12,BBlack);\n\t         } else {\n\t            return true;\n\t         }\n\t   };\n\t   var blacken = function (t) {\n\t      var _p13 = t;\n\t      if (_p13.ctor === \"RBEmpty_elm_builtin\") {\n\t            return RBEmpty_elm_builtin(LBlack);\n\t         } else {\n\t            return A5(RBNode_elm_builtin,Black,_p13._1,_p13._2,_p13._3,_p13._4);\n\t         }\n\t   };\n\t   var Red = {ctor: \"Red\"};\n\t   var moreBlack = function (color) {\n\t      var _p14 = color;\n\t      switch (_p14.ctor)\n\t      {case \"Black\": return BBlack;\n\t         case \"Red\": return Black;\n\t         case \"NBlack\": return Red;\n\t         default: return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");}\n\t   };\n\t   var lessBlack = function (color) {\n\t      var _p15 = color;\n\t      switch (_p15.ctor)\n\t      {case \"BBlack\": return Black;\n\t         case \"Black\": return Red;\n\t         case \"Red\": return NBlack;\n\t         default: return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");}\n\t   };\n\t   var lessBlackTree = function (dict) {\n\t      var _p16 = dict;\n\t      if (_p16.ctor === \"RBNode_elm_builtin\") {\n\t            return A5(RBNode_elm_builtin,lessBlack(_p16._0),_p16._1,_p16._2,_p16._3,_p16._4);\n\t         } else {\n\t            return RBEmpty_elm_builtin(LBlack);\n\t         }\n\t   };\n\t   var balancedTree = function (col) {\n\t      return function (xk) {\n\t         return function (xv) {\n\t            return function (yk) {\n\t               return function (yv) {\n\t                  return function (zk) {\n\t                     return function (zv) {\n\t                        return function (a) {\n\t                           return function (b) {\n\t                              return function (c) {\n\t                                 return function (d) {\n\t                                    return A5(RBNode_elm_builtin,\n\t                                    lessBlack(col),\n\t                                    yk,\n\t                                    yv,\n\t                                    A5(RBNode_elm_builtin,Black,xk,xv,a,b),\n\t                                    A5(RBNode_elm_builtin,Black,zk,zv,c,d));\n\t                                 };\n\t                              };\n\t                           };\n\t                        };\n\t                     };\n\t                  };\n\t               };\n\t            };\n\t         };\n\t      };\n\t   };\n\t   var redden = function (t) {\n\t      var _p17 = t;\n\t      if (_p17.ctor === \"RBEmpty_elm_builtin\") {\n\t            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n\t         } else {\n\t            return A5(RBNode_elm_builtin,Red,_p17._1,_p17._2,_p17._3,_p17._4);\n\t         }\n\t   };\n\t   var balanceHelp = function (tree) {\n\t      var _p18 = tree;\n\t      _v31_6: do {\n\t         _v31_5: do {\n\t            _v31_4: do {\n\t               _v31_3: do {\n\t                  _v31_2: do {\n\t                     _v31_1: do {\n\t                        _v31_0: do {\n\t                           if (_p18.ctor === \"RBNode_elm_builtin\") {\n\t                                 if (_p18._3.ctor === \"RBNode_elm_builtin\") {\n\t                                       if (_p18._4.ctor === \"RBNode_elm_builtin\") {\n\t                                             switch (_p18._3._0.ctor)\n\t                                             {case \"Red\": switch (_p18._4._0.ctor)\n\t                                                  {case \"Red\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n\t                                                             break _v31_0;\n\t                                                          } else {\n\t                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n\t                                                                   break _v31_1;\n\t                                                                } else {\n\t                                                                   if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n\t                                                                         break _v31_2;\n\t                                                                      } else {\n\t                                                                         if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n\t                                                                               break _v31_3;\n\t                                                                            } else {\n\t                                                                               break _v31_6;\n\t                                                                            }\n\t                                                                      }\n\t                                                                }\n\t                                                          }\n\t                                                     case \"NBlack\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n\t                                                             break _v31_0;\n\t                                                          } else {\n\t                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n\t                                                                   break _v31_1;\n\t                                                                } else {\n\t                                                                   if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n\t                                                                   {\n\t                                                                         break _v31_4;\n\t                                                                      } else {\n\t                                                                         break _v31_6;\n\t                                                                      }\n\t                                                                }\n\t                                                          }\n\t                                                     default: if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n\t                                                             break _v31_0;\n\t                                                          } else {\n\t                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n\t                                                                   break _v31_1;\n\t                                                                } else {\n\t                                                                   break _v31_6;\n\t                                                                }\n\t                                                          }}\n\t                                                case \"NBlack\": switch (_p18._4._0.ctor)\n\t                                                  {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n\t                                                             break _v31_2;\n\t                                                          } else {\n\t                                                             if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n\t                                                                   break _v31_3;\n\t                                                                } else {\n\t                                                                   if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n\t                                                                   {\n\t                                                                         break _v31_5;\n\t                                                                      } else {\n\t                                                                         break _v31_6;\n\t                                                                      }\n\t                                                                }\n\t                                                          }\n\t                                                     case \"NBlack\": if (_p18._0.ctor === \"BBlack\") {\n\t                                                             if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n\t                                                             {\n\t                                                                   break _v31_4;\n\t                                                                } else {\n\t                                                                   if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n\t                                                                   {\n\t                                                                         break _v31_5;\n\t                                                                      } else {\n\t                                                                         break _v31_6;\n\t                                                                      }\n\t                                                                }\n\t                                                          } else {\n\t                                                             break _v31_6;\n\t                                                          }\n\t                                                     default:\n\t                                                     if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n\t                                                       {\n\t                                                             break _v31_5;\n\t                                                          } else {\n\t                                                             break _v31_6;\n\t                                                          }}\n\t                                                default: switch (_p18._4._0.ctor)\n\t                                                  {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n\t                                                             break _v31_2;\n\t                                                          } else {\n\t                                                             if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n\t                                                                   break _v31_3;\n\t                                                                } else {\n\t                                                                   break _v31_6;\n\t                                                                }\n\t                                                          }\n\t                                                     case \"NBlack\":\n\t                                                     if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n\t                                                       {\n\t                                                             break _v31_4;\n\t                                                          } else {\n\t                                                             break _v31_6;\n\t                                                          }\n\t                                                     default: break _v31_6;}}\n\t                                          } else {\n\t                                             switch (_p18._3._0.ctor)\n\t                                             {case \"Red\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n\t                                                        break _v31_0;\n\t                                                     } else {\n\t                                                        if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n\t                                                              break _v31_1;\n\t                                                           } else {\n\t                                                              break _v31_6;\n\t                                                           }\n\t                                                     }\n\t                                                case \"NBlack\":\n\t                                                if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n\t                                                  {\n\t                                                        break _v31_5;\n\t                                                     } else {\n\t                                                        break _v31_6;\n\t                                                     }\n\t                                                default: break _v31_6;}\n\t                                          }\n\t                                    } else {\n\t                                       if (_p18._4.ctor === \"RBNode_elm_builtin\") {\n\t                                             switch (_p18._4._0.ctor)\n\t                                             {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n\t                                                        break _v31_2;\n\t                                                     } else {\n\t                                                        if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n\t                                                              break _v31_3;\n\t                                                           } else {\n\t                                                              break _v31_6;\n\t                                                           }\n\t                                                     }\n\t                                                case \"NBlack\":\n\t                                                if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n\t                                                  {\n\t                                                        break _v31_4;\n\t                                                     } else {\n\t                                                        break _v31_6;\n\t                                                     }\n\t                                                default: break _v31_6;}\n\t                                          } else {\n\t                                             break _v31_6;\n\t                                          }\n\t                                    }\n\t                              } else {\n\t                                 break _v31_6;\n\t                              }\n\t                        } while (false);\n\t                        return balancedTree(_p18._0)(_p18._3._3._1)(_p18._3._3._2)(_p18._3._1)(_p18._3._2)(_p18._1)(_p18._2)(_p18._3._3._3)(_p18._3._3._4)(_p18._3._4)(_p18._4);\n\t                     } while (false);\n\t                     return balancedTree(_p18._0)(_p18._3._1)(_p18._3._2)(_p18._3._4._1)(_p18._3._4._2)(_p18._1)(_p18._2)(_p18._3._3)(_p18._3._4._3)(_p18._3._4._4)(_p18._4);\n\t                  } while (false);\n\t                  return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._3._1)(_p18._4._3._2)(_p18._4._1)(_p18._4._2)(_p18._3)(_p18._4._3._3)(_p18._4._3._4)(_p18._4._4);\n\t               } while (false);\n\t               return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._1)(_p18._4._2)(_p18._4._4._1)(_p18._4._4._2)(_p18._3)(_p18._4._3)(_p18._4._4._3)(_p18._4._4._4);\n\t            } while (false);\n\t            return A5(RBNode_elm_builtin,\n\t            Black,\n\t            _p18._4._3._1,\n\t            _p18._4._3._2,\n\t            A5(RBNode_elm_builtin,Black,_p18._1,_p18._2,_p18._3,_p18._4._3._3),\n\t            A5(balance,Black,_p18._4._1,_p18._4._2,_p18._4._3._4,redden(_p18._4._4)));\n\t         } while (false);\n\t         return A5(RBNode_elm_builtin,\n\t         Black,\n\t         _p18._3._4._1,\n\t         _p18._3._4._2,\n\t         A5(balance,Black,_p18._3._1,_p18._3._2,redden(_p18._3._3),_p18._3._4._3),\n\t         A5(RBNode_elm_builtin,Black,_p18._1,_p18._2,_p18._3._4._4,_p18._4));\n\t      } while (false);\n\t      return tree;\n\t   };\n\t   var balance = F5(function (c,k,v,l,r) {    var tree = A5(RBNode_elm_builtin,c,k,v,l,r);return blackish(tree) ? balanceHelp(tree) : tree;});\n\t   var bubble = F5(function (c,k,v,l,r) {\n\t      return isBBlack(l) || isBBlack(r) ? A5(balance,moreBlack(c),k,v,lessBlackTree(l),lessBlackTree(r)) : A5(RBNode_elm_builtin,c,k,v,l,r);\n\t   });\n\t   var removeMax = F5(function (c,k,v,l,r) {\n\t      var _p19 = r;\n\t      if (_p19.ctor === \"RBEmpty_elm_builtin\") {\n\t            return A3(rem,c,l,r);\n\t         } else {\n\t            return A5(bubble,c,k,v,l,A5(removeMax,_p19._0,_p19._1,_p19._2,_p19._3,_p19._4));\n\t         }\n\t   });\n\t   var rem = F3(function (c,l,r) {\n\t      var _p20 = {ctor: \"_Tuple2\",_0: l,_1: r};\n\t      if (_p20._0.ctor === \"RBEmpty_elm_builtin\") {\n\t            if (_p20._1.ctor === \"RBEmpty_elm_builtin\") {\n\t                  var _p21 = c;\n\t                  switch (_p21.ctor)\n\t                  {case \"Red\": return RBEmpty_elm_builtin(LBlack);\n\t                     case \"Black\": return RBEmpty_elm_builtin(LBBlack);\n\t                     default: return $Native$Debug.crash(\"cannot have bblack or nblack nodes at this point\");}\n\t               } else {\n\t                  var _p24 = _p20._1._0;\n\t                  var _p23 = _p20._0._0;\n\t                  var _p22 = {ctor: \"_Tuple3\",_0: c,_1: _p23,_2: _p24};\n\t                  if (_p22.ctor === \"_Tuple3\" && _p22._0.ctor === \"Black\" && _p22._1.ctor === \"LBlack\" && _p22._2.ctor === \"Red\") {\n\t                        return A5(RBNode_elm_builtin,Black,_p20._1._1,_p20._1._2,_p20._1._3,_p20._1._4);\n\t                     } else {\n\t                        return A4(reportRemBug,\"Black/LBlack/Red\",c,$Basics.toString(_p23),$Basics.toString(_p24));\n\t                     }\n\t               }\n\t         } else {\n\t            if (_p20._1.ctor === \"RBEmpty_elm_builtin\") {\n\t                  var _p27 = _p20._1._0;\n\t                  var _p26 = _p20._0._0;\n\t                  var _p25 = {ctor: \"_Tuple3\",_0: c,_1: _p26,_2: _p27};\n\t                  if (_p25.ctor === \"_Tuple3\" && _p25._0.ctor === \"Black\" && _p25._1.ctor === \"Red\" && _p25._2.ctor === \"LBlack\") {\n\t                        return A5(RBNode_elm_builtin,Black,_p20._0._1,_p20._0._2,_p20._0._3,_p20._0._4);\n\t                     } else {\n\t                        return A4(reportRemBug,\"Black/Red/LBlack\",c,$Basics.toString(_p26),$Basics.toString(_p27));\n\t                     }\n\t               } else {\n\t                  var _p31 = _p20._0._2;\n\t                  var _p30 = _p20._0._4;\n\t                  var _p29 = _p20._0._1;\n\t                  var l$ = A5(removeMax,_p20._0._0,_p29,_p31,_p20._0._3,_p30);\n\t                  var _p28 = A3(maxWithDefault,_p29,_p31,_p30);\n\t                  var k = _p28._0;\n\t                  var v = _p28._1;\n\t                  return A5(bubble,c,k,v,l$,r);\n\t               }\n\t         }\n\t   });\n\t   var update = F3(function (k,alter,dict) {\n\t      var up = function (dict) {\n\t         var _p32 = dict;\n\t         if (_p32.ctor === \"RBEmpty_elm_builtin\") {\n\t               var _p33 = alter($Maybe.Nothing);\n\t               if (_p33.ctor === \"Nothing\") {\n\t                     return {ctor: \"_Tuple2\",_0: Same,_1: empty};\n\t                  } else {\n\t                     return {ctor: \"_Tuple2\",_0: Insert,_1: A5(RBNode_elm_builtin,Red,k,_p33._0,empty,empty)};\n\t                  }\n\t            } else {\n\t               var _p44 = _p32._2;\n\t               var _p43 = _p32._4;\n\t               var _p42 = _p32._3;\n\t               var _p41 = _p32._1;\n\t               var _p40 = _p32._0;\n\t               var _p34 = A2($Basics.compare,k,_p41);\n\t               switch (_p34.ctor)\n\t               {case \"EQ\": var _p35 = alter($Maybe.Just(_p44));\n\t                    if (_p35.ctor === \"Nothing\") {\n\t                          return {ctor: \"_Tuple2\",_0: Remove,_1: A3(rem,_p40,_p42,_p43)};\n\t                       } else {\n\t                          return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p35._0,_p42,_p43)};\n\t                       }\n\t                  case \"LT\": var _p36 = up(_p42);\n\t                    var flag = _p36._0;\n\t                    var newLeft = _p36._1;\n\t                    var _p37 = flag;\n\t                    switch (_p37.ctor)\n\t                    {case \"Same\": return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,newLeft,_p43)};\n\t                       case \"Insert\": return {ctor: \"_Tuple2\",_0: Insert,_1: A5(balance,_p40,_p41,_p44,newLeft,_p43)};\n\t                       default: return {ctor: \"_Tuple2\",_0: Remove,_1: A5(bubble,_p40,_p41,_p44,newLeft,_p43)};}\n\t                  default: var _p38 = up(_p43);\n\t                    var flag = _p38._0;\n\t                    var newRight = _p38._1;\n\t                    var _p39 = flag;\n\t                    switch (_p39.ctor)\n\t                    {case \"Same\": return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,_p42,newRight)};\n\t                       case \"Insert\": return {ctor: \"_Tuple2\",_0: Insert,_1: A5(balance,_p40,_p41,_p44,_p42,newRight)};\n\t                       default: return {ctor: \"_Tuple2\",_0: Remove,_1: A5(bubble,_p40,_p41,_p44,_p42,newRight)};}}\n\t            }\n\t      };\n\t      var _p45 = up(dict);\n\t      var flag = _p45._0;\n\t      var updatedDict = _p45._1;\n\t      var _p46 = flag;\n\t      switch (_p46.ctor)\n\t      {case \"Same\": return updatedDict;\n\t         case \"Insert\": return ensureBlackRoot(updatedDict);\n\t         default: return blacken(updatedDict);}\n\t   });\n\t   var insert = F3(function (key,value,dict) {    return A3(update,key,$Basics.always($Maybe.Just(value)),dict);});\n\t   var singleton = F2(function (key,value) {    return A3(insert,key,value,empty);});\n\t   var union = F2(function (t1,t2) {    return A3(foldl,insert,t2,t1);});\n\t   var fromList = function (assocs) {\n\t      return A3($List.foldl,F2(function (_p47,dict) {    var _p48 = _p47;return A3(insert,_p48._0,_p48._1,dict);}),empty,assocs);\n\t   };\n\t   var filter = F2(function (predicate,dictionary) {\n\t      var add = F3(function (key,value,dict) {    return A2(predicate,key,value) ? A3(insert,key,value,dict) : dict;});\n\t      return A3(foldl,add,empty,dictionary);\n\t   });\n\t   var intersect = F2(function (t1,t2) {    return A2(filter,F2(function (k,_p49) {    return A2(member,k,t2);}),t1);});\n\t   var partition = F2(function (predicate,dict) {\n\t      var add = F3(function (key,value,_p50) {\n\t         var _p51 = _p50;\n\t         var _p53 = _p51._1;\n\t         var _p52 = _p51._0;\n\t         return A2(predicate,key,value) ? {ctor: \"_Tuple2\",_0: A3(insert,key,value,_p52),_1: _p53} : {ctor: \"_Tuple2\",_0: _p52,_1: A3(insert,key,value,_p53)};\n\t      });\n\t      return A3(foldl,add,{ctor: \"_Tuple2\",_0: empty,_1: empty},dict);\n\t   });\n\t   var remove = F2(function (key,dict) {    return A3(update,key,$Basics.always($Maybe.Nothing),dict);});\n\t   var diff = F2(function (t1,t2) {    return A3(foldl,F3(function (k,v,t) {    return A2(remove,k,t);}),t1,t2);});\n\t   return _elm.Dict.values = {_op: _op\n\t                             ,empty: empty\n\t                             ,singleton: singleton\n\t                             ,insert: insert\n\t                             ,update: update\n\t                             ,isEmpty: isEmpty\n\t                             ,get: get\n\t                             ,remove: remove\n\t                             ,member: member\n\t                             ,size: size\n\t                             ,filter: filter\n\t                             ,partition: partition\n\t                             ,foldl: foldl\n\t                             ,foldr: foldr\n\t                             ,map: map\n\t                             ,union: union\n\t                             ,intersect: intersect\n\t                             ,diff: diff\n\t                             ,keys: keys\n\t                             ,values: values\n\t                             ,toList: toList\n\t                             ,fromList: fromList};\n\t};\n\tElm.Native.Json = {};\n\t\n\tElm.Native.Json.make = function(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Json = localRuntime.Native.Json || {};\n\t\tif (localRuntime.Native.Json.values) {\n\t\t\treturn localRuntime.Native.Json.values;\n\t\t}\n\t\n\t\tvar ElmArray = Elm.Native.Array.make(localRuntime);\n\t\tvar List = Elm.Native.List.make(localRuntime);\n\t\tvar Maybe = Elm.Maybe.make(localRuntime);\n\t\tvar Result = Elm.Result.make(localRuntime);\n\t\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\t\n\t\n\t\tfunction crash(expected, actual) {\n\t\t\tthrow new Error(\n\t\t\t\t'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n\t\t\t);\n\t\t}\n\t\n\t\n\t\t// PRIMITIVE VALUES\n\t\n\t\tfunction decodeNull(successValue) {\n\t\t\treturn function(value) {\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn successValue;\n\t\t\t\t}\n\t\t\t\tcrash('null', value);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction decodeString(value) {\n\t\t\tif (typeof value === 'string' || value instanceof String) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tcrash('a String', value);\n\t\t}\n\t\n\t\n\t\tfunction decodeFloat(value) {\n\t\t\tif (typeof value === 'number') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tcrash('a Float', value);\n\t\t}\n\t\n\t\n\t\tfunction decodeInt(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\tcrash('an Int', value);\n\t\t\t}\n\t\n\t\t\tif (value < 2147483647 && value > -2147483647 && (value | 0) === value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tcrash('an Int', value);\n\t\t}\n\t\n\t\n\t\tfunction decodeBool(value) {\n\t\t\tif (typeof value === 'boolean') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tcrash('a Bool', value);\n\t\t}\n\t\n\t\n\t\t// ARRAY\n\t\n\t\tfunction decodeArray(decoder) {\n\t\t\treturn function(value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tvar len = value.length;\n\t\t\t\t\tvar array = new Array(len);\n\t\t\t\t\tfor (var i = len; i--; ) {\n\t\t\t\t\t\tarray[i] = decoder(value[i]);\n\t\t\t\t\t}\n\t\t\t\t\treturn ElmArray.fromJSArray(array);\n\t\t\t\t}\n\t\t\t\tcrash('an Array', value);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// LIST\n\t\n\t\tfunction decodeList(decoder) {\n\t\t\treturn function(value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tvar len = value.length;\n\t\t\t\t\tvar list = List.Nil;\n\t\t\t\t\tfor (var i = len; i--; ) {\n\t\t\t\t\t\tlist = List.Cons( decoder(value[i]), list );\n\t\t\t\t\t}\n\t\t\t\t\treturn list;\n\t\t\t\t}\n\t\t\t\tcrash('a List', value);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// MAYBE\n\t\n\t\tfunction decodeMaybe(decoder) {\n\t\t\treturn function(value) {\n\t\t\t\ttry {\n\t\t\t\t\treturn Maybe.Just(decoder(value));\n\t\t\t\t} catch(e) {\n\t\t\t\t\treturn Maybe.Nothing;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// FIELDS\n\t\n\t\tfunction decodeField(field, decoder) {\n\t\t\treturn function(value) {\n\t\t\t\tvar subValue = value[field];\n\t\t\t\tif (subValue !== undefined) {\n\t\t\t\t\treturn decoder(subValue);\n\t\t\t\t}\n\t\t\t\tcrash(\"an object with field '\" + field + \"'\", value);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// OBJECTS\n\t\n\t\tfunction decodeKeyValuePairs(decoder) {\n\t\t\treturn function(value) {\n\t\t\t\tvar isObject =\n\t\t\t\t\ttypeof value === 'object'\n\t\t\t\t\t\t&& value !== null\n\t\t\t\t\t\t&& !(value instanceof Array);\n\t\n\t\t\t\tif (isObject) {\n\t\t\t\t\tvar keyValuePairs = List.Nil;\n\t\t\t\t\tfor (var key in value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar elmValue = decoder(value[key]);\n\t\t\t\t\t\tvar pair = Utils.Tuple2(key, elmValue);\n\t\t\t\t\t\tkeyValuePairs = List.Cons(pair, keyValuePairs);\n\t\t\t\t\t}\n\t\t\t\t\treturn keyValuePairs;\n\t\t\t\t}\n\t\n\t\t\t\tcrash('an object', value);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject1(f, d1) {\n\t\t\treturn function(value) {\n\t\t\t\treturn f(d1(value));\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject2(f, d1, d2) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A2( f, d1(value), d2(value) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject3(f, d1, d2, d3) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A3( f, d1(value), d2(value), d3(value) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject4(f, d1, d2, d3, d4) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A4( f, d1(value), d2(value), d3(value), d4(value) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject5(f, d1, d2, d3, d4, d5) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A6( f,\n\t\t\t\t\td1(value),\n\t\t\t\t\td2(value),\n\t\t\t\t\td3(value),\n\t\t\t\t\td4(value),\n\t\t\t\t\td5(value),\n\t\t\t\t\td6(value)\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A7( f,\n\t\t\t\t\td1(value),\n\t\t\t\t\td2(value),\n\t\t\t\t\td3(value),\n\t\t\t\t\td4(value),\n\t\t\t\t\td5(value),\n\t\t\t\t\td6(value),\n\t\t\t\t\td7(value)\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n\t\t\treturn function(value) {\n\t\t\t\treturn A8( f,\n\t\t\t\t\td1(value),\n\t\t\t\t\td2(value),\n\t\t\t\t\td3(value),\n\t\t\t\t\td4(value),\n\t\t\t\t\td5(value),\n\t\t\t\t\td6(value),\n\t\t\t\t\td7(value),\n\t\t\t\t\td8(value)\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// TUPLES\n\t\n\t\tfunction decodeTuple1(f, d1) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 1 ) {\n\t\t\t\t\tcrash('a Tuple of length 1', value);\n\t\t\t\t}\n\t\t\t\treturn f( d1(value[0]) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeTuple2(f, d1, d2) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 2 ) {\n\t\t\t\t\tcrash('a Tuple of length 2', value);\n\t\t\t\t}\n\t\t\t\treturn A2( f, d1(value[0]), d2(value[1]) );\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeTuple3(f, d1, d2, d3) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 3 ) {\n\t\t\t\t\tcrash('a Tuple of length 3', value);\n\t\t\t\t}\n\t\t\t\treturn A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction decodeTuple4(f, d1, d2, d3, d4) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 4 ) {\n\t\t\t\t\tcrash('a Tuple of length 4', value);\n\t\t\t\t}\n\t\t\t\treturn A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction decodeTuple5(f, d1, d2, d3, d4, d5) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 5 ) {\n\t\t\t\t\tcrash('a Tuple of length 5', value);\n\t\t\t\t}\n\t\t\t\treturn A5( f,\n\t\t\t\t\td1(value[0]),\n\t\t\t\t\td2(value[1]),\n\t\t\t\t\td3(value[2]),\n\t\t\t\t\td4(value[3]),\n\t\t\t\t\td5(value[4])\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 6 ) {\n\t\t\t\t\tcrash('a Tuple of length 6', value);\n\t\t\t\t}\n\t\t\t\treturn A6( f,\n\t\t\t\t\td1(value[0]),\n\t\t\t\t\td2(value[1]),\n\t\t\t\t\td3(value[2]),\n\t\t\t\t\td4(value[3]),\n\t\t\t\t\td5(value[4]),\n\t\t\t\t\td6(value[5])\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 7 ) {\n\t\t\t\t\tcrash('a Tuple of length 7', value);\n\t\t\t\t}\n\t\t\t\treturn A7( f,\n\t\t\t\t\td1(value[0]),\n\t\t\t\t\td2(value[1]),\n\t\t\t\t\td3(value[2]),\n\t\t\t\t\td4(value[3]),\n\t\t\t\t\td5(value[4]),\n\t\t\t\t\td6(value[5]),\n\t\t\t\t\td7(value[6])\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tfunction decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n\t\t\treturn function(value) {\n\t\t\t\tif ( !(value instanceof Array) || value.length !== 8 ) {\n\t\t\t\t\tcrash('a Tuple of length 8', value);\n\t\t\t\t}\n\t\t\t\treturn A8( f,\n\t\t\t\t\td1(value[0]),\n\t\t\t\t\td2(value[1]),\n\t\t\t\t\td3(value[2]),\n\t\t\t\t\td4(value[3]),\n\t\t\t\t\td5(value[4]),\n\t\t\t\t\td6(value[5]),\n\t\t\t\t\td7(value[6]),\n\t\t\t\t\td8(value[7])\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// CUSTOM DECODERS\n\t\n\t\tfunction decodeValue(value) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tfunction runDecoderValue(decoder, value) {\n\t\t\ttry {\n\t\t\t\treturn Result.Ok(decoder(value));\n\t\t\t} catch(e) {\n\t\t\t\treturn Result.Err(e.message);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction customDecoder(decoder, callback) {\n\t\t\treturn function(value) {\n\t\t\t\tvar result = callback(decoder(value));\n\t\t\t\tif (result.ctor === 'Err') {\n\t\t\t\t\tthrow new Error('custom decoder failed: ' + result._0);\n\t\t\t\t}\n\t\t\t\treturn result._0;\n\t\t\t};\n\t\t}\n\t\n\t\tfunction andThen(decode, callback) {\n\t\t\treturn function(value) {\n\t\t\t\tvar result = decode(value);\n\t\t\t\treturn callback(result)(value);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction fail(msg) {\n\t\t\treturn function(value) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction succeed(successValue) {\n\t\t\treturn function(value) {\n\t\t\t\treturn successValue;\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// ONE OF MANY\n\t\n\t\tfunction oneOf(decoders) {\n\t\t\treturn function(value) {\n\t\t\t\tvar errors = [];\n\t\t\t\tvar temp = decoders;\n\t\t\t\twhile (temp.ctor !== '[]') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn temp._0(value);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\terrors.push(e.message);\n\t\t\t\t\t}\n\t\t\t\t\ttemp = temp._1;\n\t\t\t\t}\n\t\t\t\tthrow new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n\t\t\t};\n\t\t}\n\t\n\t\tfunction get(decoder, value) {\n\t\t\ttry {\n\t\t\t\treturn Result.Ok(decoder(value));\n\t\t\t} catch(e) {\n\t\t\t\treturn Result.Err(e.message);\n\t\t\t}\n\t\t}\n\t\n\t\n\t\t// ENCODE / DECODE\n\t\n\t\tfunction runDecoderString(decoder, string) {\n\t\t\ttry {\n\t\t\t\treturn Result.Ok(decoder(JSON.parse(string)));\n\t\t\t} catch(e) {\n\t\t\t\treturn Result.Err(e.message);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction encode(indentLevel, value) {\n\t\t\treturn JSON.stringify(value, null, indentLevel);\n\t\t}\n\t\n\t\tfunction identity(value) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tfunction encodeObject(keyValuePairs) {\n\t\t\tvar obj = {};\n\t\t\twhile (keyValuePairs.ctor !== '[]') {\n\t\t\t\tvar pair = keyValuePairs._0;\n\t\t\t\tobj[pair._0] = pair._1;\n\t\t\t\tkeyValuePairs = keyValuePairs._1;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\t\n\t\treturn localRuntime.Native.Json.values = {\n\t\t\tencode: F2(encode),\n\t\t\trunDecoderString: F2(runDecoderString),\n\t\t\trunDecoderValue: F2(runDecoderValue),\n\t\n\t\t\tget: F2(get),\n\t\t\toneOf: oneOf,\n\t\n\t\t\tdecodeNull: decodeNull,\n\t\t\tdecodeInt: decodeInt,\n\t\t\tdecodeFloat: decodeFloat,\n\t\t\tdecodeString: decodeString,\n\t\t\tdecodeBool: decodeBool,\n\t\n\t\t\tdecodeMaybe: decodeMaybe,\n\t\n\t\t\tdecodeList: decodeList,\n\t\t\tdecodeArray: decodeArray,\n\t\n\t\t\tdecodeField: F2(decodeField),\n\t\n\t\t\tdecodeObject1: F2(decodeObject1),\n\t\t\tdecodeObject2: F3(decodeObject2),\n\t\t\tdecodeObject3: F4(decodeObject3),\n\t\t\tdecodeObject4: F5(decodeObject4),\n\t\t\tdecodeObject5: F6(decodeObject5),\n\t\t\tdecodeObject6: F7(decodeObject6),\n\t\t\tdecodeObject7: F8(decodeObject7),\n\t\t\tdecodeObject8: F9(decodeObject8),\n\t\t\tdecodeKeyValuePairs: decodeKeyValuePairs,\n\t\n\t\t\tdecodeTuple1: F2(decodeTuple1),\n\t\t\tdecodeTuple2: F3(decodeTuple2),\n\t\t\tdecodeTuple3: F4(decodeTuple3),\n\t\t\tdecodeTuple4: F5(decodeTuple4),\n\t\t\tdecodeTuple5: F6(decodeTuple5),\n\t\t\tdecodeTuple6: F7(decodeTuple6),\n\t\t\tdecodeTuple7: F8(decodeTuple7),\n\t\t\tdecodeTuple8: F9(decodeTuple8),\n\t\n\t\t\tandThen: F2(andThen),\n\t\t\tdecodeValue: decodeValue,\n\t\t\tcustomDecoder: F2(customDecoder),\n\t\t\tfail: fail,\n\t\t\tsucceed: succeed,\n\t\n\t\t\tidentity: identity,\n\t\t\tencodeNull: null,\n\t\t\tencodeArray: ElmArray.toJSArray,\n\t\t\tencodeList: List.toArray,\n\t\t\tencodeObject: encodeObject\n\t\n\t\t};\n\t};\n\t\n\tElm.Json = Elm.Json || {};\n\tElm.Json.Encode = Elm.Json.Encode || {};\n\tElm.Json.Encode.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Json = _elm.Json || {};\n\t   _elm.Json.Encode = _elm.Json.Encode || {};\n\t   if (_elm.Json.Encode.values) return _elm.Json.Encode.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Array = Elm.Array.make(_elm),$Native$Json = Elm.Native.Json.make(_elm);\n\t   var _op = {};\n\t   var list = $Native$Json.encodeList;\n\t   var array = $Native$Json.encodeArray;\n\t   var object = $Native$Json.encodeObject;\n\t   var $null = $Native$Json.encodeNull;\n\t   var bool = $Native$Json.identity;\n\t   var $float = $Native$Json.identity;\n\t   var $int = $Native$Json.identity;\n\t   var string = $Native$Json.identity;\n\t   var encode = $Native$Json.encode;\n\t   var Value = {ctor: \"Value\"};\n\t   return _elm.Json.Encode.values = {_op: _op\n\t                                    ,encode: encode\n\t                                    ,string: string\n\t                                    ,$int: $int\n\t                                    ,$float: $float\n\t                                    ,bool: bool\n\t                                    ,$null: $null\n\t                                    ,list: list\n\t                                    ,array: array\n\t                                    ,object: object};\n\t};\n\tElm.Json = Elm.Json || {};\n\tElm.Json.Decode = Elm.Json.Decode || {};\n\tElm.Json.Decode.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Json = _elm.Json || {};\n\t   _elm.Json.Decode = _elm.Json.Decode || {};\n\t   if (_elm.Json.Decode.values) return _elm.Json.Decode.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Array = Elm.Array.make(_elm),\n\t   $Dict = Elm.Dict.make(_elm),\n\t   $Json$Encode = Elm.Json.Encode.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$Json = Elm.Native.Json.make(_elm),\n\t   $Result = Elm.Result.make(_elm);\n\t   var _op = {};\n\t   var tuple8 = $Native$Json.decodeTuple8;\n\t   var tuple7 = $Native$Json.decodeTuple7;\n\t   var tuple6 = $Native$Json.decodeTuple6;\n\t   var tuple5 = $Native$Json.decodeTuple5;\n\t   var tuple4 = $Native$Json.decodeTuple4;\n\t   var tuple3 = $Native$Json.decodeTuple3;\n\t   var tuple2 = $Native$Json.decodeTuple2;\n\t   var tuple1 = $Native$Json.decodeTuple1;\n\t   var succeed = $Native$Json.succeed;\n\t   var fail = $Native$Json.fail;\n\t   var andThen = $Native$Json.andThen;\n\t   var customDecoder = $Native$Json.customDecoder;\n\t   var decodeValue = $Native$Json.runDecoderValue;\n\t   var value = $Native$Json.decodeValue;\n\t   var maybe = $Native$Json.decodeMaybe;\n\t   var $null = $Native$Json.decodeNull;\n\t   var array = $Native$Json.decodeArray;\n\t   var list = $Native$Json.decodeList;\n\t   var bool = $Native$Json.decodeBool;\n\t   var $int = $Native$Json.decodeInt;\n\t   var $float = $Native$Json.decodeFloat;\n\t   var string = $Native$Json.decodeString;\n\t   var oneOf = $Native$Json.oneOf;\n\t   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n\t   var object8 = $Native$Json.decodeObject8;\n\t   var object7 = $Native$Json.decodeObject7;\n\t   var object6 = $Native$Json.decodeObject6;\n\t   var object5 = $Native$Json.decodeObject5;\n\t   var object4 = $Native$Json.decodeObject4;\n\t   var object3 = $Native$Json.decodeObject3;\n\t   var object2 = $Native$Json.decodeObject2;\n\t   var object1 = $Native$Json.decodeObject1;\n\t   _op[\":=\"] = $Native$Json.decodeField;\n\t   var at = F2(function (fields,decoder) {    return A3($List.foldr,F2(function (x,y) {    return A2(_op[\":=\"],x,y);}),decoder,fields);});\n\t   var decodeString = $Native$Json.runDecoderString;\n\t   var map = $Native$Json.decodeObject1;\n\t   var dict = function (decoder) {    return A2(map,$Dict.fromList,keyValuePairs(decoder));};\n\t   var Decoder = {ctor: \"Decoder\"};\n\t   return _elm.Json.Decode.values = {_op: _op\n\t                                    ,decodeString: decodeString\n\t                                    ,decodeValue: decodeValue\n\t                                    ,string: string\n\t                                    ,$int: $int\n\t                                    ,$float: $float\n\t                                    ,bool: bool\n\t                                    ,$null: $null\n\t                                    ,list: list\n\t                                    ,array: array\n\t                                    ,tuple1: tuple1\n\t                                    ,tuple2: tuple2\n\t                                    ,tuple3: tuple3\n\t                                    ,tuple4: tuple4\n\t                                    ,tuple5: tuple5\n\t                                    ,tuple6: tuple6\n\t                                    ,tuple7: tuple7\n\t                                    ,tuple8: tuple8\n\t                                    ,at: at\n\t                                    ,object1: object1\n\t                                    ,object2: object2\n\t                                    ,object3: object3\n\t                                    ,object4: object4\n\t                                    ,object5: object5\n\t                                    ,object6: object6\n\t                                    ,object7: object7\n\t                                    ,object8: object8\n\t                                    ,keyValuePairs: keyValuePairs\n\t                                    ,dict: dict\n\t                                    ,maybe: maybe\n\t                                    ,oneOf: oneOf\n\t                                    ,map: map\n\t                                    ,fail: fail\n\t                                    ,succeed: succeed\n\t                                    ,andThen: andThen\n\t                                    ,value: value\n\t                                    ,customDecoder: customDecoder};\n\t};\n\tElm.Native = Elm.Native || {};\n\tElm.Native.Window = {};\n\tElm.Native.Window.make = function make(localRuntime) {\n\t\tlocalRuntime.Native = localRuntime.Native || {};\n\t\tlocalRuntime.Native.Window = localRuntime.Native.Window || {};\n\t\tif (localRuntime.Native.Window.values)\n\t\t{\n\t\t\treturn localRuntime.Native.Window.values;\n\t\t}\n\t\n\t\tvar NS = Elm.Native.Signal.make(localRuntime);\n\t\tvar Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\t\n\t\n\t\tfunction getWidth()\n\t\t{\n\t\t\treturn localRuntime.node.clientWidth;\n\t\t}\n\t\n\t\n\t\tfunction getHeight()\n\t\t{\n\t\t\tif (localRuntime.isFullscreen())\n\t\t\t{\n\t\t\t\treturn window.innerHeight;\n\t\t\t}\n\t\t\treturn localRuntime.node.clientHeight;\n\t\t}\n\t\n\t\n\t\tvar dimensions = NS.input('Window.dimensions', Tuple2(getWidth(), getHeight()));\n\t\n\t\n\t\tfunction resizeIfNeeded()\n\t\t{\n\t\t\t// Do not trigger event if the dimensions have not changed.\n\t\t\t// This should be most of the time.\n\t\t\tvar w = getWidth();\n\t\t\tvar h = getHeight();\n\t\t\tif (dimensions.value._0 === w && dimensions.value._1 === h)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tsetTimeout(function() {\n\t\t\t\t// Check again to see if the dimensions have changed.\n\t\t\t\t// It is conceivable that the dimensions have changed\n\t\t\t\t// again while some other event was being processed.\n\t\t\t\tw = getWidth();\n\t\t\t\th = getHeight();\n\t\t\t\tif (dimensions.value._0 === w && dimensions.value._1 === h)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlocalRuntime.notify(dimensions.id, Tuple2(w, h));\n\t\t\t}, 0);\n\t\t}\n\t\n\t\n\t\tlocalRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\t\n\t\n\t\treturn localRuntime.Native.Window.values = {\n\t\t\tdimensions: dimensions,\n\t\t\tresizeIfNeeded: resizeIfNeeded\n\t\t};\n\t};\n\t\n\tElm.Random = Elm.Random || {};\n\tElm.Random.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Random = _elm.Random || {};\n\t   if (_elm.Random.values) return _elm.Random.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$List = Elm.List.make(_elm);\n\t   var _op = {};\n\t   var magicNum8 = 2147483562;\n\t   var range = function (_p0) {    return {ctor: \"_Tuple2\",_0: 0,_1: magicNum8};};\n\t   var magicNum7 = 2137383399;\n\t   var magicNum6 = 2147483563;\n\t   var magicNum5 = 3791;\n\t   var magicNum4 = 40692;\n\t   var magicNum3 = 52774;\n\t   var magicNum2 = 12211;\n\t   var magicNum1 = 53668;\n\t   var magicNum0 = 40014;\n\t   var generate = F2(function (_p1,seed) {    var _p2 = _p1;return _p2._0(seed);});\n\t   var Seed = function (a) {    return {ctor: \"Seed\",_0: a};};\n\t   var State = F2(function (a,b) {    return {ctor: \"State\",_0: a,_1: b};});\n\t   var initState = function (s$) {\n\t      var s = A2($Basics.max,s$,0 - s$);\n\t      var q = s / (magicNum6 - 1) | 0;\n\t      var s2 = A2($Basics._op[\"%\"],q,magicNum7 - 1);\n\t      var s1 = A2($Basics._op[\"%\"],s,magicNum6 - 1);\n\t      return A2(State,s1 + 1,s2 + 1);\n\t   };\n\t   var next = function (_p3) {\n\t      var _p4 = _p3;\n\t      var _p6 = _p4._1;\n\t      var _p5 = _p4._0;\n\t      var k$ = _p6 / magicNum3 | 0;\n\t      var s2$ = magicNum4 * (_p6 - k$ * magicNum3) - k$ * magicNum5;\n\t      var s2$$ = _U.cmp(s2$,0) < 0 ? s2$ + magicNum7 : s2$;\n\t      var k = _p5 / magicNum1 | 0;\n\t      var s1$ = magicNum0 * (_p5 - k * magicNum1) - k * magicNum2;\n\t      var s1$$ = _U.cmp(s1$,0) < 0 ? s1$ + magicNum6 : s1$;\n\t      var z = s1$$ - s2$$;\n\t      var z$ = _U.cmp(z,1) < 0 ? z + magicNum8 : z;\n\t      return {ctor: \"_Tuple2\",_0: z$,_1: A2(State,s1$$,s2$$)};\n\t   };\n\t   var split = function (_p7) {\n\t      var _p8 = _p7;\n\t      var _p11 = _p8._1;\n\t      var _p10 = _p8._0;\n\t      var _p9 = $Basics.snd(next(_p8));\n\t      var t1 = _p9._0;\n\t      var t2 = _p9._1;\n\t      var new_s2 = _U.eq(_p11,1) ? magicNum7 - 1 : _p11 - 1;\n\t      var new_s1 = _U.eq(_p10,magicNum6 - 1) ? 1 : _p10 + 1;\n\t      return {ctor: \"_Tuple2\",_0: A2(State,new_s1,t2),_1: A2(State,t1,new_s2)};\n\t   };\n\t   var initialSeed = function (n) {    return Seed({state: initState(n),next: next,split: split,range: range});};\n\t   var Generator = function (a) {    return {ctor: \"Generator\",_0: a};};\n\t   var andThen = F2(function (_p12,callback) {\n\t      var _p13 = _p12;\n\t      return Generator(function (seed) {\n\t         var _p14 = _p13._0(seed);\n\t         var result = _p14._0;\n\t         var newSeed = _p14._1;\n\t         var _p15 = callback(result);\n\t         var genB = _p15._0;\n\t         return genB(newSeed);\n\t      });\n\t   });\n\t   var map5 = F6(function (func,_p20,_p19,_p18,_p17,_p16) {\n\t      var _p21 = _p20;\n\t      var _p22 = _p19;\n\t      var _p23 = _p18;\n\t      var _p24 = _p17;\n\t      var _p25 = _p16;\n\t      return Generator(function (seed0) {\n\t         var _p26 = _p21._0(seed0);\n\t         var a = _p26._0;\n\t         var seed1 = _p26._1;\n\t         var _p27 = _p22._0(seed1);\n\t         var b = _p27._0;\n\t         var seed2 = _p27._1;\n\t         var _p28 = _p23._0(seed2);\n\t         var c = _p28._0;\n\t         var seed3 = _p28._1;\n\t         var _p29 = _p24._0(seed3);\n\t         var d = _p29._0;\n\t         var seed4 = _p29._1;\n\t         var _p30 = _p25._0(seed4);\n\t         var e = _p30._0;\n\t         var seed5 = _p30._1;\n\t         return {ctor: \"_Tuple2\",_0: A5(func,a,b,c,d,e),_1: seed5};\n\t      });\n\t   });\n\t   var map4 = F5(function (func,_p34,_p33,_p32,_p31) {\n\t      var _p35 = _p34;\n\t      var _p36 = _p33;\n\t      var _p37 = _p32;\n\t      var _p38 = _p31;\n\t      return Generator(function (seed0) {\n\t         var _p39 = _p35._0(seed0);\n\t         var a = _p39._0;\n\t         var seed1 = _p39._1;\n\t         var _p40 = _p36._0(seed1);\n\t         var b = _p40._0;\n\t         var seed2 = _p40._1;\n\t         var _p41 = _p37._0(seed2);\n\t         var c = _p41._0;\n\t         var seed3 = _p41._1;\n\t         var _p42 = _p38._0(seed3);\n\t         var d = _p42._0;\n\t         var seed4 = _p42._1;\n\t         return {ctor: \"_Tuple2\",_0: A4(func,a,b,c,d),_1: seed4};\n\t      });\n\t   });\n\t   var map3 = F4(function (func,_p45,_p44,_p43) {\n\t      var _p46 = _p45;\n\t      var _p47 = _p44;\n\t      var _p48 = _p43;\n\t      return Generator(function (seed0) {\n\t         var _p49 = _p46._0(seed0);\n\t         var a = _p49._0;\n\t         var seed1 = _p49._1;\n\t         var _p50 = _p47._0(seed1);\n\t         var b = _p50._0;\n\t         var seed2 = _p50._1;\n\t         var _p51 = _p48._0(seed2);\n\t         var c = _p51._0;\n\t         var seed3 = _p51._1;\n\t         return {ctor: \"_Tuple2\",_0: A3(func,a,b,c),_1: seed3};\n\t      });\n\t   });\n\t   var map2 = F3(function (func,_p53,_p52) {\n\t      var _p54 = _p53;\n\t      var _p55 = _p52;\n\t      return Generator(function (seed0) {\n\t         var _p56 = _p54._0(seed0);\n\t         var a = _p56._0;\n\t         var seed1 = _p56._1;\n\t         var _p57 = _p55._0(seed1);\n\t         var b = _p57._0;\n\t         var seed2 = _p57._1;\n\t         return {ctor: \"_Tuple2\",_0: A2(func,a,b),_1: seed2};\n\t      });\n\t   });\n\t   var map = F2(function (func,_p58) {\n\t      var _p59 = _p58;\n\t      return Generator(function (seed0) {    var _p60 = _p59._0(seed0);var a = _p60._0;var seed1 = _p60._1;return {ctor: \"_Tuple2\",_0: func(a),_1: seed1};});\n\t   });\n\t   var listHelp = F4(function (list,n,generate,seed) {\n\t      listHelp: while (true) if (_U.cmp(n,1) < 0) return {ctor: \"_Tuple2\",_0: $List.reverse(list),_1: seed}; else {\n\t            var _p61 = generate(seed);\n\t            var value = _p61._0;\n\t            var newSeed = _p61._1;\n\t            var _v19 = A2($List._op[\"::\"],value,list),_v20 = n - 1,_v21 = generate,_v22 = newSeed;\n\t            list = _v19;\n\t            n = _v20;\n\t            generate = _v21;\n\t            seed = _v22;\n\t            continue listHelp;\n\t         }\n\t   });\n\t   var list = F2(function (n,_p62) {    var _p63 = _p62;return Generator(function (seed) {    return A4(listHelp,_U.list([]),n,_p63._0,seed);});});\n\t   var pair = F2(function (genA,genB) {    return A3(map2,F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}),genA,genB);});\n\t   var minInt = -2147483648;\n\t   var maxInt = 2147483647;\n\t   var iLogBase = F2(function (b,i) {    return _U.cmp(i,b) < 0 ? 1 : 1 + A2(iLogBase,b,i / b | 0);});\n\t   var $int = F2(function (a,b) {\n\t      return Generator(function (_p64) {\n\t         var _p65 = _p64;\n\t         var _p70 = _p65._0;\n\t         var base = 2147483561;\n\t         var f = F3(function (n,acc,state) {\n\t            f: while (true) {\n\t               var _p66 = n;\n\t               if (_p66 === 0) {\n\t                     return {ctor: \"_Tuple2\",_0: acc,_1: state};\n\t                  } else {\n\t                     var _p67 = _p70.next(state);\n\t                     var x = _p67._0;\n\t                     var state$ = _p67._1;\n\t                     var _v26 = n - 1,_v27 = x + acc * base,_v28 = state$;\n\t                     n = _v26;\n\t                     acc = _v27;\n\t                     state = _v28;\n\t                     continue f;\n\t                  }\n\t            }\n\t         });\n\t         var _p68 = _U.cmp(a,b) < 0 ? {ctor: \"_Tuple2\",_0: a,_1: b} : {ctor: \"_Tuple2\",_0: b,_1: a};\n\t         var lo = _p68._0;\n\t         var hi = _p68._1;\n\t         var k = hi - lo + 1;\n\t         var n = A2(iLogBase,base,k);\n\t         var _p69 = A3(f,n,1,_p70.state);\n\t         var v = _p69._0;\n\t         var state$ = _p69._1;\n\t         return {ctor: \"_Tuple2\",_0: lo + A2($Basics._op[\"%\"],v,k),_1: Seed(_U.update(_p70,{state: state$}))};\n\t      });\n\t   });\n\t   var $float = F2(function (a,b) {\n\t      return Generator(function (seed) {\n\t         var _p71 = A2(generate,A2($int,minInt,maxInt),seed);\n\t         var number = _p71._0;\n\t         var newSeed = _p71._1;\n\t         var negativeOneToOne = $Basics.toFloat(number) / $Basics.toFloat(maxInt - minInt);\n\t         var _p72 = _U.cmp(a,b) < 0 ? {ctor: \"_Tuple2\",_0: a,_1: b} : {ctor: \"_Tuple2\",_0: b,_1: a};\n\t         var lo = _p72._0;\n\t         var hi = _p72._1;\n\t         var scaled = (lo + hi) / 2 + (hi - lo) * negativeOneToOne;\n\t         return {ctor: \"_Tuple2\",_0: scaled,_1: newSeed};\n\t      });\n\t   });\n\t   var bool = A2(map,F2(function (x,y) {    return _U.eq(x,y);})(1),A2($int,0,1));\n\t   return _elm.Random.values = {_op: _op\n\t                               ,bool: bool\n\t                               ,$int: $int\n\t                               ,$float: $float\n\t                               ,list: list\n\t                               ,pair: pair\n\t                               ,map: map\n\t                               ,map2: map2\n\t                               ,map3: map3\n\t                               ,map4: map4\n\t                               ,map5: map5\n\t                               ,andThen: andThen\n\t                               ,minInt: minInt\n\t                               ,maxInt: maxInt\n\t                               ,generate: generate\n\t                               ,initialSeed: initialSeed};\n\t};\n\tElm.Window = Elm.Window || {};\n\tElm.Window.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Window = _elm.Window || {};\n\t   if (_elm.Window.values) return _elm.Window.values;\n\t   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Native$Window = Elm.Native.Window.make(_elm),$Signal = Elm.Signal.make(_elm);\n\t   var _op = {};\n\t   var dimensions = $Native$Window.dimensions;\n\t   var width = A2($Signal.map,$Basics.fst,dimensions);\n\t   var height = A2($Signal.map,$Basics.snd,dimensions);\n\t   return _elm.Window.values = {_op: _op,dimensions: dimensions,width: width,height: height};\n\t};\n\t(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t\n\t},{}],2:[function(require,module,exports){\n\t(function (global){\n\tvar topLevel = typeof global !== 'undefined' ? global :\n\t    typeof window !== 'undefined' ? window : {}\n\tvar minDoc = require('min-document');\n\t\n\tif (typeof document !== 'undefined') {\n\t    module.exports = document;\n\t} else {\n\t    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t\n\t    module.exports = doccy;\n\t}\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"min-document\":1}],3:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = function isObject(x) {\n\t\treturn typeof x === \"object\" && x !== null;\n\t};\n\t\n\t},{}],4:[function(require,module,exports){\n\tvar nativeIsArray = Array.isArray\n\tvar toString = Object.prototype.toString\n\t\n\tmodule.exports = nativeIsArray || isArray\n\t\n\tfunction isArray(obj) {\n\t    return toString.call(obj) === \"[object Array]\"\n\t}\n\t\n\t},{}],5:[function(require,module,exports){\n\tvar isObject = require(\"is-object\")\n\tvar isHook = require(\"../vnode/is-vhook.js\")\n\t\n\tmodule.exports = applyProperties\n\t\n\tfunction applyProperties(node, props, previous) {\n\t    for (var propName in props) {\n\t        var propValue = props[propName]\n\t\n\t        if (propValue === undefined) {\n\t            removeProperty(node, propName, propValue, previous);\n\t        } else if (isHook(propValue)) {\n\t            removeProperty(node, propName, propValue, previous)\n\t            if (propValue.hook) {\n\t                propValue.hook(node,\n\t                    propName,\n\t                    previous ? previous[propName] : undefined)\n\t            }\n\t        } else {\n\t            if (isObject(propValue)) {\n\t                patchObject(node, props, previous, propName, propValue);\n\t            } else {\n\t                node[propName] = propValue\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\tfunction removeProperty(node, propName, propValue, previous) {\n\t    if (previous) {\n\t        var previousValue = previous[propName]\n\t\n\t        if (!isHook(previousValue)) {\n\t            if (propName === \"attributes\") {\n\t                for (var attrName in previousValue) {\n\t                    node.removeAttribute(attrName)\n\t                }\n\t            } else if (propName === \"style\") {\n\t                for (var i in previousValue) {\n\t                    node.style[i] = \"\"\n\t                }\n\t            } else if (typeof previousValue === \"string\") {\n\t                node[propName] = \"\"\n\t            } else {\n\t                node[propName] = null\n\t            }\n\t        } else if (previousValue.unhook) {\n\t            previousValue.unhook(node, propName, propValue)\n\t        }\n\t    }\n\t}\n\t\n\tfunction patchObject(node, props, previous, propName, propValue) {\n\t    var previousValue = previous ? previous[propName] : undefined\n\t\n\t    // Set attributes\n\t    if (propName === \"attributes\") {\n\t        for (var attrName in propValue) {\n\t            var attrValue = propValue[attrName]\n\t\n\t            if (attrValue === undefined) {\n\t                node.removeAttribute(attrName)\n\t            } else {\n\t                node.setAttribute(attrName, attrValue)\n\t            }\n\t        }\n\t\n\t        return\n\t    }\n\t\n\t    if(previousValue && isObject(previousValue) &&\n\t        getPrototype(previousValue) !== getPrototype(propValue)) {\n\t        node[propName] = propValue\n\t        return\n\t    }\n\t\n\t    if (!isObject(node[propName])) {\n\t        node[propName] = {}\n\t    }\n\t\n\t    var replacer = propName === \"style\" ? \"\" : undefined\n\t\n\t    for (var k in propValue) {\n\t        var value = propValue[k]\n\t        node[propName][k] = (value === undefined) ? replacer : value\n\t    }\n\t}\n\t\n\tfunction getPrototype(value) {\n\t    if (Object.getPrototypeOf) {\n\t        return Object.getPrototypeOf(value)\n\t    } else if (value.__proto__) {\n\t        return value.__proto__\n\t    } else if (value.constructor) {\n\t        return value.constructor.prototype\n\t    }\n\t}\n\t\n\t},{\"../vnode/is-vhook.js\":13,\"is-object\":3}],6:[function(require,module,exports){\n\tvar document = require(\"global/document\")\n\t\n\tvar applyProperties = require(\"./apply-properties\")\n\t\n\tvar isVNode = require(\"../vnode/is-vnode.js\")\n\tvar isVText = require(\"../vnode/is-vtext.js\")\n\tvar isWidget = require(\"../vnode/is-widget.js\")\n\tvar handleThunk = require(\"../vnode/handle-thunk.js\")\n\t\n\tmodule.exports = createElement\n\t\n\tfunction createElement(vnode, opts) {\n\t    var doc = opts ? opts.document || document : document\n\t    var warn = opts ? opts.warn : null\n\t\n\t    vnode = handleThunk(vnode).a\n\t\n\t    if (isWidget(vnode)) {\n\t        return vnode.init()\n\t    } else if (isVText(vnode)) {\n\t        return doc.createTextNode(vnode.text)\n\t    } else if (!isVNode(vnode)) {\n\t        if (warn) {\n\t            warn(\"Item is not a valid virtual dom node\", vnode)\n\t        }\n\t        return null\n\t    }\n\t\n\t    var node = (vnode.namespace === null) ?\n\t        doc.createElement(vnode.tagName) :\n\t        doc.createElementNS(vnode.namespace, vnode.tagName)\n\t\n\t    var props = vnode.properties\n\t    applyProperties(node, props)\n\t\n\t    var children = vnode.children\n\t\n\t    for (var i = 0; i < children.length; i++) {\n\t        var childNode = createElement(children[i], opts)\n\t        if (childNode) {\n\t            node.appendChild(childNode)\n\t        }\n\t    }\n\t\n\t    return node\n\t}\n\t\n\t},{\"../vnode/handle-thunk.js\":11,\"../vnode/is-vnode.js\":14,\"../vnode/is-vtext.js\":15,\"../vnode/is-widget.js\":16,\"./apply-properties\":5,\"global/document\":2}],7:[function(require,module,exports){\n\t// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n\t// We don't want to read all of the DOM nodes in the tree so we use\n\t// the in-order tree indexing to eliminate recursion down certain branches.\n\t// We only recurse into a DOM node if we know that it contains a child of\n\t// interest.\n\t\n\tvar noChild = {}\n\t\n\tmodule.exports = domIndex\n\t\n\tfunction domIndex(rootNode, tree, indices, nodes) {\n\t    if (!indices || indices.length === 0) {\n\t        return {}\n\t    } else {\n\t        indices.sort(ascending)\n\t        return recurse(rootNode, tree, indices, nodes, 0)\n\t    }\n\t}\n\t\n\tfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n\t    nodes = nodes || {}\n\t\n\t\n\t    if (rootNode) {\n\t        if (indexInRange(indices, rootIndex, rootIndex)) {\n\t            nodes[rootIndex] = rootNode\n\t        }\n\t\n\t        var vChildren = tree.children\n\t\n\t        if (vChildren) {\n\t\n\t            var childNodes = rootNode.childNodes\n\t\n\t            for (var i = 0; i < tree.children.length; i++) {\n\t                rootIndex += 1\n\t\n\t                var vChild = vChildren[i] || noChild\n\t                var nextIndex = rootIndex + (vChild.count || 0)\n\t\n\t                // skip recursion down the tree if there are no nodes down here\n\t                if (indexInRange(indices, rootIndex, nextIndex)) {\n\t                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n\t                }\n\t\n\t                rootIndex = nextIndex\n\t            }\n\t        }\n\t    }\n\t\n\t    return nodes\n\t}\n\t\n\t// Binary search for an index in the interval [left, right]\n\tfunction indexInRange(indices, left, right) {\n\t    if (indices.length === 0) {\n\t        return false\n\t    }\n\t\n\t    var minIndex = 0\n\t    var maxIndex = indices.length - 1\n\t    var currentIndex\n\t    var currentItem\n\t\n\t    while (minIndex <= maxIndex) {\n\t        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n\t        currentItem = indices[currentIndex]\n\t\n\t        if (minIndex === maxIndex) {\n\t            return currentItem >= left && currentItem <= right\n\t        } else if (currentItem < left) {\n\t            minIndex = currentIndex + 1\n\t        } else  if (currentItem > right) {\n\t            maxIndex = currentIndex - 1\n\t        } else {\n\t            return true\n\t        }\n\t    }\n\t\n\t    return false;\n\t}\n\t\n\tfunction ascending(a, b) {\n\t    return a > b ? 1 : -1\n\t}\n\t\n\t},{}],8:[function(require,module,exports){\n\tvar applyProperties = require(\"./apply-properties\")\n\t\n\tvar isWidget = require(\"../vnode/is-widget.js\")\n\tvar VPatch = require(\"../vnode/vpatch.js\")\n\t\n\tvar render = require(\"./create-element\")\n\tvar updateWidget = require(\"./update-widget\")\n\t\n\tmodule.exports = applyPatch\n\t\n\tfunction applyPatch(vpatch, domNode, renderOptions) {\n\t    var type = vpatch.type\n\t    var vNode = vpatch.vNode\n\t    var patch = vpatch.patch\n\t\n\t    switch (type) {\n\t        case VPatch.REMOVE:\n\t            return removeNode(domNode, vNode)\n\t        case VPatch.INSERT:\n\t            return insertNode(domNode, patch, renderOptions)\n\t        case VPatch.VTEXT:\n\t            return stringPatch(domNode, vNode, patch, renderOptions)\n\t        case VPatch.WIDGET:\n\t            return widgetPatch(domNode, vNode, patch, renderOptions)\n\t        case VPatch.VNODE:\n\t            return vNodePatch(domNode, vNode, patch, renderOptions)\n\t        case VPatch.ORDER:\n\t            reorderChildren(domNode, patch)\n\t            return domNode\n\t        case VPatch.PROPS:\n\t            applyProperties(domNode, patch, vNode.properties)\n\t            return domNode\n\t        case VPatch.THUNK:\n\t            return replaceRoot(domNode,\n\t                renderOptions.patch(domNode, patch, renderOptions))\n\t        default:\n\t            return domNode\n\t    }\n\t}\n\t\n\tfunction removeNode(domNode, vNode) {\n\t    var parentNode = domNode.parentNode\n\t\n\t    if (parentNode) {\n\t        parentNode.removeChild(domNode)\n\t    }\n\t\n\t    destroyWidget(domNode, vNode);\n\t\n\t    return null\n\t}\n\t\n\tfunction insertNode(parentNode, vNode, renderOptions) {\n\t    var newNode = render(vNode, renderOptions)\n\t\n\t    if (parentNode) {\n\t        parentNode.appendChild(newNode)\n\t    }\n\t\n\t    return parentNode\n\t}\n\t\n\tfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n\t    var newNode\n\t\n\t    if (domNode.nodeType === 3) {\n\t        domNode.replaceData(0, domNode.length, vText.text)\n\t        newNode = domNode\n\t    } else {\n\t        var parentNode = domNode.parentNode\n\t        newNode = render(vText, renderOptions)\n\t\n\t        if (parentNode && newNode !== domNode) {\n\t            parentNode.replaceChild(newNode, domNode)\n\t        }\n\t    }\n\t\n\t    return newNode\n\t}\n\t\n\tfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n\t    var updating = updateWidget(leftVNode, widget)\n\t    var newNode\n\t\n\t    if (updating) {\n\t        newNode = widget.update(leftVNode, domNode) || domNode\n\t    } else {\n\t        newNode = render(widget, renderOptions)\n\t    }\n\t\n\t    var parentNode = domNode.parentNode\n\t\n\t    if (parentNode && newNode !== domNode) {\n\t        parentNode.replaceChild(newNode, domNode)\n\t    }\n\t\n\t    if (!updating) {\n\t        destroyWidget(domNode, leftVNode)\n\t    }\n\t\n\t    return newNode\n\t}\n\t\n\tfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n\t    var parentNode = domNode.parentNode\n\t    var newNode = render(vNode, renderOptions)\n\t\n\t    if (parentNode && newNode !== domNode) {\n\t        parentNode.replaceChild(newNode, domNode)\n\t    }\n\t\n\t    return newNode\n\t}\n\t\n\tfunction destroyWidget(domNode, w) {\n\t    if (typeof w.destroy === \"function\" && isWidget(w)) {\n\t        w.destroy(domNode)\n\t    }\n\t}\n\t\n\tfunction reorderChildren(domNode, moves) {\n\t    var childNodes = domNode.childNodes\n\t    var keyMap = {}\n\t    var node\n\t    var remove\n\t    var insert\n\t\n\t    for (var i = 0; i < moves.removes.length; i++) {\n\t        remove = moves.removes[i]\n\t        node = childNodes[remove.from]\n\t        if (remove.key) {\n\t            keyMap[remove.key] = node\n\t        }\n\t        domNode.removeChild(node)\n\t    }\n\t\n\t    var length = childNodes.length\n\t    for (var j = 0; j < moves.inserts.length; j++) {\n\t        insert = moves.inserts[j]\n\t        node = keyMap[insert.key]\n\t        // this is the weirdest bug i've ever seen in webkit\n\t        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n\t    }\n\t}\n\t\n\tfunction replaceRoot(oldRoot, newRoot) {\n\t    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n\t        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n\t    }\n\t\n\t    return newRoot;\n\t}\n\t\n\t},{\"../vnode/is-widget.js\":16,\"../vnode/vpatch.js\":19,\"./apply-properties\":5,\"./create-element\":6,\"./update-widget\":10}],9:[function(require,module,exports){\n\tvar document = require(\"global/document\")\n\tvar isArray = require(\"x-is-array\")\n\t\n\tvar domIndex = require(\"./dom-index\")\n\tvar patchOp = require(\"./patch-op\")\n\tmodule.exports = patch\n\t\n\tfunction patch(rootNode, patches) {\n\t    return patchRecursive(rootNode, patches)\n\t}\n\t\n\tfunction patchRecursive(rootNode, patches, renderOptions) {\n\t    var indices = patchIndices(patches)\n\t\n\t    if (indices.length === 0) {\n\t        return rootNode\n\t    }\n\t\n\t    var index = domIndex(rootNode, patches.a, indices)\n\t    var ownerDocument = rootNode.ownerDocument\n\t\n\t    if (!renderOptions) {\n\t        renderOptions = { patch: patchRecursive }\n\t        if (ownerDocument !== document) {\n\t            renderOptions.document = ownerDocument\n\t        }\n\t    }\n\t\n\t    for (var i = 0; i < indices.length; i++) {\n\t        var nodeIndex = indices[i]\n\t        rootNode = applyPatch(rootNode,\n\t            index[nodeIndex],\n\t            patches[nodeIndex],\n\t            renderOptions)\n\t    }\n\t\n\t    return rootNode\n\t}\n\t\n\tfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n\t    if (!domNode) {\n\t        return rootNode\n\t    }\n\t\n\t    var newNode\n\t\n\t    if (isArray(patchList)) {\n\t        for (var i = 0; i < patchList.length; i++) {\n\t            newNode = patchOp(patchList[i], domNode, renderOptions)\n\t\n\t            if (domNode === rootNode) {\n\t                rootNode = newNode\n\t            }\n\t        }\n\t    } else {\n\t        newNode = patchOp(patchList, domNode, renderOptions)\n\t\n\t        if (domNode === rootNode) {\n\t            rootNode = newNode\n\t        }\n\t    }\n\t\n\t    return rootNode\n\t}\n\t\n\tfunction patchIndices(patches) {\n\t    var indices = []\n\t\n\t    for (var key in patches) {\n\t        if (key !== \"a\") {\n\t            indices.push(Number(key))\n\t        }\n\t    }\n\t\n\t    return indices\n\t}\n\t\n\t},{\"./dom-index\":7,\"./patch-op\":8,\"global/document\":2,\"x-is-array\":4}],10:[function(require,module,exports){\n\tvar isWidget = require(\"../vnode/is-widget.js\")\n\t\n\tmodule.exports = updateWidget\n\t\n\tfunction updateWidget(a, b) {\n\t    if (isWidget(a) && isWidget(b)) {\n\t        if (\"name\" in a && \"name\" in b) {\n\t            return a.id === b.id\n\t        } else {\n\t            return a.init === b.init\n\t        }\n\t    }\n\t\n\t    return false\n\t}\n\t\n\t},{\"../vnode/is-widget.js\":16}],11:[function(require,module,exports){\n\tvar isVNode = require(\"./is-vnode\")\n\tvar isVText = require(\"./is-vtext\")\n\tvar isWidget = require(\"./is-widget\")\n\tvar isThunk = require(\"./is-thunk\")\n\t\n\tmodule.exports = handleThunk\n\t\n\tfunction handleThunk(a, b) {\n\t    var renderedA = a\n\t    var renderedB = b\n\t\n\t    if (isThunk(b)) {\n\t        renderedB = renderThunk(b, a)\n\t    }\n\t\n\t    if (isThunk(a)) {\n\t        renderedA = renderThunk(a, null)\n\t    }\n\t\n\t    return {\n\t        a: renderedA,\n\t        b: renderedB\n\t    }\n\t}\n\t\n\tfunction renderThunk(thunk, previous) {\n\t    var renderedThunk = thunk.vnode\n\t\n\t    if (!renderedThunk) {\n\t        renderedThunk = thunk.vnode = thunk.render(previous)\n\t    }\n\t\n\t    if (!(isVNode(renderedThunk) ||\n\t            isVText(renderedThunk) ||\n\t            isWidget(renderedThunk))) {\n\t        throw new Error(\"thunk did not return a valid node\");\n\t    }\n\t\n\t    return renderedThunk\n\t}\n\t\n\t},{\"./is-thunk\":12,\"./is-vnode\":14,\"./is-vtext\":15,\"./is-widget\":16}],12:[function(require,module,exports){\n\tmodule.exports = isThunk\r\n\t\r\n\tfunction isThunk(t) {\r\n\t    return t && t.type === \"Thunk\"\r\n\t}\r\n\t\n\t},{}],13:[function(require,module,exports){\n\tmodule.exports = isHook\n\t\n\tfunction isHook(hook) {\n\t    return hook &&\n\t      (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") ||\n\t       typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"))\n\t}\n\t\n\t},{}],14:[function(require,module,exports){\n\tvar version = require(\"./version\")\n\t\n\tmodule.exports = isVirtualNode\n\t\n\tfunction isVirtualNode(x) {\n\t    return x && x.type === \"VirtualNode\" && x.version === version\n\t}\n\t\n\t},{\"./version\":17}],15:[function(require,module,exports){\n\tvar version = require(\"./version\")\n\t\n\tmodule.exports = isVirtualText\n\t\n\tfunction isVirtualText(x) {\n\t    return x && x.type === \"VirtualText\" && x.version === version\n\t}\n\t\n\t},{\"./version\":17}],16:[function(require,module,exports){\n\tmodule.exports = isWidget\n\t\n\tfunction isWidget(w) {\n\t    return w && w.type === \"Widget\"\n\t}\n\t\n\t},{}],17:[function(require,module,exports){\n\tmodule.exports = \"2\"\n\t\n\t},{}],18:[function(require,module,exports){\n\tvar version = require(\"./version\")\n\tvar isVNode = require(\"./is-vnode\")\n\tvar isWidget = require(\"./is-widget\")\n\tvar isThunk = require(\"./is-thunk\")\n\tvar isVHook = require(\"./is-vhook\")\n\t\n\tmodule.exports = VirtualNode\n\t\n\tvar noProperties = {}\n\tvar noChildren = []\n\t\n\tfunction VirtualNode(tagName, properties, children, key, namespace) {\n\t    this.tagName = tagName\n\t    this.properties = properties || noProperties\n\t    this.children = children || noChildren\n\t    this.key = key != null ? String(key) : undefined\n\t    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\t\n\t    var count = (children && children.length) || 0\n\t    var descendants = 0\n\t    var hasWidgets = false\n\t    var hasThunks = false\n\t    var descendantHooks = false\n\t    var hooks\n\t\n\t    for (var propName in properties) {\n\t        if (properties.hasOwnProperty(propName)) {\n\t            var property = properties[propName]\n\t            if (isVHook(property) && property.unhook) {\n\t                if (!hooks) {\n\t                    hooks = {}\n\t                }\n\t\n\t                hooks[propName] = property\n\t            }\n\t        }\n\t    }\n\t\n\t    for (var i = 0; i < count; i++) {\n\t        var child = children[i]\n\t        if (isVNode(child)) {\n\t            descendants += child.count || 0\n\t\n\t            if (!hasWidgets && child.hasWidgets) {\n\t                hasWidgets = true\n\t            }\n\t\n\t            if (!hasThunks && child.hasThunks) {\n\t                hasThunks = true\n\t            }\n\t\n\t            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n\t                descendantHooks = true\n\t            }\n\t        } else if (!hasWidgets && isWidget(child)) {\n\t            if (typeof child.destroy === \"function\") {\n\t                hasWidgets = true\n\t            }\n\t        } else if (!hasThunks && isThunk(child)) {\n\t            hasThunks = true;\n\t        }\n\t    }\n\t\n\t    this.count = count + descendants\n\t    this.hasWidgets = hasWidgets\n\t    this.hasThunks = hasThunks\n\t    this.hooks = hooks\n\t    this.descendantHooks = descendantHooks\n\t}\n\t\n\tVirtualNode.prototype.version = version\n\tVirtualNode.prototype.type = \"VirtualNode\"\n\t\n\t},{\"./is-thunk\":12,\"./is-vhook\":13,\"./is-vnode\":14,\"./is-widget\":16,\"./version\":17}],19:[function(require,module,exports){\n\tvar version = require(\"./version\")\n\t\n\tVirtualPatch.NONE = 0\n\tVirtualPatch.VTEXT = 1\n\tVirtualPatch.VNODE = 2\n\tVirtualPatch.WIDGET = 3\n\tVirtualPatch.PROPS = 4\n\tVirtualPatch.ORDER = 5\n\tVirtualPatch.INSERT = 6\n\tVirtualPatch.REMOVE = 7\n\tVirtualPatch.THUNK = 8\n\t\n\tmodule.exports = VirtualPatch\n\t\n\tfunction VirtualPatch(type, vNode, patch) {\n\t    this.type = Number(type)\n\t    this.vNode = vNode\n\t    this.patch = patch\n\t}\n\t\n\tVirtualPatch.prototype.version = version\n\tVirtualPatch.prototype.type = \"VirtualPatch\"\n\t\n\t},{\"./version\":17}],20:[function(require,module,exports){\n\tvar version = require(\"./version\")\n\t\n\tmodule.exports = VirtualText\n\t\n\tfunction VirtualText(text) {\n\t    this.text = String(text)\n\t}\n\t\n\tVirtualText.prototype.version = version\n\tVirtualText.prototype.type = \"VirtualText\"\n\t\n\t},{\"./version\":17}],21:[function(require,module,exports){\n\tvar isObject = require(\"is-object\")\n\tvar isHook = require(\"../vnode/is-vhook\")\n\t\n\tmodule.exports = diffProps\n\t\n\tfunction diffProps(a, b) {\n\t    var diff\n\t\n\t    for (var aKey in a) {\n\t        if (!(aKey in b)) {\n\t            diff = diff || {}\n\t            diff[aKey] = undefined\n\t        }\n\t\n\t        var aValue = a[aKey]\n\t        var bValue = b[aKey]\n\t\n\t        if (aValue === bValue) {\n\t            continue\n\t        } else if (isObject(aValue) && isObject(bValue)) {\n\t            if (getPrototype(bValue) !== getPrototype(aValue)) {\n\t                diff = diff || {}\n\t                diff[aKey] = bValue\n\t            } else if (isHook(bValue)) {\n\t                 diff = diff || {}\n\t                 diff[aKey] = bValue\n\t            } else {\n\t                var objectDiff = diffProps(aValue, bValue)\n\t                if (objectDiff) {\n\t                    diff = diff || {}\n\t                    diff[aKey] = objectDiff\n\t                }\n\t            }\n\t        } else {\n\t            diff = diff || {}\n\t            diff[aKey] = bValue\n\t        }\n\t    }\n\t\n\t    for (var bKey in b) {\n\t        if (!(bKey in a)) {\n\t            diff = diff || {}\n\t            diff[bKey] = b[bKey]\n\t        }\n\t    }\n\t\n\t    return diff\n\t}\n\t\n\tfunction getPrototype(value) {\n\t  if (Object.getPrototypeOf) {\n\t    return Object.getPrototypeOf(value)\n\t  } else if (value.__proto__) {\n\t    return value.__proto__\n\t  } else if (value.constructor) {\n\t    return value.constructor.prototype\n\t  }\n\t}\n\t\n\t},{\"../vnode/is-vhook\":13,\"is-object\":3}],22:[function(require,module,exports){\n\tvar isArray = require(\"x-is-array\")\n\t\n\tvar VPatch = require(\"../vnode/vpatch\")\n\tvar isVNode = require(\"../vnode/is-vnode\")\n\tvar isVText = require(\"../vnode/is-vtext\")\n\tvar isWidget = require(\"../vnode/is-widget\")\n\tvar isThunk = require(\"../vnode/is-thunk\")\n\tvar handleThunk = require(\"../vnode/handle-thunk\")\n\t\n\tvar diffProps = require(\"./diff-props\")\n\t\n\tmodule.exports = diff\n\t\n\tfunction diff(a, b) {\n\t    var patch = { a: a }\n\t    walk(a, b, patch, 0)\n\t    return patch\n\t}\n\t\n\tfunction walk(a, b, patch, index) {\n\t    if (a === b) {\n\t        return\n\t    }\n\t\n\t    var apply = patch[index]\n\t    var applyClear = false\n\t\n\t    if (isThunk(a) || isThunk(b)) {\n\t        thunks(a, b, patch, index)\n\t    } else if (b == null) {\n\t\n\t        // If a is a widget we will add a remove patch for it\n\t        // Otherwise any child widgets/hooks must be destroyed.\n\t        // This prevents adding two remove patches for a widget.\n\t        if (!isWidget(a)) {\n\t            clearState(a, patch, index)\n\t            apply = patch[index]\n\t        }\n\t\n\t        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n\t    } else if (isVNode(b)) {\n\t        if (isVNode(a)) {\n\t            if (a.tagName === b.tagName &&\n\t                a.namespace === b.namespace &&\n\t                a.key === b.key) {\n\t                var propsPatch = diffProps(a.properties, b.properties)\n\t                if (propsPatch) {\n\t                    apply = appendPatch(apply,\n\t                        new VPatch(VPatch.PROPS, a, propsPatch))\n\t                }\n\t                apply = diffChildren(a, b, patch, apply, index)\n\t            } else {\n\t                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n\t                applyClear = true\n\t            }\n\t        } else {\n\t            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n\t            applyClear = true\n\t        }\n\t    } else if (isVText(b)) {\n\t        if (!isVText(a)) {\n\t            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n\t            applyClear = true\n\t        } else if (a.text !== b.text) {\n\t            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n\t        }\n\t    } else if (isWidget(b)) {\n\t        if (!isWidget(a)) {\n\t            applyClear = true\n\t        }\n\t\n\t        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n\t    }\n\t\n\t    if (apply) {\n\t        patch[index] = apply\n\t    }\n\t\n\t    if (applyClear) {\n\t        clearState(a, patch, index)\n\t    }\n\t}\n\t\n\tfunction diffChildren(a, b, patch, apply, index) {\n\t    var aChildren = a.children\n\t    var orderedSet = reorder(aChildren, b.children)\n\t    var bChildren = orderedSet.children\n\t\n\t    var aLen = aChildren.length\n\t    var bLen = bChildren.length\n\t    var len = aLen > bLen ? aLen : bLen\n\t\n\t    for (var i = 0; i < len; i++) {\n\t        var leftNode = aChildren[i]\n\t        var rightNode = bChildren[i]\n\t        index += 1\n\t\n\t        if (!leftNode) {\n\t            if (rightNode) {\n\t                // Excess nodes in b need to be added\n\t                apply = appendPatch(apply,\n\t                    new VPatch(VPatch.INSERT, null, rightNode))\n\t            }\n\t        } else {\n\t            walk(leftNode, rightNode, patch, index)\n\t        }\n\t\n\t        if (isVNode(leftNode) && leftNode.count) {\n\t            index += leftNode.count\n\t        }\n\t    }\n\t\n\t    if (orderedSet.moves) {\n\t        // Reorder nodes last\n\t        apply = appendPatch(apply, new VPatch(\n\t            VPatch.ORDER,\n\t            a,\n\t            orderedSet.moves\n\t        ))\n\t    }\n\t\n\t    return apply\n\t}\n\t\n\tfunction clearState(vNode, patch, index) {\n\t    // TODO: Make this a single walk, not two\n\t    unhook(vNode, patch, index)\n\t    destroyWidgets(vNode, patch, index)\n\t}\n\t\n\t// Patch records for all destroyed widgets must be added because we need\n\t// a DOM node reference for the destroy function\n\tfunction destroyWidgets(vNode, patch, index) {\n\t    if (isWidget(vNode)) {\n\t        if (typeof vNode.destroy === \"function\") {\n\t            patch[index] = appendPatch(\n\t                patch[index],\n\t                new VPatch(VPatch.REMOVE, vNode, null)\n\t            )\n\t        }\n\t    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n\t        var children = vNode.children\n\t        var len = children.length\n\t        for (var i = 0; i < len; i++) {\n\t            var child = children[i]\n\t            index += 1\n\t\n\t            destroyWidgets(child, patch, index)\n\t\n\t            if (isVNode(child) && child.count) {\n\t                index += child.count\n\t            }\n\t        }\n\t    } else if (isThunk(vNode)) {\n\t        thunks(vNode, null, patch, index)\n\t    }\n\t}\n\t\n\t// Create a sub-patch for thunks\n\tfunction thunks(a, b, patch, index) {\n\t    var nodes = handleThunk(a, b)\n\t    var thunkPatch = diff(nodes.a, nodes.b)\n\t    if (hasPatches(thunkPatch)) {\n\t        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n\t    }\n\t}\n\t\n\tfunction hasPatches(patch) {\n\t    for (var index in patch) {\n\t        if (index !== \"a\") {\n\t            return true\n\t        }\n\t    }\n\t\n\t    return false\n\t}\n\t\n\t// Execute hooks when two nodes are identical\n\tfunction unhook(vNode, patch, index) {\n\t    if (isVNode(vNode)) {\n\t        if (vNode.hooks) {\n\t            patch[index] = appendPatch(\n\t                patch[index],\n\t                new VPatch(\n\t                    VPatch.PROPS,\n\t                    vNode,\n\t                    undefinedKeys(vNode.hooks)\n\t                )\n\t            )\n\t        }\n\t\n\t        if (vNode.descendantHooks || vNode.hasThunks) {\n\t            var children = vNode.children\n\t            var len = children.length\n\t            for (var i = 0; i < len; i++) {\n\t                var child = children[i]\n\t                index += 1\n\t\n\t                unhook(child, patch, index)\n\t\n\t                if (isVNode(child) && child.count) {\n\t                    index += child.count\n\t                }\n\t            }\n\t        }\n\t    } else if (isThunk(vNode)) {\n\t        thunks(vNode, null, patch, index)\n\t    }\n\t}\n\t\n\tfunction undefinedKeys(obj) {\n\t    var result = {}\n\t\n\t    for (var key in obj) {\n\t        result[key] = undefined\n\t    }\n\t\n\t    return result\n\t}\n\t\n\t// List diff, naive left to right reordering\n\tfunction reorder(aChildren, bChildren) {\n\t    // O(M) time, O(M) memory\n\t    var bChildIndex = keyIndex(bChildren)\n\t    var bKeys = bChildIndex.keys\n\t    var bFree = bChildIndex.free\n\t\n\t    if (bFree.length === bChildren.length) {\n\t        return {\n\t            children: bChildren,\n\t            moves: null\n\t        }\n\t    }\n\t\n\t    // O(N) time, O(N) memory\n\t    var aChildIndex = keyIndex(aChildren)\n\t    var aKeys = aChildIndex.keys\n\t    var aFree = aChildIndex.free\n\t\n\t    if (aFree.length === aChildren.length) {\n\t        return {\n\t            children: bChildren,\n\t            moves: null\n\t        }\n\t    }\n\t\n\t    // O(MAX(N, M)) memory\n\t    var newChildren = []\n\t\n\t    var freeIndex = 0\n\t    var freeCount = bFree.length\n\t    var deletedItems = 0\n\t\n\t    // Iterate through a and match a node in b\n\t    // O(N) time,\n\t    for (var i = 0 ; i < aChildren.length; i++) {\n\t        var aItem = aChildren[i]\n\t        var itemIndex\n\t\n\t        if (aItem.key) {\n\t            if (bKeys.hasOwnProperty(aItem.key)) {\n\t                // Match up the old keys\n\t                itemIndex = bKeys[aItem.key]\n\t                newChildren.push(bChildren[itemIndex])\n\t\n\t            } else {\n\t                // Remove old keyed items\n\t                itemIndex = i - deletedItems++\n\t                newChildren.push(null)\n\t            }\n\t        } else {\n\t            // Match the item in a with the next free item in b\n\t            if (freeIndex < freeCount) {\n\t                itemIndex = bFree[freeIndex++]\n\t                newChildren.push(bChildren[itemIndex])\n\t            } else {\n\t                // There are no free items in b to match with\n\t                // the free items in a, so the extra free nodes\n\t                // are deleted.\n\t                itemIndex = i - deletedItems++\n\t                newChildren.push(null)\n\t            }\n\t        }\n\t    }\n\t\n\t    var lastFreeIndex = freeIndex >= bFree.length ?\n\t        bChildren.length :\n\t        bFree[freeIndex]\n\t\n\t    // Iterate through b and append any new keys\n\t    // O(M) time\n\t    for (var j = 0; j < bChildren.length; j++) {\n\t        var newItem = bChildren[j]\n\t\n\t        if (newItem.key) {\n\t            if (!aKeys.hasOwnProperty(newItem.key)) {\n\t                // Add any new keyed items\n\t                // We are adding new items to the end and then sorting them\n\t                // in place. In future we should insert new items in place.\n\t                newChildren.push(newItem)\n\t            }\n\t        } else if (j >= lastFreeIndex) {\n\t            // Add any leftover non-keyed items\n\t            newChildren.push(newItem)\n\t        }\n\t    }\n\t\n\t    var simulate = newChildren.slice()\n\t    var simulateIndex = 0\n\t    var removes = []\n\t    var inserts = []\n\t    var simulateItem\n\t\n\t    for (var k = 0; k < bChildren.length;) {\n\t        var wantedItem = bChildren[k]\n\t        simulateItem = simulate[simulateIndex]\n\t\n\t        // remove items\n\t        while (simulateItem === null && simulate.length) {\n\t            removes.push(remove(simulate, simulateIndex, null))\n\t            simulateItem = simulate[simulateIndex]\n\t        }\n\t\n\t        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n\t            // if we need a key in this position...\n\t            if (wantedItem.key) {\n\t                if (simulateItem && simulateItem.key) {\n\t                    // if an insert doesn't put this key in place, it needs to move\n\t                    if (bKeys[simulateItem.key] !== k + 1) {\n\t                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n\t                        simulateItem = simulate[simulateIndex]\n\t                        // if the remove didn't put the wanted item in place, we need to insert it\n\t                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n\t                            inserts.push({key: wantedItem.key, to: k})\n\t                        }\n\t                        // items are matching, so skip ahead\n\t                        else {\n\t                            simulateIndex++\n\t                        }\n\t                    }\n\t                    else {\n\t                        inserts.push({key: wantedItem.key, to: k})\n\t                    }\n\t                }\n\t                else {\n\t                    inserts.push({key: wantedItem.key, to: k})\n\t                }\n\t                k++\n\t            }\n\t            // a key in simulate has no matching wanted key, remove it\n\t            else if (simulateItem && simulateItem.key) {\n\t                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n\t            }\n\t        }\n\t        else {\n\t            simulateIndex++\n\t            k++\n\t        }\n\t    }\n\t\n\t    // remove all the remaining nodes from simulate\n\t    while(simulateIndex < simulate.length) {\n\t        simulateItem = simulate[simulateIndex]\n\t        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n\t    }\n\t\n\t    // If the only moves we have are deletes then we can just\n\t    // let the delete patch remove these items.\n\t    if (removes.length === deletedItems && !inserts.length) {\n\t        return {\n\t            children: newChildren,\n\t            moves: null\n\t        }\n\t    }\n\t\n\t    return {\n\t        children: newChildren,\n\t        moves: {\n\t            removes: removes,\n\t            inserts: inserts\n\t        }\n\t    }\n\t}\n\t\n\tfunction remove(arr, index, key) {\n\t    arr.splice(index, 1)\n\t\n\t    return {\n\t        from: index,\n\t        key: key\n\t    }\n\t}\n\t\n\tfunction keyIndex(children) {\n\t    var keys = {}\n\t    var free = []\n\t    var length = children.length\n\t\n\t    for (var i = 0; i < length; i++) {\n\t        var child = children[i]\n\t\n\t        if (child.key) {\n\t            keys[child.key] = i\n\t        } else {\n\t            free.push(i)\n\t        }\n\t    }\n\t\n\t    return {\n\t        keys: keys,     // A hash of key name to index\n\t        free: free,     // An array of unkeyed item indices\n\t    }\n\t}\n\t\n\tfunction appendPatch(apply, patch) {\n\t    if (apply) {\n\t        if (isArray(apply)) {\n\t            apply.push(patch)\n\t        } else {\n\t            apply = [apply, patch]\n\t        }\n\t\n\t        return apply\n\t    } else {\n\t        return patch\n\t    }\n\t}\n\t\n\t},{\"../vnode/handle-thunk\":11,\"../vnode/is-thunk\":12,\"../vnode/is-vnode\":14,\"../vnode/is-vtext\":15,\"../vnode/is-widget\":16,\"../vnode/vpatch\":19,\"./diff-props\":21,\"x-is-array\":4}],23:[function(require,module,exports){\n\tvar VNode = require('virtual-dom/vnode/vnode');\n\tvar VText = require('virtual-dom/vnode/vtext');\n\tvar diff = require('virtual-dom/vtree/diff');\n\tvar patch = require('virtual-dom/vdom/patch');\n\tvar createElement = require('virtual-dom/vdom/create-element');\n\tvar isHook = require(\"virtual-dom/vnode/is-vhook\");\n\t\n\t\n\tElm.Native.VirtualDom = {};\n\tElm.Native.VirtualDom.make = function(elm)\n\t{\n\t\telm.Native = elm.Native || {};\n\t\telm.Native.VirtualDom = elm.Native.VirtualDom || {};\n\t\tif (elm.Native.VirtualDom.values)\n\t\t{\n\t\t\treturn elm.Native.VirtualDom.values;\n\t\t}\n\t\n\t\tvar Element = Elm.Native.Graphics.Element.make(elm);\n\t\tvar Json = Elm.Native.Json.make(elm);\n\t\tvar List = Elm.Native.List.make(elm);\n\t\tvar Signal = Elm.Native.Signal.make(elm);\n\t\tvar Utils = Elm.Native.Utils.make(elm);\n\t\n\t\tvar ATTRIBUTE_KEY = 'UniqueNameThatOthersAreVeryUnlikelyToUse';\n\t\n\t\n\t\n\t\t// VIRTUAL DOM NODES\n\t\n\t\n\t\tfunction text(string)\n\t\t{\n\t\t\treturn new VText(string);\n\t\t}\n\t\n\t\tfunction node(name)\n\t\t{\n\t\t\treturn F2(function(propertyList, contents) {\n\t\t\t\treturn makeNode(name, propertyList, contents);\n\t\t\t});\n\t\t}\n\t\n\t\n\t\t// BUILD VIRTUAL DOME NODES\n\t\n\t\n\t\tfunction makeNode(name, propertyList, contents)\n\t\t{\n\t\t\tvar props = listToProperties(propertyList);\n\t\n\t\t\tvar key, namespace;\n\t\t\t// support keys\n\t\t\tif (props.key !== undefined)\n\t\t\t{\n\t\t\t\tkey = props.key;\n\t\t\t\tprops.key = undefined;\n\t\t\t}\n\t\n\t\t\t// support namespace\n\t\t\tif (props.namespace !== undefined)\n\t\t\t{\n\t\t\t\tnamespace = props.namespace;\n\t\t\t\tprops.namespace = undefined;\n\t\t\t}\n\t\n\t\t\t// ensure that setting text of an input does not move the cursor\n\t\t\tvar useSoftSet =\n\t\t\t\t(name === 'input' || name === 'textarea')\n\t\t\t\t&& props.value !== undefined\n\t\t\t\t&& !isHook(props.value);\n\t\n\t\t\tif (useSoftSet)\n\t\t\t{\n\t\t\t\tprops.value = SoftSetHook(props.value);\n\t\t\t}\n\t\n\t\t\treturn new VNode(name, props, List.toArray(contents), key, namespace);\n\t\t}\n\t\n\t\tfunction listToProperties(list)\n\t\t{\n\t\t\tvar object = {};\n\t\t\twhile (list.ctor !== '[]')\n\t\t\t{\n\t\t\t\tvar entry = list._0;\n\t\t\t\tif (entry.key === ATTRIBUTE_KEY)\n\t\t\t\t{\n\t\t\t\t\tobject.attributes = object.attributes || {};\n\t\t\t\t\tobject.attributes[entry.value.attrKey] = entry.value.attrValue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tobject[entry.key] = entry.value;\n\t\t\t\t}\n\t\t\t\tlist = list._1;\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\t\n\t\n\t\n\t\t// PROPERTIES AND ATTRIBUTES\n\t\n\t\n\t\tfunction property(key, value)\n\t\t{\n\t\t\treturn {\n\t\t\t\tkey: key,\n\t\t\t\tvalue: value\n\t\t\t};\n\t\t}\n\t\n\t\tfunction attribute(key, value)\n\t\t{\n\t\t\treturn {\n\t\t\t\tkey: ATTRIBUTE_KEY,\n\t\t\t\tvalue: {\n\t\t\t\t\tattrKey: key,\n\t\t\t\t\tattrValue: value\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\n\t\n\t\t// NAMESPACED ATTRIBUTES\n\t\n\t\n\t\tfunction attributeNS(namespace, key, value)\n\t\t{\n\t\t\treturn {\n\t\t\t\tkey: key,\n\t\t\t\tvalue: new AttributeHook(namespace, key, value)\n\t\t\t};\n\t\t}\n\t\n\t\tfunction AttributeHook(namespace, key, value)\n\t\t{\n\t\t\tif (!(this instanceof AttributeHook))\n\t\t\t{\n\t\t\t\treturn new AttributeHook(namespace, key, value);\n\t\t\t}\n\t\n\t\t\tthis.namespace = namespace;\n\t\t\tthis.key = key;\n\t\t\tthis.value = value;\n\t\t}\n\t\n\t\tAttributeHook.prototype.hook = function (node, prop, prev)\n\t\t{\n\t\t\tif (prev\n\t\t\t\t&& prev.type === 'AttributeHook'\n\t\t\t\t&& prev.value === this.value\n\t\t\t\t&& prev.namespace === this.namespace)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tnode.setAttributeNS(this.namespace, prop, this.value);\n\t\t};\n\t\n\t\tAttributeHook.prototype.unhook = function (node, prop, next)\n\t\t{\n\t\t\tif (next\n\t\t\t\t&& next.type === 'AttributeHook'\n\t\t\t\t&& next.namespace === this.namespace)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tnode.removeAttributeNS(this.namespace, this.key);\n\t\t};\n\t\n\t\tAttributeHook.prototype.type = 'AttributeHook';\n\t\n\t\n\t\n\t\t// EVENTS\n\t\n\t\n\t\tfunction on(name, options, decoder, createMessage)\n\t\t{\n\t\t\tfunction eventHandler(event)\n\t\t\t{\n\t\t\t\tvar value = A2(Json.runDecoderValue, decoder, event);\n\t\t\t\tif (value.ctor === 'Ok')\n\t\t\t\t{\n\t\t\t\t\tif (options.stopPropagation)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\tif (options.preventDefault)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tSignal.sendMessage(createMessage(value._0));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn property('on' + name, eventHandler);\n\t\t}\n\t\n\t\tfunction SoftSetHook(value)\n\t\t{\n\t\t\tif (!(this instanceof SoftSetHook))\n\t\t\t{\n\t\t\t\treturn new SoftSetHook(value);\n\t\t\t}\n\t\n\t\t\tthis.value = value;\n\t\t}\n\t\n\t\tSoftSetHook.prototype.hook = function (node, propertyName)\n\t\t{\n\t\t\tif (node[propertyName] !== this.value)\n\t\t\t{\n\t\t\t\tnode[propertyName] = this.value;\n\t\t\t}\n\t\t};\n\t\n\t\n\t\n\t\t// INTEGRATION WITH ELEMENTS\n\t\n\t\n\t\tfunction ElementWidget(element)\n\t\t{\n\t\t\tthis.element = element;\n\t\t}\n\t\n\t\tElementWidget.prototype.type = \"Widget\";\n\t\n\t\tElementWidget.prototype.init = function init()\n\t\t{\n\t\t\treturn Element.render(this.element);\n\t\t};\n\t\n\t\tElementWidget.prototype.update = function update(previous, node)\n\t\t{\n\t\t\treturn Element.update(node, previous.element, this.element);\n\t\t};\n\t\n\t\tfunction fromElement(element)\n\t\t{\n\t\t\treturn new ElementWidget(element);\n\t\t}\n\t\n\t\tfunction toElement(width, height, html)\n\t\t{\n\t\t\treturn A3(Element.newElement, width, height, {\n\t\t\t\tctor: 'Custom',\n\t\t\t\ttype: 'evancz/elm-html',\n\t\t\t\trender: render,\n\t\t\t\tupdate: update,\n\t\t\t\tmodel: html\n\t\t\t});\n\t\t}\n\t\n\t\n\t\n\t\t// RENDER AND UPDATE\n\t\n\t\n\t\tfunction render(model)\n\t\t{\n\t\t\tvar element = Element.createNode('div');\n\t\t\telement.appendChild(createElement(model));\n\t\t\treturn element;\n\t\t}\n\t\n\t\tfunction update(node, oldModel, newModel)\n\t\t{\n\t\t\tupdateAndReplace(node.firstChild, oldModel, newModel);\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction updateAndReplace(node, oldModel, newModel)\n\t\t{\n\t\t\tvar patches = diff(oldModel, newModel);\n\t\t\tvar newNode = patch(node, patches);\n\t\t\treturn newNode;\n\t\t}\n\t\n\t\n\t\n\t\t// LAZINESS\n\t\n\t\n\t\tfunction lazyRef(fn, a)\n\t\t{\n\t\t\tfunction thunk()\n\t\t\t{\n\t\t\t\treturn fn(a);\n\t\t\t}\n\t\t\treturn new Thunk(fn, [a], thunk);\n\t\t}\n\t\n\t\tfunction lazyRef2(fn, a, b)\n\t\t{\n\t\t\tfunction thunk()\n\t\t\t{\n\t\t\t\treturn A2(fn, a, b);\n\t\t\t}\n\t\t\treturn new Thunk(fn, [a,b], thunk);\n\t\t}\n\t\n\t\tfunction lazyRef3(fn, a, b, c)\n\t\t{\n\t\t\tfunction thunk()\n\t\t\t{\n\t\t\t\treturn A3(fn, a, b, c);\n\t\t\t}\n\t\t\treturn new Thunk(fn, [a,b,c], thunk);\n\t\t}\n\t\n\t\tfunction Thunk(fn, args, thunk)\n\t\t{\n\t\t\t/* public (used by VirtualDom.js) */\n\t\t\tthis.vnode = null;\n\t\t\tthis.key = undefined;\n\t\n\t\t\t/* private */\n\t\t\tthis.fn = fn;\n\t\t\tthis.args = args;\n\t\t\tthis.thunk = thunk;\n\t\t}\n\t\n\t\tThunk.prototype.type = \"Thunk\";\n\t\tThunk.prototype.render = renderThunk;\n\t\n\t\tfunction shouldUpdate(current, previous)\n\t\t{\n\t\t\tif (current.fn !== previous.fn)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// if it's the same function, we know the number of args must match\n\t\t\tvar cargs = current.args;\n\t\t\tvar pargs = previous.args;\n\t\n\t\t\tfor (var i = cargs.length; i--; )\n\t\t\t{\n\t\t\t\tif (cargs[i] !== pargs[i])\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t}\n\t\n\t\tfunction renderThunk(previous)\n\t\t{\n\t\t\tif (previous == null || shouldUpdate(this, previous))\n\t\t\t{\n\t\t\t\treturn this.thunk();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn previous.vnode;\n\t\t\t}\n\t\t}\n\t\n\t\n\t\treturn elm.Native.VirtualDom.values = Elm.Native.VirtualDom.values = {\n\t\t\tnode: node,\n\t\t\ttext: text,\n\t\t\ton: F4(on),\n\t\n\t\t\tproperty: F2(property),\n\t\t\tattribute: F2(attribute),\n\t\t\tattributeNS: F3(attributeNS),\n\t\n\t\t\tlazy: F2(lazyRef),\n\t\t\tlazy2: F3(lazyRef2),\n\t\t\tlazy3: F4(lazyRef3),\n\t\n\t\t\ttoElement: F3(toElement),\n\t\t\tfromElement: fromElement,\n\t\n\t\t\trender: createElement,\n\t\t\tupdateAndReplace: updateAndReplace\n\t\t};\n\t};\n\t\n\t},{\"virtual-dom/vdom/create-element\":6,\"virtual-dom/vdom/patch\":9,\"virtual-dom/vnode/is-vhook\":13,\"virtual-dom/vnode/vnode\":18,\"virtual-dom/vnode/vtext\":20,\"virtual-dom/vtree/diff\":22}]},{},[23]);\n\t\n\tElm.VirtualDom = Elm.VirtualDom || {};\n\tElm.VirtualDom.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.VirtualDom = _elm.VirtualDom || {};\n\t   if (_elm.VirtualDom.values) return _elm.VirtualDom.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n\t   $Json$Decode = Elm.Json.Decode.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm);\n\t   var _op = {};\n\t   var lazy3 = $Native$VirtualDom.lazy3;\n\t   var lazy2 = $Native$VirtualDom.lazy2;\n\t   var lazy = $Native$VirtualDom.lazy;\n\t   var defaultOptions = {stopPropagation: false,preventDefault: false};\n\t   var Options = F2(function (a,b) {    return {stopPropagation: a,preventDefault: b};});\n\t   var onWithOptions = $Native$VirtualDom.on;\n\t   var on = F3(function (eventName,decoder,toMessage) {    return A4($Native$VirtualDom.on,eventName,defaultOptions,decoder,toMessage);});\n\t   var attributeNS = $Native$VirtualDom.attributeNS;\n\t   var attribute = $Native$VirtualDom.attribute;\n\t   var property = $Native$VirtualDom.property;\n\t   var Property = {ctor: \"Property\"};\n\t   var fromElement = $Native$VirtualDom.fromElement;\n\t   var toElement = $Native$VirtualDom.toElement;\n\t   var text = $Native$VirtualDom.text;\n\t   var node = $Native$VirtualDom.node;\n\t   var Node = {ctor: \"Node\"};\n\t   return _elm.VirtualDom.values = {_op: _op\n\t                                   ,text: text\n\t                                   ,node: node\n\t                                   ,toElement: toElement\n\t                                   ,fromElement: fromElement\n\t                                   ,property: property\n\t                                   ,attribute: attribute\n\t                                   ,attributeNS: attributeNS\n\t                                   ,on: on\n\t                                   ,onWithOptions: onWithOptions\n\t                                   ,defaultOptions: defaultOptions\n\t                                   ,lazy: lazy\n\t                                   ,lazy2: lazy2\n\t                                   ,lazy3: lazy3\n\t                                   ,Options: Options};\n\t};\n\tElm.Html = Elm.Html || {};\n\tElm.Html.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Html = _elm.Html || {};\n\t   if (_elm.Html.values) return _elm.Html.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm),\n\t   $VirtualDom = Elm.VirtualDom.make(_elm);\n\t   var _op = {};\n\t   var fromElement = $VirtualDom.fromElement;\n\t   var toElement = $VirtualDom.toElement;\n\t   var text = $VirtualDom.text;\n\t   var node = $VirtualDom.node;\n\t   var body = node(\"body\");\n\t   var section = node(\"section\");\n\t   var nav = node(\"nav\");\n\t   var article = node(\"article\");\n\t   var aside = node(\"aside\");\n\t   var h1 = node(\"h1\");\n\t   var h2 = node(\"h2\");\n\t   var h3 = node(\"h3\");\n\t   var h4 = node(\"h4\");\n\t   var h5 = node(\"h5\");\n\t   var h6 = node(\"h6\");\n\t   var header = node(\"header\");\n\t   var footer = node(\"footer\");\n\t   var address = node(\"address\");\n\t   var main$ = node(\"main\");\n\t   var p = node(\"p\");\n\t   var hr = node(\"hr\");\n\t   var pre = node(\"pre\");\n\t   var blockquote = node(\"blockquote\");\n\t   var ol = node(\"ol\");\n\t   var ul = node(\"ul\");\n\t   var li = node(\"li\");\n\t   var dl = node(\"dl\");\n\t   var dt = node(\"dt\");\n\t   var dd = node(\"dd\");\n\t   var figure = node(\"figure\");\n\t   var figcaption = node(\"figcaption\");\n\t   var div = node(\"div\");\n\t   var a = node(\"a\");\n\t   var em = node(\"em\");\n\t   var strong = node(\"strong\");\n\t   var small = node(\"small\");\n\t   var s = node(\"s\");\n\t   var cite = node(\"cite\");\n\t   var q = node(\"q\");\n\t   var dfn = node(\"dfn\");\n\t   var abbr = node(\"abbr\");\n\t   var time = node(\"time\");\n\t   var code = node(\"code\");\n\t   var $var = node(\"var\");\n\t   var samp = node(\"samp\");\n\t   var kbd = node(\"kbd\");\n\t   var sub = node(\"sub\");\n\t   var sup = node(\"sup\");\n\t   var i = node(\"i\");\n\t   var b = node(\"b\");\n\t   var u = node(\"u\");\n\t   var mark = node(\"mark\");\n\t   var ruby = node(\"ruby\");\n\t   var rt = node(\"rt\");\n\t   var rp = node(\"rp\");\n\t   var bdi = node(\"bdi\");\n\t   var bdo = node(\"bdo\");\n\t   var span = node(\"span\");\n\t   var br = node(\"br\");\n\t   var wbr = node(\"wbr\");\n\t   var ins = node(\"ins\");\n\t   var del = node(\"del\");\n\t   var img = node(\"img\");\n\t   var iframe = node(\"iframe\");\n\t   var embed = node(\"embed\");\n\t   var object = node(\"object\");\n\t   var param = node(\"param\");\n\t   var video = node(\"video\");\n\t   var audio = node(\"audio\");\n\t   var source = node(\"source\");\n\t   var track = node(\"track\");\n\t   var canvas = node(\"canvas\");\n\t   var svg = node(\"svg\");\n\t   var math = node(\"math\");\n\t   var table = node(\"table\");\n\t   var caption = node(\"caption\");\n\t   var colgroup = node(\"colgroup\");\n\t   var col = node(\"col\");\n\t   var tbody = node(\"tbody\");\n\t   var thead = node(\"thead\");\n\t   var tfoot = node(\"tfoot\");\n\t   var tr = node(\"tr\");\n\t   var td = node(\"td\");\n\t   var th = node(\"th\");\n\t   var form = node(\"form\");\n\t   var fieldset = node(\"fieldset\");\n\t   var legend = node(\"legend\");\n\t   var label = node(\"label\");\n\t   var input = node(\"input\");\n\t   var button = node(\"button\");\n\t   var select = node(\"select\");\n\t   var datalist = node(\"datalist\");\n\t   var optgroup = node(\"optgroup\");\n\t   var option = node(\"option\");\n\t   var textarea = node(\"textarea\");\n\t   var keygen = node(\"keygen\");\n\t   var output = node(\"output\");\n\t   var progress = node(\"progress\");\n\t   var meter = node(\"meter\");\n\t   var details = node(\"details\");\n\t   var summary = node(\"summary\");\n\t   var menuitem = node(\"menuitem\");\n\t   var menu = node(\"menu\");\n\t   return _elm.Html.values = {_op: _op\n\t                             ,node: node\n\t                             ,text: text\n\t                             ,toElement: toElement\n\t                             ,fromElement: fromElement\n\t                             ,body: body\n\t                             ,section: section\n\t                             ,nav: nav\n\t                             ,article: article\n\t                             ,aside: aside\n\t                             ,h1: h1\n\t                             ,h2: h2\n\t                             ,h3: h3\n\t                             ,h4: h4\n\t                             ,h5: h5\n\t                             ,h6: h6\n\t                             ,header: header\n\t                             ,footer: footer\n\t                             ,address: address\n\t                             ,main$: main$\n\t                             ,p: p\n\t                             ,hr: hr\n\t                             ,pre: pre\n\t                             ,blockquote: blockquote\n\t                             ,ol: ol\n\t                             ,ul: ul\n\t                             ,li: li\n\t                             ,dl: dl\n\t                             ,dt: dt\n\t                             ,dd: dd\n\t                             ,figure: figure\n\t                             ,figcaption: figcaption\n\t                             ,div: div\n\t                             ,a: a\n\t                             ,em: em\n\t                             ,strong: strong\n\t                             ,small: small\n\t                             ,s: s\n\t                             ,cite: cite\n\t                             ,q: q\n\t                             ,dfn: dfn\n\t                             ,abbr: abbr\n\t                             ,time: time\n\t                             ,code: code\n\t                             ,$var: $var\n\t                             ,samp: samp\n\t                             ,kbd: kbd\n\t                             ,sub: sub\n\t                             ,sup: sup\n\t                             ,i: i\n\t                             ,b: b\n\t                             ,u: u\n\t                             ,mark: mark\n\t                             ,ruby: ruby\n\t                             ,rt: rt\n\t                             ,rp: rp\n\t                             ,bdi: bdi\n\t                             ,bdo: bdo\n\t                             ,span: span\n\t                             ,br: br\n\t                             ,wbr: wbr\n\t                             ,ins: ins\n\t                             ,del: del\n\t                             ,img: img\n\t                             ,iframe: iframe\n\t                             ,embed: embed\n\t                             ,object: object\n\t                             ,param: param\n\t                             ,video: video\n\t                             ,audio: audio\n\t                             ,source: source\n\t                             ,track: track\n\t                             ,canvas: canvas\n\t                             ,svg: svg\n\t                             ,math: math\n\t                             ,table: table\n\t                             ,caption: caption\n\t                             ,colgroup: colgroup\n\t                             ,col: col\n\t                             ,tbody: tbody\n\t                             ,thead: thead\n\t                             ,tfoot: tfoot\n\t                             ,tr: tr\n\t                             ,td: td\n\t                             ,th: th\n\t                             ,form: form\n\t                             ,fieldset: fieldset\n\t                             ,legend: legend\n\t                             ,label: label\n\t                             ,input: input\n\t                             ,button: button\n\t                             ,select: select\n\t                             ,datalist: datalist\n\t                             ,optgroup: optgroup\n\t                             ,option: option\n\t                             ,textarea: textarea\n\t                             ,keygen: keygen\n\t                             ,output: output\n\t                             ,progress: progress\n\t                             ,meter: meter\n\t                             ,details: details\n\t                             ,summary: summary\n\t                             ,menuitem: menuitem\n\t                             ,menu: menu};\n\t};\n\tElm.Html = Elm.Html || {};\n\tElm.Html.Attributes = Elm.Html.Attributes || {};\n\tElm.Html.Attributes.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Html = _elm.Html || {};\n\t   _elm.Html.Attributes = _elm.Html.Attributes || {};\n\t   if (_elm.Html.Attributes.values) return _elm.Html.Attributes.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $Html = Elm.Html.make(_elm),\n\t   $Json$Encode = Elm.Json.Encode.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm),\n\t   $String = Elm.String.make(_elm),\n\t   $VirtualDom = Elm.VirtualDom.make(_elm);\n\t   var _op = {};\n\t   var attribute = $VirtualDom.attribute;\n\t   var contextmenu = function (value) {    return A2(attribute,\"contextmenu\",value);};\n\t   var property = $VirtualDom.property;\n\t   var stringProperty = F2(function (name,string) {    return A2(property,name,$Json$Encode.string(string));});\n\t   var $class = function (name) {    return A2(stringProperty,\"className\",name);};\n\t   var id = function (name) {    return A2(stringProperty,\"id\",name);};\n\t   var title = function (name) {    return A2(stringProperty,\"title\",name);};\n\t   var accesskey = function ($char) {    return A2(stringProperty,\"accessKey\",$String.fromChar($char));};\n\t   var dir = function (value) {    return A2(stringProperty,\"dir\",value);};\n\t   var draggable = function (value) {    return A2(stringProperty,\"draggable\",value);};\n\t   var dropzone = function (value) {    return A2(stringProperty,\"dropzone\",value);};\n\t   var itemprop = function (value) {    return A2(stringProperty,\"itemprop\",value);};\n\t   var lang = function (value) {    return A2(stringProperty,\"lang\",value);};\n\t   var tabindex = function (n) {    return A2(stringProperty,\"tabIndex\",$Basics.toString(n));};\n\t   var charset = function (value) {    return A2(stringProperty,\"charset\",value);};\n\t   var content = function (value) {    return A2(stringProperty,\"content\",value);};\n\t   var httpEquiv = function (value) {    return A2(stringProperty,\"httpEquiv\",value);};\n\t   var language = function (value) {    return A2(stringProperty,\"language\",value);};\n\t   var src = function (value) {    return A2(stringProperty,\"src\",value);};\n\t   var height = function (value) {    return A2(stringProperty,\"height\",$Basics.toString(value));};\n\t   var width = function (value) {    return A2(stringProperty,\"width\",$Basics.toString(value));};\n\t   var alt = function (value) {    return A2(stringProperty,\"alt\",value);};\n\t   var preload = function (value) {    return A2(stringProperty,\"preload\",value);};\n\t   var poster = function (value) {    return A2(stringProperty,\"poster\",value);};\n\t   var kind = function (value) {    return A2(stringProperty,\"kind\",value);};\n\t   var srclang = function (value) {    return A2(stringProperty,\"srclang\",value);};\n\t   var sandbox = function (value) {    return A2(stringProperty,\"sandbox\",value);};\n\t   var srcdoc = function (value) {    return A2(stringProperty,\"srcdoc\",value);};\n\t   var type$ = function (value) {    return A2(stringProperty,\"type\",value);};\n\t   var value = function (value) {    return A2(stringProperty,\"value\",value);};\n\t   var placeholder = function (value) {    return A2(stringProperty,\"placeholder\",value);};\n\t   var accept = function (value) {    return A2(stringProperty,\"accept\",value);};\n\t   var acceptCharset = function (value) {    return A2(stringProperty,\"acceptCharset\",value);};\n\t   var action = function (value) {    return A2(stringProperty,\"action\",value);};\n\t   var autocomplete = function (bool) {    return A2(stringProperty,\"autocomplete\",bool ? \"on\" : \"off\");};\n\t   var autosave = function (value) {    return A2(stringProperty,\"autosave\",value);};\n\t   var enctype = function (value) {    return A2(stringProperty,\"enctype\",value);};\n\t   var formaction = function (value) {    return A2(stringProperty,\"formAction\",value);};\n\t   var list = function (value) {    return A2(stringProperty,\"list\",value);};\n\t   var minlength = function (n) {    return A2(stringProperty,\"minLength\",$Basics.toString(n));};\n\t   var maxlength = function (n) {    return A2(stringProperty,\"maxLength\",$Basics.toString(n));};\n\t   var method = function (value) {    return A2(stringProperty,\"method\",value);};\n\t   var name = function (value) {    return A2(stringProperty,\"name\",value);};\n\t   var pattern = function (value) {    return A2(stringProperty,\"pattern\",value);};\n\t   var size = function (n) {    return A2(stringProperty,\"size\",$Basics.toString(n));};\n\t   var $for = function (value) {    return A2(stringProperty,\"htmlFor\",value);};\n\t   var form = function (value) {    return A2(stringProperty,\"form\",value);};\n\t   var max = function (value) {    return A2(stringProperty,\"max\",value);};\n\t   var min = function (value) {    return A2(stringProperty,\"min\",value);};\n\t   var step = function (n) {    return A2(stringProperty,\"step\",n);};\n\t   var cols = function (n) {    return A2(stringProperty,\"cols\",$Basics.toString(n));};\n\t   var rows = function (n) {    return A2(stringProperty,\"rows\",$Basics.toString(n));};\n\t   var wrap = function (value) {    return A2(stringProperty,\"wrap\",value);};\n\t   var usemap = function (value) {    return A2(stringProperty,\"useMap\",value);};\n\t   var shape = function (value) {    return A2(stringProperty,\"shape\",value);};\n\t   var coords = function (value) {    return A2(stringProperty,\"coords\",value);};\n\t   var challenge = function (value) {    return A2(stringProperty,\"challenge\",value);};\n\t   var keytype = function (value) {    return A2(stringProperty,\"keytype\",value);};\n\t   var align = function (value) {    return A2(stringProperty,\"align\",value);};\n\t   var cite = function (value) {    return A2(stringProperty,\"cite\",value);};\n\t   var href = function (value) {    return A2(stringProperty,\"href\",value);};\n\t   var target = function (value) {    return A2(stringProperty,\"target\",value);};\n\t   var downloadAs = function (value) {    return A2(stringProperty,\"download\",value);};\n\t   var hreflang = function (value) {    return A2(stringProperty,\"hreflang\",value);};\n\t   var media = function (value) {    return A2(stringProperty,\"media\",value);};\n\t   var ping = function (value) {    return A2(stringProperty,\"ping\",value);};\n\t   var rel = function (value) {    return A2(stringProperty,\"rel\",value);};\n\t   var datetime = function (value) {    return A2(stringProperty,\"datetime\",value);};\n\t   var pubdate = function (value) {    return A2(stringProperty,\"pubdate\",value);};\n\t   var start = function (n) {    return A2(stringProperty,\"start\",$Basics.toString(n));};\n\t   var colspan = function (n) {    return A2(stringProperty,\"colSpan\",$Basics.toString(n));};\n\t   var headers = function (value) {    return A2(stringProperty,\"headers\",value);};\n\t   var rowspan = function (n) {    return A2(stringProperty,\"rowSpan\",$Basics.toString(n));};\n\t   var scope = function (value) {    return A2(stringProperty,\"scope\",value);};\n\t   var manifest = function (value) {    return A2(stringProperty,\"manifest\",value);};\n\t   var boolProperty = F2(function (name,bool) {    return A2(property,name,$Json$Encode.bool(bool));});\n\t   var hidden = function (bool) {    return A2(boolProperty,\"hidden\",bool);};\n\t   var contenteditable = function (bool) {    return A2(boolProperty,\"contentEditable\",bool);};\n\t   var spellcheck = function (bool) {    return A2(boolProperty,\"spellcheck\",bool);};\n\t   var async = function (bool) {    return A2(boolProperty,\"async\",bool);};\n\t   var defer = function (bool) {    return A2(boolProperty,\"defer\",bool);};\n\t   var scoped = function (bool) {    return A2(boolProperty,\"scoped\",bool);};\n\t   var autoplay = function (bool) {    return A2(boolProperty,\"autoplay\",bool);};\n\t   var controls = function (bool) {    return A2(boolProperty,\"controls\",bool);};\n\t   var loop = function (bool) {    return A2(boolProperty,\"loop\",bool);};\n\t   var $default = function (bool) {    return A2(boolProperty,\"default\",bool);};\n\t   var seamless = function (bool) {    return A2(boolProperty,\"seamless\",bool);};\n\t   var checked = function (bool) {    return A2(boolProperty,\"checked\",bool);};\n\t   var selected = function (bool) {    return A2(boolProperty,\"selected\",bool);};\n\t   var autofocus = function (bool) {    return A2(boolProperty,\"autofocus\",bool);};\n\t   var disabled = function (bool) {    return A2(boolProperty,\"disabled\",bool);};\n\t   var multiple = function (bool) {    return A2(boolProperty,\"multiple\",bool);};\n\t   var novalidate = function (bool) {    return A2(boolProperty,\"noValidate\",bool);};\n\t   var readonly = function (bool) {    return A2(boolProperty,\"readOnly\",bool);};\n\t   var required = function (bool) {    return A2(boolProperty,\"required\",bool);};\n\t   var ismap = function (value) {    return A2(boolProperty,\"isMap\",value);};\n\t   var download = function (bool) {    return A2(boolProperty,\"download\",bool);};\n\t   var reversed = function (bool) {    return A2(boolProperty,\"reversed\",bool);};\n\t   var classList = function (list) {    return $class(A2($String.join,\" \",A2($List.map,$Basics.fst,A2($List.filter,$Basics.snd,list))));};\n\t   var style = function (props) {\n\t      return A2(property,\n\t      \"style\",\n\t      $Json$Encode.object(A2($List.map,function (_p0) {    var _p1 = _p0;return {ctor: \"_Tuple2\",_0: _p1._0,_1: $Json$Encode.string(_p1._1)};},props)));\n\t   };\n\t   var key = function (k) {    return A2(stringProperty,\"key\",k);};\n\t   return _elm.Html.Attributes.values = {_op: _op\n\t                                        ,key: key\n\t                                        ,style: style\n\t                                        ,$class: $class\n\t                                        ,classList: classList\n\t                                        ,id: id\n\t                                        ,title: title\n\t                                        ,hidden: hidden\n\t                                        ,type$: type$\n\t                                        ,value: value\n\t                                        ,checked: checked\n\t                                        ,placeholder: placeholder\n\t                                        ,selected: selected\n\t                                        ,accept: accept\n\t                                        ,acceptCharset: acceptCharset\n\t                                        ,action: action\n\t                                        ,autocomplete: autocomplete\n\t                                        ,autofocus: autofocus\n\t                                        ,autosave: autosave\n\t                                        ,disabled: disabled\n\t                                        ,enctype: enctype\n\t                                        ,formaction: formaction\n\t                                        ,list: list\n\t                                        ,maxlength: maxlength\n\t                                        ,minlength: minlength\n\t                                        ,method: method\n\t                                        ,multiple: multiple\n\t                                        ,name: name\n\t                                        ,novalidate: novalidate\n\t                                        ,pattern: pattern\n\t                                        ,readonly: readonly\n\t                                        ,required: required\n\t                                        ,size: size\n\t                                        ,$for: $for\n\t                                        ,form: form\n\t                                        ,max: max\n\t                                        ,min: min\n\t                                        ,step: step\n\t                                        ,cols: cols\n\t                                        ,rows: rows\n\t                                        ,wrap: wrap\n\t                                        ,href: href\n\t                                        ,target: target\n\t                                        ,download: download\n\t                                        ,downloadAs: downloadAs\n\t                                        ,hreflang: hreflang\n\t                                        ,media: media\n\t                                        ,ping: ping\n\t                                        ,rel: rel\n\t                                        ,ismap: ismap\n\t                                        ,usemap: usemap\n\t                                        ,shape: shape\n\t                                        ,coords: coords\n\t                                        ,src: src\n\t                                        ,height: height\n\t                                        ,width: width\n\t                                        ,alt: alt\n\t                                        ,autoplay: autoplay\n\t                                        ,controls: controls\n\t                                        ,loop: loop\n\t                                        ,preload: preload\n\t                                        ,poster: poster\n\t                                        ,$default: $default\n\t                                        ,kind: kind\n\t                                        ,srclang: srclang\n\t                                        ,sandbox: sandbox\n\t                                        ,seamless: seamless\n\t                                        ,srcdoc: srcdoc\n\t                                        ,reversed: reversed\n\t                                        ,start: start\n\t                                        ,align: align\n\t                                        ,colspan: colspan\n\t                                        ,rowspan: rowspan\n\t                                        ,headers: headers\n\t                                        ,scope: scope\n\t                                        ,async: async\n\t                                        ,charset: charset\n\t                                        ,content: content\n\t                                        ,defer: defer\n\t                                        ,httpEquiv: httpEquiv\n\t                                        ,language: language\n\t                                        ,scoped: scoped\n\t                                        ,accesskey: accesskey\n\t                                        ,contenteditable: contenteditable\n\t                                        ,contextmenu: contextmenu\n\t                                        ,dir: dir\n\t                                        ,draggable: draggable\n\t                                        ,dropzone: dropzone\n\t                                        ,itemprop: itemprop\n\t                                        ,lang: lang\n\t                                        ,spellcheck: spellcheck\n\t                                        ,tabindex: tabindex\n\t                                        ,challenge: challenge\n\t                                        ,keytype: keytype\n\t                                        ,cite: cite\n\t                                        ,datetime: datetime\n\t                                        ,pubdate: pubdate\n\t                                        ,manifest: manifest\n\t                                        ,property: property\n\t                                        ,attribute: attribute};\n\t};\n\tElm.Html = Elm.Html || {};\n\tElm.Html.Events = Elm.Html.Events || {};\n\tElm.Html.Events.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Html = _elm.Html || {};\n\t   _elm.Html.Events = _elm.Html.Events || {};\n\t   if (_elm.Html.Events.values) return _elm.Html.Events.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $Html = Elm.Html.make(_elm),\n\t   $Json$Decode = Elm.Json.Decode.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm),\n\t   $VirtualDom = Elm.VirtualDom.make(_elm);\n\t   var _op = {};\n\t   var keyCode = A2($Json$Decode._op[\":=\"],\"keyCode\",$Json$Decode.$int);\n\t   var targetChecked = A2($Json$Decode.at,_U.list([\"target\",\"checked\"]),$Json$Decode.bool);\n\t   var targetValue = A2($Json$Decode.at,_U.list([\"target\",\"value\"]),$Json$Decode.string);\n\t   var defaultOptions = $VirtualDom.defaultOptions;\n\t   var Options = F2(function (a,b) {    return {stopPropagation: a,preventDefault: b};});\n\t   var onWithOptions = $VirtualDom.onWithOptions;\n\t   var on = $VirtualDom.on;\n\t   var messageOn = F3(function (name,addr,msg) {    return A3(on,name,$Json$Decode.value,function (_p0) {    return A2($Signal.message,addr,msg);});});\n\t   var onClick = messageOn(\"click\");\n\t   var onDoubleClick = messageOn(\"dblclick\");\n\t   var onMouseMove = messageOn(\"mousemove\");\n\t   var onMouseDown = messageOn(\"mousedown\");\n\t   var onMouseUp = messageOn(\"mouseup\");\n\t   var onMouseEnter = messageOn(\"mouseenter\");\n\t   var onMouseLeave = messageOn(\"mouseleave\");\n\t   var onMouseOver = messageOn(\"mouseover\");\n\t   var onMouseOut = messageOn(\"mouseout\");\n\t   var onBlur = messageOn(\"blur\");\n\t   var onFocus = messageOn(\"focus\");\n\t   var onSubmit = messageOn(\"submit\");\n\t   var onKey = F3(function (name,addr,handler) {    return A3(on,name,keyCode,function (code) {    return A2($Signal.message,addr,handler(code));});});\n\t   var onKeyUp = onKey(\"keyup\");\n\t   var onKeyDown = onKey(\"keydown\");\n\t   var onKeyPress = onKey(\"keypress\");\n\t   return _elm.Html.Events.values = {_op: _op\n\t                                    ,onBlur: onBlur\n\t                                    ,onFocus: onFocus\n\t                                    ,onSubmit: onSubmit\n\t                                    ,onKeyUp: onKeyUp\n\t                                    ,onKeyDown: onKeyDown\n\t                                    ,onKeyPress: onKeyPress\n\t                                    ,onClick: onClick\n\t                                    ,onDoubleClick: onDoubleClick\n\t                                    ,onMouseMove: onMouseMove\n\t                                    ,onMouseDown: onMouseDown\n\t                                    ,onMouseUp: onMouseUp\n\t                                    ,onMouseEnter: onMouseEnter\n\t                                    ,onMouseLeave: onMouseLeave\n\t                                    ,onMouseOver: onMouseOver\n\t                                    ,onMouseOut: onMouseOut\n\t                                    ,on: on\n\t                                    ,onWithOptions: onWithOptions\n\t                                    ,defaultOptions: defaultOptions\n\t                                    ,targetValue: targetValue\n\t                                    ,targetChecked: targetChecked\n\t                                    ,keyCode: keyCode\n\t                                    ,Options: Options};\n\t};\n\tElm.Main = Elm.Main || {};\n\tElm.Main.make = function (_elm) {\n\t   \"use strict\";\n\t   _elm.Main = _elm.Main || {};\n\t   if (_elm.Main.values) return _elm.Main.values;\n\t   var _U = Elm.Native.Utils.make(_elm),\n\t   $Basics = Elm.Basics.make(_elm),\n\t   $Color = Elm.Color.make(_elm),\n\t   $Debug = Elm.Debug.make(_elm),\n\t   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),\n\t   $Html = Elm.Html.make(_elm),\n\t   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n\t   $Html$Events = Elm.Html.Events.make(_elm),\n\t   $List = Elm.List.make(_elm),\n\t   $Maybe = Elm.Maybe.make(_elm),\n\t   $Random = Elm.Random.make(_elm),\n\t   $Result = Elm.Result.make(_elm),\n\t   $Signal = Elm.Signal.make(_elm),\n\t   $Signal$Extra = Elm.Signal.Extra.make(_elm),\n\t   $Time = Elm.Time.make(_elm),\n\t   $Window = Elm.Window.make(_elm);\n\t   var _op = {};\n\t   var socializeParticle = F2(function (domains,p) {\n\t      var _p1 = $List.head(A2($List.filter,function (_p0) {    return A2($List.member,p,function (_) {    return _.particles;}(_p0));},domains));\n\t      if (_p1.ctor === \"Nothing\") {\n\t            return p;\n\t         } else {\n\t            var _p2 = _p1._0;\n\t            var avgDir = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(_p2.center.d),360)) / $Basics.toFloat($List.length(_p2.particles));\n\t            return _U.update(p,{d: p.d * 0.2 + avgDir * 0.8});\n\t         }\n\t   });\n\t   var distance2 = F2(function (a,b) {    return Math.pow(a.x - b.x,2) + Math.pow(a.y - b.y,2);});\n\t   var drawParticle = function (p) {\n\t      return A2($Graphics$Collage.rotate,\n\t      $Basics.degrees(p.d),\n\t      A2($Graphics$Collage.move,{ctor: \"_Tuple2\",_0: p.x,_1: p.y},A2($Graphics$Collage.filled,$Color.lightBlue,A2($Graphics$Collage.ngon,3,10))));\n\t   };\n\t   var moveParticle = F2(function (_p3,p) {\n\t      var _p4 = _p3;\n\t      var _p6 = _p4._0;\n\t      var _p5 = _p4._1;\n\t      var y = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(5 * $Basics.sin($Basics.degrees(p.d)) + p.y) + (_p5 / 2 | 0),_p5) - (_p5 / 2 | 0));\n\t      var x = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(5 * $Basics.cos($Basics.degrees(p.d)) + p.x) + (_p6 / 2 | 0),_p6) - (_p6 / 2 | 0));\n\t      return _U.update(p,{x: x,y: y});\n\t   });\n\t   var sizeDomain = 100;\n\t   var drawDomain = function (d) {\n\t      return A2($Graphics$Collage.move,\n\t      {ctor: \"_Tuple2\",_0: d.center.x,_1: d.center.y},\n\t      A2($Graphics$Collage.outlined,$Graphics$Collage.solid($Color.lightRed),$Graphics$Collage.circle(sizeDomain)));\n\t   };\n\t   var fromSimulation = function (s) {\n\t      var domains = A2($List.map,drawDomain,s.domains);\n\t      var particles = A2($List.map,drawParticle,s.particles);\n\t      return {ctor: \"_Tuple3\"\n\t             ,_0: s.socialMode\n\t             ,_1: s.debugMode\n\t             ,_2: $Html.fromElement(A3($Graphics$Collage.collage,s.width,s.height,A2($List.append,particles,domains)))};\n\t   };\n\t   var rand = A2($Random.$int,-45,45);\n\t   var rotateParticle = F2(function (p,_p7) {\n\t      var _p8 = _p7;\n\t      var _p9 = A2($Random.generate,rand,_p8._1);\n\t      var d = _p9._0;\n\t      var seed = _p9._1;\n\t      return {ctor: \"_Tuple2\",_0: A2($List._op[\"::\"],_U.update(p,{d: $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(p.d) + d,360))}),_p8._0),_1: seed};\n\t   });\n\t   var Socialize = {ctor: \"Socialize\"};\n\t   var Resize = function (a) {    return {ctor: \"Resize\",_0: a};};\n\t   var ToggleDebug = function (a) {    return {ctor: \"ToggleDebug\",_0: a};};\n\t   var ToggleSocial = function (a) {    return {ctor: \"ToggleSocial\",_0: a};};\n\t   var view = F2(function (addr,_p10) {\n\t      var _p11 = _p10;\n\t      var _p13 = _p11._0;\n\t      var _p12 = _p11._1;\n\t      return A2($Html.div,\n\t      _U.list([]),\n\t      _U.list([A2($Html.div,_U.list([$Html$Attributes.$class(\"simulation\")]),_U.list([_p11._2]))\n\t              ,A2($Html.div,\n\t              _U.list([$Html$Attributes.classList(_U.list([{ctor: \"_Tuple2\",_0: \"controls\",_1: true},{ctor: \"_Tuple2\",_0: \"activated\",_1: _p13}]))]),\n\t              _U.list([$Html.text(\"Social: \")\n\t                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([$Html.text(\"on\")]))\n\t                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([$Html.text(\"off\")]))\n\t                      ,A2($Html.input,_U.list([$Html$Attributes.type$(\"button\"),A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([]))]))\n\t              ,A2($Html.div,\n\t              _U.list([$Html$Attributes.classList(_U.list([{ctor: \"_Tuple2\",_0: \"controls\",_1: true},{ctor: \"_Tuple2\",_0: \"activated\",_1: _p12}]))]),\n\t              _U.list([$Html.text(\"Debug: \")\n\t                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),_U.list([$Html.text(\"on\")]))\n\t                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),_U.list([$Html.text(\"off\")]))\n\t                      ,A2($Html.input,\n\t                      _U.list([$Html$Attributes.type$(\"button\"),A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),\n\t                      _U.list([]))]))]));\n\t   });\n\t   var Rotate = function (a) {    return {ctor: \"Rotate\",_0: a};};\n\t   var Move = {ctor: \"Move\"};\n\t   var Domain = F2(function (a,b) {    return {particles: a,center: b};});\n\t   var Particle = F3(function (a,b,c) {    return {x: a,y: b,d: c};});\n\t   var addParticle = F2(function (d,p) {\n\t      return _U.update(d,{particles: A2($List._op[\"::\"],p,d.particles),center: A3(Particle,d.center.x,d.center.y,d.center.d + p.d)});\n\t   });\n\t   var updateDomains = F2(function (p,domains) {\n\t      var belong = A2($List.filter,function (d) {    return _U.cmp(A2(distance2,d.center,p),sizeDomain * sizeDomain) < 1;},domains);\n\t      return $List.isEmpty(belong) ? A2($List._op[\"::\"],A2(Domain,_U.list([p]),p),domains) : A2($List.map,\n\t      function (d) {\n\t         return A2($List.member,d,belong) ? A2(addParticle,d,p) : d;\n\t      },\n\t      domains);\n\t   });\n\t   var update = F2(function (op,simul) {\n\t      var _p14 = op;\n\t      switch (_p14.ctor)\n\t      {case \"Move\": return _U.update(simul,{particles: A2($List.map,moveParticle({ctor: \"_Tuple2\",_0: simul.width,_1: simul.height}),simul.particles)});\n\t         case \"Rotate\": return _U.update(simul,\n\t           {particles: $Basics.fst(A3($List.foldr,rotateParticle,{ctor: \"_Tuple2\",_0: _U.list([]),_1: $Random.initialSeed(_p14._0)},simul.particles))});\n\t         case \"ToggleSocial\": return _U.update(simul,{socialMode: _p14._0});\n\t         case \"ToggleDebug\": return _U.update(simul,{debugMode: _p14._0});\n\t         case \"Resize\": return _U.update(simul,{width: _p14._0});\n\t         default: if (simul.socialMode) {\n\t                 var domains = A3($List.foldr,updateDomains,_U.list([]),simul.particles);\n\t                 var particles = A2($List.map,socializeParticle(domains),simul.particles);\n\t                 return _U.update(simul,{particles: particles,domains: simul.debugMode ? domains : _U.list([])});\n\t              } else return _U.update(simul,{domains: _U.list([])});}\n\t   });\n\t   var Simulation = F6(function (a,b,c,d,e,f) {    return {particles: a,socialMode: b,debugMode: c,width: d,height: e,domains: f};});\n\t   var init = A6(Simulation,A2($List.repeat,100,A3(Particle,0,0,0)),false,false,500,500,_U.list([]));\n\t   var main = function () {\n\t      var operations = $Signal.mailbox(ToggleSocial(true));\n\t      var signals = $Signal.mergeMany(_U.list([A2($Signal.map,Resize,$Window.width)\n\t                                              ,operations.signal\n\t                                              ,A2($Signal.map,\n\t                                              function (_p15) {\n\t                                                 return Rotate($Basics.round($Time.inMilliseconds(_p15)));\n\t                                              },\n\t                                              $Time.every(200 * $Time.millisecond))\n\t                                              ,A2($Signal.map,$Basics.always(Move),$Time.fps(30))\n\t                                              ,A2($Signal.map,$Basics.always(Socialize),$Time.fps(5))]));\n\t      var particles = A2($Signal.map,fromSimulation,A3($Signal$Extra.foldp$,update,A2($Basics.flip,update,init),signals));\n\t      return A2($Signal.map,view(operations.address),particles);\n\t   }();\n\t   return _elm.Main.values = {_op: _op\n\t                             ,Simulation: Simulation\n\t                             ,Particle: Particle\n\t                             ,Domain: Domain\n\t                             ,Move: Move\n\t                             ,Rotate: Rotate\n\t                             ,ToggleSocial: ToggleSocial\n\t                             ,ToggleDebug: ToggleDebug\n\t                             ,Resize: Resize\n\t                             ,Socialize: Socialize\n\t                             ,rand: rand\n\t                             ,sizeDomain: sizeDomain\n\t                             ,init: init\n\t                             ,moveParticle: moveParticle\n\t                             ,rotateParticle: rotateParticle\n\t                             ,drawParticle: drawParticle\n\t                             ,drawDomain: drawDomain\n\t                             ,updateDomains: updateDomains\n\t                             ,addParticle: addParticle\n\t                             ,distance2: distance2\n\t                             ,socializeParticle: socializeParticle\n\t                             ,update: update\n\t                             ,main: main\n\t                             ,fromSimulation: fromSimulation\n\t                             ,view: view};\n\t};\n\t\n\tmodule.exports = Elm;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"main.css\";\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b6f7eec739572ac0fec8\n **/","'use strict'\n\nrequire('./index.html')\nrequire('./main.css')\nvar Elm = require('./Main.elm')\nElm.embed(Elm.Main, document.getElementById('main'))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 0\n ** module chunks = 0\n **/","var Elm = Elm || { Native: {} };\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Basics = localRuntime.Native.Basics || {};\n\tif (localRuntime.Native.Basics.values)\n\t{\n\t\treturn localRuntime.Native.Basics.values;\n\t}\n\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\tfunction div(a, b)\n\t{\n\t\treturn (a / b) | 0;\n\t}\n\tfunction rem(a, b)\n\t{\n\t\treturn a % b;\n\t}\n\tfunction mod(a, b)\n\t{\n\t\tif (b === 0)\n\t\t{\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t\t}\n\t\tvar r = a % b;\n\t\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\n\n\t\treturn m === b ? 0 : m;\n\t}\n\tfunction logBase(base, n)\n\t{\n\t\treturn Math.log(n) / Math.log(base);\n\t}\n\tfunction negate(n)\n\t{\n\t\treturn -n;\n\t}\n\tfunction abs(n)\n\t{\n\t\treturn n < 0 ? -n : n;\n\t}\n\n\tfunction min(a, b)\n\t{\n\t\treturn Utils.cmp(a, b) < 0 ? a : b;\n\t}\n\tfunction max(a, b)\n\t{\n\t\treturn Utils.cmp(a, b) > 0 ? a : b;\n\t}\n\tfunction clamp(lo, hi, n)\n\t{\n\t\treturn Utils.cmp(n, lo) < 0 ? lo : Utils.cmp(n, hi) > 0 ? hi : n;\n\t}\n\n\tfunction xor(a, b)\n\t{\n\t\treturn a !== b;\n\t}\n\tfunction not(b)\n\t{\n\t\treturn !b;\n\t}\n\tfunction isInfinite(n)\n\t{\n\t\treturn n === Infinity || n === -Infinity;\n\t}\n\n\tfunction truncate(n)\n\t{\n\t\treturn n | 0;\n\t}\n\n\tfunction degrees(d)\n\t{\n\t\treturn d * Math.PI / 180;\n\t}\n\tfunction turns(t)\n\t{\n\t\treturn 2 * Math.PI * t;\n\t}\n\tfunction fromPolar(point)\n\t{\n\t\tvar r = point._0;\n\t\tvar t = point._1;\n\t\treturn Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n\t}\n\tfunction toPolar(point)\n\t{\n\t\tvar x = point._0;\n\t\tvar y = point._1;\n\t\treturn Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\n\t}\n\n\treturn localRuntime.Native.Basics.values = {\n\t\tdiv: F2(div),\n\t\trem: F2(rem),\n\t\tmod: F2(mod),\n\n\t\tpi: Math.PI,\n\t\te: Math.E,\n\t\tcos: Math.cos,\n\t\tsin: Math.sin,\n\t\ttan: Math.tan,\n\t\tacos: Math.acos,\n\t\tasin: Math.asin,\n\t\tatan: Math.atan,\n\t\tatan2: F2(Math.atan2),\n\n\t\tdegrees: degrees,\n\t\tturns: turns,\n\t\tfromPolar: fromPolar,\n\t\ttoPolar: toPolar,\n\n\t\tsqrt: Math.sqrt,\n\t\tlogBase: F2(logBase),\n\t\tnegate: negate,\n\t\tabs: abs,\n\t\tmin: F2(min),\n\t\tmax: F2(max),\n\t\tclamp: F3(clamp),\n\t\tcompare: Utils.compare,\n\n\t\txor: F2(xor),\n\t\tnot: not,\n\n\t\ttruncate: truncate,\n\t\tceiling: Math.ceil,\n\t\tfloor: Math.floor,\n\t\tround: Math.round,\n\t\ttoFloat: function(x) { return x; },\n\t\tisNaN: isNaN,\n\t\tisInfinite: isInfinite\n\t};\n};\n\nElm.Native.Port = {};\n\nElm.Native.Port.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Port = localRuntime.Native.Port || {};\n\tif (localRuntime.Native.Port.values)\n\t{\n\t\treturn localRuntime.Native.Port.values;\n\t}\n\n\tvar NS;\n\n\t// INBOUND\n\n\tfunction inbound(name, type, converter)\n\t{\n\t\tif (!localRuntime.argsTracker[name])\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Port Error:\\n' +\n\t\t\t\t'No argument was given for the port named \\'' + name + '\\' with type:\\n\\n' +\n\t\t\t\t'    ' + type.split('\\n').join('\\n        ') + '\\n\\n' +\n\t\t\t\t'You need to provide an initial value!\\n\\n' +\n\t\t\t\t'Find out more about ports here <http://elm-lang.org/learn/Ports.elm>'\n\t\t\t);\n\t\t}\n\t\tvar arg = localRuntime.argsTracker[name];\n\t\targ.used = true;\n\n\t\treturn jsToElm(name, type, converter, arg.value);\n\t}\n\n\n\tfunction inboundSignal(name, type, converter)\n\t{\n\t\tvar initialValue = inbound(name, type, converter);\n\n\t\tif (!NS)\n\t\t{\n\t\t\tNS = Elm.Native.Signal.make(localRuntime);\n\t\t}\n\t\tvar signal = NS.input('inbound-port-' + name, initialValue);\n\n\t\tfunction send(jsValue)\n\t\t{\n\t\t\tvar elmValue = jsToElm(name, type, converter, jsValue);\n\t\t\tsetTimeout(function() {\n\t\t\t\tlocalRuntime.notify(signal.id, elmValue);\n\t\t\t}, 0);\n\t\t}\n\n\t\tlocalRuntime.ports[name] = { send: send };\n\n\t\treturn signal;\n\t}\n\n\n\tfunction jsToElm(name, type, converter, value)\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn converter(value);\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Port Error:\\n' +\n\t\t\t\t'Regarding the port named \\'' + name + '\\' with type:\\n\\n' +\n\t\t\t\t'    ' + type.split('\\n').join('\\n        ') + '\\n\\n' +\n\t\t\t\t'You just sent the value:\\n\\n' +\n\t\t\t\t'    ' + JSON.stringify(value) + '\\n\\n' +\n\t\t\t\t'but it cannot be converted to the necessary type.\\n' +\n\t\t\t\te.message\n\t\t\t);\n\t\t}\n\t}\n\n\n\t// OUTBOUND\n\n\tfunction outbound(name, converter, elmValue)\n\t{\n\t\tlocalRuntime.ports[name] = converter(elmValue);\n\t}\n\n\n\tfunction outboundSignal(name, converter, signal)\n\t{\n\t\tvar subscribers = [];\n\n\t\tfunction subscribe(handler)\n\t\t{\n\t\t\tsubscribers.push(handler);\n\t\t}\n\t\tfunction unsubscribe(handler)\n\t\t{\n\t\t\tsubscribers.pop(subscribers.indexOf(handler));\n\t\t}\n\n\t\tfunction notify(elmValue)\n\t\t{\n\t\t\tvar jsValue = converter(elmValue);\n\t\t\tvar len = subscribers.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tsubscribers[i](jsValue);\n\t\t\t}\n\t\t}\n\n\t\tif (!NS)\n\t\t{\n\t\t\tNS = Elm.Native.Signal.make(localRuntime);\n\t\t}\n\t\tNS.output('outbound-port-' + name, notify, signal);\n\n\t\tlocalRuntime.ports[name] = {\n\t\t\tsubscribe: subscribe,\n\t\t\tunsubscribe: unsubscribe\n\t\t};\n\n\t\treturn signal;\n\t}\n\n\n\treturn localRuntime.Native.Port.values = {\n\t\tinbound: inbound,\n\t\toutbound: outbound,\n\t\tinboundSignal: inboundSignal,\n\t\toutboundSignal: outboundSignal\n\t};\n};\n\nif (!Elm.fullscreen) {\n\t(function() {\n\t\t'use strict';\n\n\t\tvar Display = {\n\t\t\tFULLSCREEN: 0,\n\t\t\tCOMPONENT: 1,\n\t\t\tNONE: 2\n\t\t};\n\n\t\tElm.fullscreen = function(module, args)\n\t\t{\n\t\t\tvar container = document.createElement('div');\n\t\t\tdocument.body.appendChild(container);\n\t\t\treturn init(Display.FULLSCREEN, container, module, args || {});\n\t\t};\n\n\t\tElm.embed = function(module, container, args)\n\t\t{\n\t\t\tvar tag = container.tagName;\n\t\t\tif (tag !== 'DIV')\n\t\t\t{\n\t\t\t\tthrow new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n\t\t\t}\n\t\t\treturn init(Display.COMPONENT, container, module, args || {});\n\t\t};\n\n\t\tElm.worker = function(module, args)\n\t\t{\n\t\t\treturn init(Display.NONE, {}, module, args || {});\n\t\t};\n\n\t\tfunction init(display, container, module, args, moduleToReplace)\n\t\t{\n\t\t\t// defining state needed for an instance of the Elm RTS\n\t\t\tvar inputs = [];\n\n\t\t\t/* OFFSET\n\t\t\t * Elm's time traveling debugger lets you pause time. This means\n\t\t\t * \"now\" may be shifted a bit into the past. By wrapping Date.now()\n\t\t\t * we can manage this.\n\t\t\t */\n\t\t\tvar timer = {\n\t\t\t\tprogramStart: Date.now(),\n\t\t\t\tnow: function()\n\t\t\t\t{\n\t\t\t\t\treturn Date.now();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar updateInProgress = false;\n\t\t\tfunction notify(id, v)\n\t\t\t{\n\t\t\t\tif (updateInProgress)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'The notify function has been called synchronously!\\n' +\n\t\t\t\t\t\t'This can lead to frames being dropped.\\n' +\n\t\t\t\t\t\t'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n');\n\t\t\t\t}\n\t\t\t\tupdateInProgress = true;\n\t\t\t\tvar timestep = timer.now();\n\t\t\t\tfor (var i = inputs.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tinputs[i].notify(timestep, id, v);\n\t\t\t\t}\n\t\t\t\tupdateInProgress = false;\n\t\t\t}\n\t\t\tfunction setTimeout(func, delay)\n\t\t\t{\n\t\t\t\treturn window.setTimeout(func, delay);\n\t\t\t}\n\n\t\t\tvar listeners = [];\n\t\t\tfunction addListener(relevantInputs, domNode, eventName, func)\n\t\t\t{\n\t\t\t\tdomNode.addEventListener(eventName, func);\n\t\t\t\tvar listener = {\n\t\t\t\t\trelevantInputs: relevantInputs,\n\t\t\t\t\tdomNode: domNode,\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\tfunc: func\n\t\t\t\t};\n\t\t\t\tlisteners.push(listener);\n\t\t\t}\n\n\t\t\tvar argsTracker = {};\n\t\t\tfor (var name in args)\n\t\t\t{\n\t\t\t\targsTracker[name] = {\n\t\t\t\t\tvalue: args[name],\n\t\t\t\t\tused: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// create the actual RTS. Any impure modules will attach themselves to this\n\t\t\t// object. This permits many Elm programs to be embedded per document.\n\t\t\tvar elm = {\n\t\t\t\tnotify: notify,\n\t\t\t\tsetTimeout: setTimeout,\n\t\t\t\tnode: container,\n\t\t\t\taddListener: addListener,\n\t\t\t\tinputs: inputs,\n\t\t\t\ttimer: timer,\n\t\t\t\targsTracker: argsTracker,\n\t\t\t\tports: {},\n\n\t\t\t\tisFullscreen: function() { return display === Display.FULLSCREEN; },\n\t\t\t\tisEmbed: function() { return display === Display.COMPONENT; },\n\t\t\t\tisWorker: function() { return display === Display.NONE; }\n\t\t\t};\n\n\t\t\tfunction swap(newModule)\n\t\t\t{\n\t\t\t\tremoveListeners(listeners);\n\t\t\t\tvar div = document.createElement('div');\n\t\t\t\tvar newElm = init(display, div, newModule, args, elm);\n\t\t\t\tinputs = [];\n\n\t\t\t\treturn newElm;\n\t\t\t}\n\n\t\t\tfunction dispose()\n\t\t\t{\n\t\t\t\tremoveListeners(listeners);\n\t\t\t\tinputs = [];\n\t\t\t}\n\n\t\t\tvar Module = {};\n\t\t\ttry\n\t\t\t{\n\t\t\t\tModule = module.make(elm);\n\t\t\t\tcheckInputs(elm);\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tif (typeof container.appendChild === \"function\")\n\t\t\t\t{\n\t\t\t\t\tcontainer.appendChild(errorNode(error.message));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.error(error.message);\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (display !== Display.NONE)\n\t\t\t{\n\t\t\t\tvar graphicsNode = initGraphics(elm, Module);\n\t\t\t}\n\n\t\t\tvar rootNode = { kids: inputs };\n\t\t\ttrimDeadNodes(rootNode);\n\t\t\tinputs = rootNode.kids;\n\t\t\tfilterListeners(inputs, listeners);\n\n\t\t\taddReceivers(elm.ports);\n\n\t\t\tif (typeof moduleToReplace !== 'undefined')\n\t\t\t{\n\t\t\t\thotSwap(moduleToReplace, elm);\n\n\t\t\t\t// rerender scene if graphics are enabled.\n\t\t\t\tif (typeof graphicsNode !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\tgraphicsNode.notify(0, true, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tswap: swap,\n\t\t\t\tports: elm.ports,\n\t\t\t\tdispose: dispose\n\t\t\t};\n\t\t}\n\n\t\tfunction checkInputs(elm)\n\t\t{\n\t\t\tvar argsTracker = elm.argsTracker;\n\t\t\tfor (var name in argsTracker)\n\t\t\t{\n\t\t\t\tif (!argsTracker[name].used)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"Port Error:\\nYou provided an argument named '\" + name +\n\t\t\t\t\t\t\"' but there is no corresponding port!\\n\\n\" +\n\t\t\t\t\t\t\"Maybe add a port '\" + name + \"' to your Elm module?\\n\" +\n\t\t\t\t\t\t\"Maybe remove the '\" + name + \"' argument from your initialization code in JS?\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction errorNode(message)\n\t\t{\n\t\t\tvar code = document.createElement('code');\n\n\t\t\tvar lines = message.split('\\n');\n\t\t\tcode.appendChild(document.createTextNode(lines[0]));\n\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\tfor (var i = 1; i < lines.length; ++i)\n\t\t\t{\n\t\t\t\tcode.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i].replace(/  /g, '\\u00A0 ')));\n\t\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\t}\n\t\t\tcode.appendChild(document.createElement('br'));\n\t\t\tcode.appendChild(document.createTextNode('Open the developer console for more details.'));\n\t\t\treturn code;\n\t\t}\n\n\n\t\t//// FILTER SIGNALS ////\n\n\t\t// TODO: move this code into the signal module and create a function\n\t\t// Signal.initializeGraph that actually instantiates everything.\n\n\t\tfunction filterListeners(inputs, listeners)\n\t\t{\n\t\t\tloop:\n\t\t\tfor (var i = listeners.length; i--; )\n\t\t\t{\n\t\t\t\tvar listener = listeners[i];\n\t\t\t\tfor (var j = inputs.length; j--; )\n\t\t\t\t{\n\t\t\t\t\tif (listener.relevantInputs.indexOf(inputs[j].id) >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue loop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlistener.domNode.removeEventListener(listener.eventName, listener.func);\n\t\t\t}\n\t\t}\n\n\t\tfunction removeListeners(listeners)\n\t\t{\n\t\t\tfor (var i = listeners.length; i--; )\n\t\t\t{\n\t\t\t\tvar listener = listeners[i];\n\t\t\t\tlistener.domNode.removeEventListener(listener.eventName, listener.func);\n\t\t\t}\n\t\t}\n\n\t\t// add receivers for built-in ports if they are defined\n\t\tfunction addReceivers(ports)\n\t\t{\n\t\t\tif ('title' in ports)\n\t\t\t{\n\t\t\t\tif (typeof ports.title === 'string')\n\t\t\t\t{\n\t\t\t\t\tdocument.title = ports.title;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tports.title.subscribe(function(v) { document.title = v; });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ('redirect' in ports)\n\t\t\t{\n\t\t\t\tports.redirect.subscribe(function(v) {\n\t\t\t\t\tif (v.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\twindow.location = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\t// returns a boolean representing whether the node is alive or not.\n\t\tfunction trimDeadNodes(node)\n\t\t{\n\t\t\tif (node.isOutput)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar liveKids = [];\n\t\t\tfor (var i = node.kids.length; i--; )\n\t\t\t{\n\t\t\t\tvar kid = node.kids[i];\n\t\t\t\tif (trimDeadNodes(kid))\n\t\t\t\t{\n\t\t\t\t\tliveKids.push(kid);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode.kids = liveKids;\n\n\t\t\treturn liveKids.length > 0;\n\t\t}\n\n\n\t\t////  RENDERING  ////\n\n\t\tfunction initGraphics(elm, Module)\n\t\t{\n\t\t\tif (!('main' in Module))\n\t\t\t{\n\t\t\t\tthrow new Error(\"'main' is missing! What do I display?!\");\n\t\t\t}\n\n\t\t\tvar signalGraph = Module.main;\n\n\t\t\t// make sure the signal graph is actually a signal & extract the visual model\n\t\t\tif (!('notify' in signalGraph))\n\t\t\t{\n\t\t\t\tsignalGraph = Elm.Signal.make(elm).constant(signalGraph);\n\t\t\t}\n\t\t\tvar initialScene = signalGraph.value;\n\n\t\t\t// Figure out what the render functions should be\n\t\t\tvar render;\n\t\t\tvar update;\n\t\t\tif (initialScene.ctor === 'Element_elm_builtin')\n\t\t\t{\n\t\t\t\tvar Element = Elm.Native.Graphics.Element.make(elm);\n\t\t\t\trender = Element.render;\n\t\t\t\tupdate = Element.updateAndReplace;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar VirtualDom = Elm.Native.VirtualDom.make(elm);\n\t\t\t\trender = VirtualDom.render;\n\t\t\t\tupdate = VirtualDom.updateAndReplace;\n\t\t\t}\n\n\t\t\t// Add the initialScene to the DOM\n\t\t\tvar container = elm.node;\n\t\t\tvar node = render(initialScene);\n\t\t\twhile (container.firstChild)\n\t\t\t{\n\t\t\t\tcontainer.removeChild(container.firstChild);\n\t\t\t}\n\t\t\tcontainer.appendChild(node);\n\n\t\t\tvar _requestAnimationFrame =\n\t\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t\t\t\t? requestAnimationFrame\n\t\t\t\t\t: function(cb) { setTimeout(cb, 1000 / 60); }\n\t\t\t\t\t;\n\n\t\t\t// domUpdate is called whenever the main Signal changes.\n\t\t\t//\n\t\t\t// domUpdate and drawCallback implement a small state machine in order\n\t\t\t// to schedule only 1 draw per animation frame. This enforces that\n\t\t\t// once draw has been called, it will not be called again until the\n\t\t\t// next frame.\n\t\t\t//\n\t\t\t// drawCallback is scheduled whenever\n\t\t\t// 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n\t\t\t// 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n\t\t\t//\n\t\t\t// Invariants:\n\t\t\t// 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n\t\t\t// 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n\t\t\t//    scheduled drawCallback.\n\t\t\tvar NO_REQUEST = 0;\n\t\t\tvar PENDING_REQUEST = 1;\n\t\t\tvar EXTRA_REQUEST = 2;\n\t\t\tvar state = NO_REQUEST;\n\t\t\tvar savedScene = initialScene;\n\t\t\tvar scheduledScene = initialScene;\n\n\t\t\tfunction domUpdate(newScene)\n\t\t\t{\n\t\t\t\tscheduledScene = newScene;\n\n\t\t\t\tswitch (state)\n\t\t\t\t{\n\t\t\t\t\tcase NO_REQUEST:\n\t\t\t\t\t\t_requestAnimationFrame(drawCallback);\n\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase PENDING_REQUEST:\n\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase EXTRA_REQUEST:\n\t\t\t\t\t\tstate = PENDING_REQUEST;\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction drawCallback()\n\t\t\t{\n\t\t\t\tswitch (state)\n\t\t\t\t{\n\t\t\t\t\tcase NO_REQUEST:\n\t\t\t\t\t\t// This state should not be possible. How can there be no\n\t\t\t\t\t\t// request, yet somehow we are actively fulfilling a\n\t\t\t\t\t\t// request?\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Unexpected draw callback.\\n' +\n\t\t\t\t\t\t\t'Please report this to <https://github.com/elm-lang/core/issues>.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\tcase PENDING_REQUEST:\n\t\t\t\t\t\t// At this point, we do not *know* that another frame is\n\t\t\t\t\t\t// needed, but we make an extra request to rAF just in\n\t\t\t\t\t\t// case. It's possible to drop a frame if rAF is called\n\t\t\t\t\t\t// too late, so we just do it preemptively.\n\t\t\t\t\t\t_requestAnimationFrame(drawCallback);\n\t\t\t\t\t\tstate = EXTRA_REQUEST;\n\n\t\t\t\t\t\t// There's also stuff we definitely need to draw.\n\t\t\t\t\t\tdraw();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tcase EXTRA_REQUEST:\n\t\t\t\t\t\t// Turns out the extra request was not needed, so we will\n\t\t\t\t\t\t// stop calling rAF. No reason to call it all the time if\n\t\t\t\t\t\t// no one needs it.\n\t\t\t\t\t\tstate = NO_REQUEST;\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction draw()\n\t\t\t{\n\t\t\t\tupdate(elm.node.firstChild, savedScene, scheduledScene);\n\t\t\t\tif (elm.Native.Window)\n\t\t\t\t{\n\t\t\t\t\telm.Native.Window.values.resizeIfNeeded();\n\t\t\t\t}\n\t\t\t\tsavedScene = scheduledScene;\n\t\t\t}\n\n\t\t\tvar renderer = Elm.Native.Signal.make(elm).output('main', domUpdate, signalGraph);\n\n\t\t\t// must check for resize after 'renderer' is created so\n\t\t\t// that changes show up.\n\t\t\tif (elm.Native.Window)\n\t\t\t{\n\t\t\t\telm.Native.Window.values.resizeIfNeeded();\n\t\t\t}\n\n\t\t\treturn renderer;\n\t\t}\n\n\t\t//// HOT SWAPPING ////\n\n\t\t// Returns boolean indicating if the swap was successful.\n\t\t// Requires that the two signal graphs have exactly the same\n\t\t// structure.\n\t\tfunction hotSwap(from, to)\n\t\t{\n\t\t\tfunction similar(nodeOld, nodeNew)\n\t\t\t{\n\t\t\t\tif (nodeOld.id !== nodeNew.id)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (nodeOld.isOutput)\n\t\t\t\t{\n\t\t\t\t\treturn nodeNew.isOutput;\n\t\t\t\t}\n\t\t\t\treturn nodeOld.kids.length === nodeNew.kids.length;\n\t\t\t}\n\t\t\tfunction swap(nodeOld, nodeNew)\n\t\t\t{\n\t\t\t\tnodeNew.value = nodeOld.value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n\t\t\tif (canSwap)\n\t\t\t{\n\t\t\t\tdepthFirstTraversals(swap, from.inputs, to.inputs);\n\t\t\t}\n\t\t\tfrom.node.parentNode.replaceChild(to.node, from.node);\n\n\t\t\treturn canSwap;\n\t\t}\n\n\t\t// Returns false if the node operation f ever fails.\n\t\tfunction depthFirstTraversals(f, queueOld, queueNew)\n\t\t{\n\t\t\tif (queueOld.length !== queueNew.length)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tqueueOld = queueOld.slice(0);\n\t\t\tqueueNew = queueNew.slice(0);\n\n\t\t\tvar seen = [];\n\t\t\twhile (queueOld.length > 0 && queueNew.length > 0)\n\t\t\t{\n\t\t\t\tvar nodeOld = queueOld.pop();\n\t\t\t\tvar nodeNew = queueNew.pop();\n\t\t\t\tif (seen.indexOf(nodeOld.id) < 0)\n\t\t\t\t{\n\t\t\t\t\tif (!f(nodeOld, nodeNew))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tqueueOld = queueOld.concat(nodeOld.kids || []);\n\t\t\t\t\tqueueNew = queueNew.concat(nodeNew.kids || []);\n\t\t\t\t\tseen.push(nodeOld.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}());\n\n\tfunction F2(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return fun(a,b); }; }\n\t\twrapper.arity = 2;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F3(fun)\n\t{\n\t\tfunction wrapper(a) {\n\t\t\treturn function(b) { return function(c) { return fun(a, b, c); }; };\n\t\t}\n\t\twrapper.arity = 3;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F4(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return fun(a, b, c, d); }; }; };\n\t\t}\n\t\twrapper.arity = 4;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F5(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n\t\t}\n\t\twrapper.arity = 5;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F6(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\treturn fun(a, b, c, d, e, f); }; }; }; }; };\n\t\t}\n\t\twrapper.arity = 6;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F7(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\treturn function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n\t\t}\n\t\twrapper.arity = 7;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F8(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\treturn function(g) { return function(h) {\n\t\t\treturn fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n\t\t}\n\t\twrapper.arity = 8;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction F9(fun)\n\t{\n\t\tfunction wrapper(a) { return function(b) { return function(c) {\n\t\t\treturn function(d) { return function(e) { return function(f) {\n\t\t\treturn function(g) { return function(h) { return function(i) {\n\t\t\treturn fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n\t\t}\n\t\twrapper.arity = 9;\n\t\twrapper.func = fun;\n\t\treturn wrapper;\n\t}\n\n\tfunction A2(fun, a, b)\n\t{\n\t\treturn fun.arity === 2\n\t\t\t? fun.func(a, b)\n\t\t\t: fun(a)(b);\n\t}\n\tfunction A3(fun, a, b, c)\n\t{\n\t\treturn fun.arity === 3\n\t\t\t? fun.func(a, b, c)\n\t\t\t: fun(a)(b)(c);\n\t}\n\tfunction A4(fun, a, b, c, d)\n\t{\n\t\treturn fun.arity === 4\n\t\t\t? fun.func(a, b, c, d)\n\t\t\t: fun(a)(b)(c)(d);\n\t}\n\tfunction A5(fun, a, b, c, d, e)\n\t{\n\t\treturn fun.arity === 5\n\t\t\t? fun.func(a, b, c, d, e)\n\t\t\t: fun(a)(b)(c)(d)(e);\n\t}\n\tfunction A6(fun, a, b, c, d, e, f)\n\t{\n\t\treturn fun.arity === 6\n\t\t\t? fun.func(a, b, c, d, e, f)\n\t\t\t: fun(a)(b)(c)(d)(e)(f);\n\t}\n\tfunction A7(fun, a, b, c, d, e, f, g)\n\t{\n\t\treturn fun.arity === 7\n\t\t\t? fun.func(a, b, c, d, e, f, g)\n\t\t\t: fun(a)(b)(c)(d)(e)(f)(g);\n\t}\n\tfunction A8(fun, a, b, c, d, e, f, g, h)\n\t{\n\t\treturn fun.arity === 8\n\t\t\t? fun.func(a, b, c, d, e, f, g, h)\n\t\t\t: fun(a)(b)(c)(d)(e)(f)(g)(h);\n\t}\n\tfunction A9(fun, a, b, c, d, e, f, g, h, i)\n\t{\n\t\treturn fun.arity === 9\n\t\t\t? fun.func(a, b, c, d, e, f, g, h, i)\n\t\t\t: fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n\t}\n}\n\nElm.Native = Elm.Native || {};\nElm.Native.Utils = {};\nElm.Native.Utils.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Utils = localRuntime.Native.Utils || {};\n\tif (localRuntime.Native.Utils.values)\n\t{\n\t\treturn localRuntime.Native.Utils.values;\n\t}\n\n\n\t// COMPARISONS\n\n\tfunction eq(l, r)\n\t{\n\t\tvar stack = [{'x': l, 'y': r}];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tvar front = stack.pop();\n\t\t\tvar x = front.x;\n\t\t\tvar y = front.y;\n\t\t\tif (x === y)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof x === 'object')\n\t\t\t{\n\t\t\t\tvar c = 0;\n\t\t\t\tfor (var i in x)\n\t\t\t\t{\n\t\t\t\t\t++c;\n\t\t\t\t\tif (i in y)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i !== 'ctor')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstack.push({ 'x': x[i], 'y': y[i] });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ('ctor' in x)\n\t\t\t\t{\n\t\t\t\t\tstack.push({'x': x.ctor, 'y': y.ctor});\n\t\t\t\t}\n\t\t\t\tif (c !== Object.keys(y).length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof x === 'function')\n\t\t\t{\n\t\t\t\tthrow new Error('Equality error: general function equality is ' +\n\t\t\t\t\t\t\t\t'undecidable, and therefore, unsupported');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// code in Generate/JavaScript.hs depends on the particular\n\t// integer values assigned to LT, EQ, and GT\n\tvar LT = -1, EQ = 0, GT = 1, ord = ['LT', 'EQ', 'GT'];\n\n\tfunction compare(x, y)\n\t{\n\t\treturn {\n\t\t\tctor: ord[cmp(x, y) + 1]\n\t\t};\n\t}\n\n\tfunction cmp(x, y) {\n\t\tvar ord;\n\t\tif (typeof x !== 'object')\n\t\t{\n\t\t\treturn x === y ? EQ : x < y ? LT : GT;\n\t\t}\n\t\telse if (x.isChar)\n\t\t{\n\t\t\tvar a = x.toString();\n\t\t\tvar b = y.toString();\n\t\t\treturn a === b\n\t\t\t\t? EQ\n\t\t\t\t: a < b\n\t\t\t\t\t? LT\n\t\t\t\t\t: GT;\n\t\t}\n\t\telse if (x.ctor === '::' || x.ctor === '[]')\n\t\t{\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (x.ctor === '[]' && y.ctor === '[]')\n\t\t\t\t{\n\t\t\t\t\treturn EQ;\n\t\t\t\t}\n\t\t\t\tif (x.ctor !== y.ctor)\n\t\t\t\t{\n\t\t\t\t\treturn x.ctor === '[]' ? LT : GT;\n\t\t\t\t}\n\t\t\t\tord = cmp(x._0, y._0);\n\t\t\t\tif (ord !== EQ)\n\t\t\t\t{\n\t\t\t\t\treturn ord;\n\t\t\t\t}\n\t\t\t\tx = x._1;\n\t\t\t\ty = y._1;\n\t\t\t}\n\t\t}\n\t\telse if (x.ctor.slice(0, 6) === '_Tuple')\n\t\t{\n\t\t\tvar n = x.ctor.slice(6) - 0;\n\t\t\tvar err = 'cannot compare tuples with more than 6 elements.';\n\t\t\tif (n === 0) return EQ;\n\t\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n\t\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n\t\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n\t\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n\t\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n\t\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n\t\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n\t\t\treturn EQ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Comparison error: comparison is only defined on ints, ' +\n\t\t\t\t\t\t\t'floats, times, chars, strings, lists of comparable values, ' +\n\t\t\t\t\t\t\t'and tuples of comparable values.');\n\t\t}\n\t}\n\n\n\t// TUPLES\n\n\tvar Tuple0 = {\n\t\tctor: '_Tuple0'\n\t};\n\n\tfunction Tuple2(x, y)\n\t{\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: x,\n\t\t\t_1: y\n\t\t};\n\t}\n\n\n\t// LITERALS\n\n\tfunction chr(c)\n\t{\n\t\tvar x = new String(c);\n\t\tx.isChar = true;\n\t\treturn x;\n\t}\n\n\tfunction txt(str)\n\t{\n\t\tvar t = new String(str);\n\t\tt.text = true;\n\t\treturn t;\n\t}\n\n\n\t// GUID\n\n\tvar count = 0;\n\tfunction guid(_)\n\t{\n\t\treturn count++;\n\t}\n\n\n\t// RECORDS\n\n\tfunction update(oldRecord, updatedFields)\n\t{\n\t\tvar newRecord = {};\n\t\tfor (var key in oldRecord)\n\t\t{\n\t\t\tvar value = (key in updatedFields) ? updatedFields[key] : oldRecord[key];\n\t\t\tnewRecord[key] = value;\n\t\t}\n\t\treturn newRecord;\n\t}\n\n\n\t// MOUSE COORDINATES\n\n\tfunction getXY(e)\n\t{\n\t\tvar posx = 0;\n\t\tvar posy = 0;\n\t\tif (e.pageX || e.pageY)\n\t\t{\n\t\t\tposx = e.pageX;\n\t\t\tposy = e.pageY;\n\t\t}\n\t\telse if (e.clientX || e.clientY)\n\t\t{\n\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t}\n\n\t\tif (localRuntime.isEmbed())\n\t\t{\n\t\t\tvar rect = localRuntime.node.getBoundingClientRect();\n\t\t\tvar relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\tvar rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t// TODO: figure out if there is a way to avoid rounding here\n\t\t\tposx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n\t\t\tposy = posy - Math.round(rely) - localRuntime.node.clientTop;\n\t\t}\n\t\treturn Tuple2(posx, posy);\n\t}\n\n\n\t//// LIST STUFF ////\n\n\tvar Nil = { ctor: '[]' };\n\n\tfunction Cons(hd, tl)\n\t{\n\t\treturn {\n\t\t\tctor: '::',\n\t\t\t_0: hd,\n\t\t\t_1: tl\n\t\t};\n\t}\n\n\tfunction list(arr)\n\t{\n\t\tvar out = Nil;\n\t\tfor (var i = arr.length; i--; )\n\t\t{\n\t\t\tout = Cons(arr[i], out);\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction range(lo, hi)\n\t{\n\t\tvar list = Nil;\n\t\tif (lo <= hi)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tlist = Cons(hi, list);\n\t\t\t}\n\t\t\twhile (hi-- > lo);\n\t\t}\n\t\treturn list;\n\t}\n\n\tfunction append(xs, ys)\n\t{\n\t\t// append Strings\n\t\tif (typeof xs === 'string')\n\t\t{\n\t\t\treturn xs + ys;\n\t\t}\n\n\t\t// append Text\n\t\tif (xs.ctor.slice(0, 5) === 'Text:')\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: 'Text:Append',\n\t\t\t\t_0: xs,\n\t\t\t\t_1: ys\n\t\t\t};\n\t\t}\n\n\n\t\t// append Lists\n\t\tif (xs.ctor === '[]')\n\t\t{\n\t\t\treturn ys;\n\t\t}\n\t\tvar root = Cons(xs._0, Nil);\n\t\tvar curr = root;\n\t\txs = xs._1;\n\t\twhile (xs.ctor !== '[]')\n\t\t{\n\t\t\tcurr._1 = Cons(xs._0, Nil);\n\t\t\txs = xs._1;\n\t\t\tcurr = curr._1;\n\t\t}\n\t\tcurr._1 = ys;\n\t\treturn root;\n\t}\n\n\n\t// CRASHES\n\n\tfunction crash(moduleName, region)\n\t{\n\t\treturn function(message) {\n\t\t\tthrow new Error(\n\t\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\n\t\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t\t+ message\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction crashCase(moduleName, region, value)\n\t{\n\t\treturn function(message) {\n\t\t\tthrow new Error(\n\t\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\n\t\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\n\t\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\n\t\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t\t+ message\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction regionToString(region)\n\t{\n\t\tif (region.start.line == region.end.line)\n\t\t{\n\t\t\treturn 'on line ' + region.start.line;\n\t\t}\n\t\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\n\t}\n\n\n\t// BAD PORTS\n\n\tfunction badPort(expected, received)\n\t{\n\t\tthrow new Error(\n\t\t\t'Runtime error when sending values through a port.\\n\\n'\n\t\t\t+ 'Expecting ' + expected + ' but was given ' + formatValue(received)\n\t\t);\n\t}\n\n\tfunction formatValue(value)\n\t{\n\t\t// Explicity format undefined values as \"undefined\"\n\t\t// because JSON.stringify(undefined) unhelpfully returns \"\"\n\t\treturn (value === undefined) ? \"undefined\" : JSON.stringify(value);\n\t}\n\n\n\t// TO STRING\n\n\tvar _Array;\n\tvar Dict;\n\tvar List;\n\n\tvar toString = function(v)\n\t{\n\t\tvar type = typeof v;\n\t\tif (type === 'function')\n\t\t{\n\t\t\tvar name = v.func ? v.func.name : v.name;\n\t\t\treturn '<function' + (name === '' ? '' : ': ') + name + '>';\n\t\t}\n\t\telse if (type === 'boolean')\n\t\t{\n\t\t\treturn v ? 'True' : 'False';\n\t\t}\n\t\telse if (type === 'number')\n\t\t{\n\t\t\treturn v + '';\n\t\t}\n\t\telse if ((v instanceof String) && v.isChar)\n\t\t{\n\t\t\treturn '\\'' + addSlashes(v, true) + '\\'';\n\t\t}\n\t\telse if (type === 'string')\n\t\t{\n\t\t\treturn '\"' + addSlashes(v, false) + '\"';\n\t\t}\n\t\telse if (type === 'object' && 'ctor' in v)\n\t\t{\n\t\t\tif (v.ctor.substring(0, 6) === '_Tuple')\n\t\t\t{\n\t\t\t\tvar output = [];\n\t\t\t\tfor (var k in v)\n\t\t\t\t{\n\t\t\t\t\tif (k === 'ctor') continue;\n\t\t\t\t\toutput.push(toString(v[k]));\n\t\t\t\t}\n\t\t\t\treturn '(' + output.join(',') + ')';\n\t\t\t}\n\t\t\telse if (v.ctor === '_Array')\n\t\t\t{\n\t\t\t\tif (!_Array)\n\t\t\t\t{\n\t\t\t\t\t_Array = Elm.Array.make(localRuntime);\n\t\t\t\t}\n\t\t\t\tvar list = _Array.toList(v);\n\t\t\t\treturn 'Array.fromList ' + toString(list);\n\t\t\t}\n\t\t\telse if (v.ctor === '::')\n\t\t\t{\n\t\t\t\tvar output = '[' + toString(v._0);\n\t\t\t\tv = v._1;\n\t\t\t\twhile (v.ctor === '::')\n\t\t\t\t{\n\t\t\t\t\toutput += ',' + toString(v._0);\n\t\t\t\t\tv = v._1;\n\t\t\t\t}\n\t\t\t\treturn output + ']';\n\t\t\t}\n\t\t\telse if (v.ctor === '[]')\n\t\t\t{\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\telse if (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin' || v.ctor === 'Set_elm_builtin')\n\t\t\t{\n\t\t\t\tif (!Dict)\n\t\t\t\t{\n\t\t\t\t\tDict = Elm.Dict.make(localRuntime);\n\t\t\t\t}\n\t\t\t\tvar list;\n\t\t\t\tvar name;\n\t\t\t\tif (v.ctor === 'Set_elm_builtin')\n\t\t\t\t{\n\t\t\t\t\tif (!List)\n\t\t\t\t\t{\n\t\t\t\t\t\tList = Elm.List.make(localRuntime);\n\t\t\t\t\t}\n\t\t\t\t\tname = 'Set';\n\t\t\t\t\tlist = A2(List.map, function(x) {return x._0; }, Dict.toList(v._0));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tname = 'Dict';\n\t\t\t\t\tlist = Dict.toList(v);\n\t\t\t\t}\n\t\t\t\treturn name + '.fromList ' + toString(list);\n\t\t\t}\n\t\t\telse if (v.ctor.slice(0, 5) === 'Text:')\n\t\t\t{\n\t\t\t\treturn '<text>';\n\t\t\t}\n\t\t\telse if (v.ctor === 'Element_elm_builtin')\n\t\t\t{\n\t\t\t\treturn '<element>'\n\t\t\t}\n\t\t\telse if (v.ctor === 'Form_elm_builtin')\n\t\t\t{\n\t\t\t\treturn '<form>'\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar output = '';\n\t\t\t\tfor (var i in v)\n\t\t\t\t{\n\t\t\t\t\tif (i === 'ctor') continue;\n\t\t\t\t\tvar str = toString(v[i]);\n\t\t\t\t\tvar parenless = str[0] === '{' || str[0] === '<' || str.indexOf(' ') < 0;\n\t\t\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t\t\t}\n\t\t\t\treturn v.ctor + output;\n\t\t\t}\n\t\t}\n\t\telse if (type === 'object' && 'notify' in v && 'id' in v)\n\t\t{\n\t\t\treturn '<signal>';\n\t\t}\n\t\telse if (type === 'object')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in v)\n\t\t\t{\n\t\t\t\toutput.push(k + ' = ' + toString(v[k]));\n\t\t\t}\n\t\t\tif (output.length === 0)\n\t\t\t{\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{ ' + output.join(', ') + ' }';\n\t\t}\n\t\treturn '<internal structure>';\n\t};\n\n\tfunction addSlashes(str, isChar)\n\t{\n\t\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\n\t\t\t\t  .replace(/\\n/g, '\\\\n')\n\t\t\t\t  .replace(/\\t/g, '\\\\t')\n\t\t\t\t  .replace(/\\r/g, '\\\\r')\n\t\t\t\t  .replace(/\\v/g, '\\\\v')\n\t\t\t\t  .replace(/\\0/g, '\\\\0');\n\t\tif (isChar)\n\t\t{\n\t\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t\t}\n\t}\n\n\n\treturn localRuntime.Native.Utils.values = {\n\t\teq: eq,\n\t\tcmp: cmp,\n\t\tcompare: F2(compare),\n\t\tTuple0: Tuple0,\n\t\tTuple2: Tuple2,\n\t\tchr: chr,\n\t\ttxt: txt,\n\t\tupdate: update,\n\t\tguid: guid,\n\t\tgetXY: getXY,\n\n\t\tNil: Nil,\n\t\tCons: Cons,\n\t\tlist: list,\n\t\trange: range,\n\t\tappend: F2(append),\n\n\t\tcrash: crash,\n\t\tcrashCase: crashCase,\n\t\tbadPort: badPort,\n\n\t\ttoString: toString\n\t};\n};\n\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   \"use strict\";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values) return _elm.Basics.values;\n   var _U = Elm.Native.Utils.make(_elm),$Native$Basics = Elm.Native.Basics.make(_elm),$Native$Utils = Elm.Native.Utils.make(_elm);\n   var _op = {};\n   var uncurry = F2(function (f,_p0) {    var _p1 = _p0;return A2(f,_p1._0,_p1._1);});\n   var curry = F3(function (f,a,b) {    return f({ctor: \"_Tuple2\",_0: a,_1: b});});\n   var flip = F3(function (f,b,a) {    return A2(f,a,b);});\n   var snd = function (_p2) {    var _p3 = _p2;return _p3._1;};\n   var fst = function (_p4) {    var _p5 = _p4;return _p5._0;};\n   var always = F2(function (a,_p6) {    return a;});\n   var identity = function (x) {    return x;};\n   _op[\"<|\"] = F2(function (f,x) {    return f(x);});\n   _op[\"|>\"] = F2(function (x,f) {    return f(x);});\n   _op[\">>\"] = F3(function (f,g,x) {    return g(f(x));});\n   _op[\"<<\"] = F3(function (g,f,x) {    return g(f(x));});\n   _op[\"++\"] = $Native$Utils.append;\n   var toString = $Native$Utils.toString;\n   var isInfinite = $Native$Basics.isInfinite;\n   var isNaN = $Native$Basics.isNaN;\n   var toFloat = $Native$Basics.toFloat;\n   var ceiling = $Native$Basics.ceiling;\n   var floor = $Native$Basics.floor;\n   var truncate = $Native$Basics.truncate;\n   var round = $Native$Basics.round;\n   var not = $Native$Basics.not;\n   var xor = $Native$Basics.xor;\n   _op[\"||\"] = $Native$Basics.or;\n   _op[\"&&\"] = $Native$Basics.and;\n   var max = $Native$Basics.max;\n   var min = $Native$Basics.min;\n   var GT = {ctor: \"GT\"};\n   var EQ = {ctor: \"EQ\"};\n   var LT = {ctor: \"LT\"};\n   var compare = $Native$Basics.compare;\n   _op[\">=\"] = $Native$Basics.ge;\n   _op[\"<=\"] = $Native$Basics.le;\n   _op[\">\"] = $Native$Basics.gt;\n   _op[\"<\"] = $Native$Basics.lt;\n   _op[\"/=\"] = $Native$Basics.neq;\n   _op[\"==\"] = $Native$Basics.eq;\n   var e = $Native$Basics.e;\n   var pi = $Native$Basics.pi;\n   var clamp = $Native$Basics.clamp;\n   var logBase = $Native$Basics.logBase;\n   var abs = $Native$Basics.abs;\n   var negate = $Native$Basics.negate;\n   var sqrt = $Native$Basics.sqrt;\n   var atan2 = $Native$Basics.atan2;\n   var atan = $Native$Basics.atan;\n   var asin = $Native$Basics.asin;\n   var acos = $Native$Basics.acos;\n   var tan = $Native$Basics.tan;\n   var sin = $Native$Basics.sin;\n   var cos = $Native$Basics.cos;\n   _op[\"^\"] = $Native$Basics.exp;\n   _op[\"%\"] = $Native$Basics.mod;\n   var rem = $Native$Basics.rem;\n   _op[\"//\"] = $Native$Basics.div;\n   _op[\"/\"] = $Native$Basics.floatDiv;\n   _op[\"*\"] = $Native$Basics.mul;\n   _op[\"-\"] = $Native$Basics.sub;\n   _op[\"+\"] = $Native$Basics.add;\n   var toPolar = $Native$Basics.toPolar;\n   var fromPolar = $Native$Basics.fromPolar;\n   var turns = $Native$Basics.turns;\n   var degrees = $Native$Basics.degrees;\n   var radians = function (t) {    return t;};\n   return _elm.Basics.values = {_op: _op\n                               ,max: max\n                               ,min: min\n                               ,compare: compare\n                               ,not: not\n                               ,xor: xor\n                               ,rem: rem\n                               ,negate: negate\n                               ,abs: abs\n                               ,sqrt: sqrt\n                               ,clamp: clamp\n                               ,logBase: logBase\n                               ,e: e\n                               ,pi: pi\n                               ,cos: cos\n                               ,sin: sin\n                               ,tan: tan\n                               ,acos: acos\n                               ,asin: asin\n                               ,atan: atan\n                               ,atan2: atan2\n                               ,round: round\n                               ,floor: floor\n                               ,ceiling: ceiling\n                               ,truncate: truncate\n                               ,toFloat: toFloat\n                               ,degrees: degrees\n                               ,radians: radians\n                               ,turns: turns\n                               ,toPolar: toPolar\n                               ,fromPolar: fromPolar\n                               ,isNaN: isNaN\n                               ,isInfinite: isInfinite\n                               ,toString: toString\n                               ,fst: fst\n                               ,snd: snd\n                               ,identity: identity\n                               ,always: always\n                               ,flip: flip\n                               ,curry: curry\n                               ,uncurry: uncurry\n                               ,LT: LT\n                               ,EQ: EQ\n                               ,GT: GT};\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   \"use strict\";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values) return _elm.Maybe.values;\n   var _U = Elm.Native.Utils.make(_elm);\n   var _op = {};\n   var withDefault = F2(function ($default,maybe) {    var _p0 = maybe;if (_p0.ctor === \"Just\") {    return _p0._0;} else {    return $default;}});\n   var Nothing = {ctor: \"Nothing\"};\n   var oneOf = function (maybes) {\n      oneOf: while (true) {\n         var _p1 = maybes;\n         if (_p1.ctor === \"[]\") {\n               return Nothing;\n            } else {\n               var _p3 = _p1._0;\n               var _p2 = _p3;\n               if (_p2.ctor === \"Nothing\") {\n                     var _v3 = _p1._1;\n                     maybes = _v3;\n                     continue oneOf;\n                  } else {\n                     return _p3;\n                  }\n            }\n      }\n   };\n   var andThen = F2(function (maybeValue,callback) {\n      var _p4 = maybeValue;\n      if (_p4.ctor === \"Just\") {\n            return callback(_p4._0);\n         } else {\n            return Nothing;\n         }\n   });\n   var Just = function (a) {    return {ctor: \"Just\",_0: a};};\n   var map = F2(function (f,maybe) {    var _p5 = maybe;if (_p5.ctor === \"Just\") {    return Just(f(_p5._0));} else {    return Nothing;}});\n   var map2 = F3(function (func,ma,mb) {\n      var _p6 = {ctor: \"_Tuple2\",_0: ma,_1: mb};\n      if (_p6.ctor === \"_Tuple2\" && _p6._0.ctor === \"Just\" && _p6._1.ctor === \"Just\") {\n            return Just(A2(func,_p6._0._0,_p6._1._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map3 = F4(function (func,ma,mb,mc) {\n      var _p7 = {ctor: \"_Tuple3\",_0: ma,_1: mb,_2: mc};\n      if (_p7.ctor === \"_Tuple3\" && _p7._0.ctor === \"Just\" && _p7._1.ctor === \"Just\" && _p7._2.ctor === \"Just\") {\n            return Just(A3(func,_p7._0._0,_p7._1._0,_p7._2._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map4 = F5(function (func,ma,mb,mc,md) {\n      var _p8 = {ctor: \"_Tuple4\",_0: ma,_1: mb,_2: mc,_3: md};\n      if (_p8.ctor === \"_Tuple4\" && _p8._0.ctor === \"Just\" && _p8._1.ctor === \"Just\" && _p8._2.ctor === \"Just\" && _p8._3.ctor === \"Just\") {\n            return Just(A4(func,_p8._0._0,_p8._1._0,_p8._2._0,_p8._3._0));\n         } else {\n            return Nothing;\n         }\n   });\n   var map5 = F6(function (func,ma,mb,mc,md,me) {\n      var _p9 = {ctor: \"_Tuple5\",_0: ma,_1: mb,_2: mc,_3: md,_4: me};\n      if (_p9.ctor === \"_Tuple5\" && _p9._0.ctor === \"Just\" && _p9._1.ctor === \"Just\" && _p9._2.ctor === \"Just\" && _p9._3.ctor === \"Just\" && _p9._4.ctor === \"Just\")\n      {\n            return Just(A5(func,_p9._0._0,_p9._1._0,_p9._2._0,_p9._3._0,_p9._4._0));\n         } else {\n            return Nothing;\n         }\n   });\n   return _elm.Maybe.values = {_op: _op\n                              ,andThen: andThen\n                              ,map: map\n                              ,map2: map2\n                              ,map3: map3\n                              ,map4: map4\n                              ,map5: map5\n                              ,withDefault: withDefault\n                              ,oneOf: oneOf\n                              ,Just: Just\n                              ,Nothing: Nothing};\n};\nElm.Native.List = {};\nElm.Native.List.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.List = localRuntime.Native.List || {};\n\tif (localRuntime.Native.List.values)\n\t{\n\t\treturn localRuntime.Native.List.values;\n\t}\n\tif ('values' in Elm.Native.List)\n\t{\n\t\treturn localRuntime.Native.List.values = Elm.Native.List.values;\n\t}\n\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\tvar Nil = Utils.Nil;\n\tvar Cons = Utils.Cons;\n\n\tvar fromArray = Utils.list;\n\n\tfunction toArray(xs)\n\t{\n\t\tvar out = [];\n\t\twhile (xs.ctor !== '[]')\n\t\t{\n\t\t\tout.push(xs._0);\n\t\t\txs = xs._1;\n\t\t}\n\t\treturn out;\n\t}\n\n\t// f defined similarly for both foldl and foldr (NB: different from Haskell)\n\t// ie, foldl : (a -> b -> b) -> b -> [a] -> b\n\tfunction foldl(f, b, xs)\n\t{\n\t\tvar acc = b;\n\t\twhile (xs.ctor !== '[]')\n\t\t{\n\t\t\tacc = A2(f, xs._0, acc);\n\t\t\txs = xs._1;\n\t\t}\n\t\treturn acc;\n\t}\n\n\tfunction foldr(f, b, xs)\n\t{\n\t\tvar arr = toArray(xs);\n\t\tvar acc = b;\n\t\tfor (var i = arr.length; i--; )\n\t\t{\n\t\t\tacc = A2(f, arr[i], acc);\n\t\t}\n\t\treturn acc;\n\t}\n\n\tfunction map2(f, xs, ys)\n\t{\n\t\tvar arr = [];\n\t\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\n\t\t{\n\t\t\tarr.push(A2(f, xs._0, ys._0));\n\t\t\txs = xs._1;\n\t\t\tys = ys._1;\n\t\t}\n\t\treturn fromArray(arr);\n\t}\n\n\tfunction map3(f, xs, ys, zs)\n\t{\n\t\tvar arr = [];\n\t\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\n\t\t{\n\t\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\n\t\t\txs = xs._1;\n\t\t\tys = ys._1;\n\t\t\tzs = zs._1;\n\t\t}\n\t\treturn fromArray(arr);\n\t}\n\n\tfunction map4(f, ws, xs, ys, zs)\n\t{\n\t\tvar arr = [];\n\t\twhile (   ws.ctor !== '[]'\n\t\t\t   && xs.ctor !== '[]'\n\t\t\t   && ys.ctor !== '[]'\n\t\t\t   && zs.ctor !== '[]')\n\t\t{\n\t\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n\t\t\tws = ws._1;\n\t\t\txs = xs._1;\n\t\t\tys = ys._1;\n\t\t\tzs = zs._1;\n\t\t}\n\t\treturn fromArray(arr);\n\t}\n\n\tfunction map5(f, vs, ws, xs, ys, zs)\n\t{\n\t\tvar arr = [];\n\t\twhile (   vs.ctor !== '[]'\n\t\t\t   && ws.ctor !== '[]'\n\t\t\t   && xs.ctor !== '[]'\n\t\t\t   && ys.ctor !== '[]'\n\t\t\t   && zs.ctor !== '[]')\n\t\t{\n\t\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n\t\t\tvs = vs._1;\n\t\t\tws = ws._1;\n\t\t\txs = xs._1;\n\t\t\tys = ys._1;\n\t\t\tzs = zs._1;\n\t\t}\n\t\treturn fromArray(arr);\n\t}\n\n\tfunction sortBy(f, xs)\n\t{\n\t\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\t\treturn Utils.cmp(f(a), f(b));\n\t\t}));\n\t}\n\n\tfunction sortWith(f, xs)\n\t{\n\t\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\t\tvar ord = f(a)(b).ctor;\n\t\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n\t\t}));\n\t}\n\n\tfunction take(n, xs)\n\t{\n\t\tvar arr = [];\n\t\twhile (xs.ctor !== '[]' && n > 0)\n\t\t{\n\t\t\tarr.push(xs._0);\n\t\t\txs = xs._1;\n\t\t\t--n;\n\t\t}\n\t\treturn fromArray(arr);\n\t}\n\n\n\tElm.Native.List.values = {\n\t\tNil: Nil,\n\t\tCons: Cons,\n\t\tcons: F2(Cons),\n\t\ttoArray: toArray,\n\t\tfromArray: fromArray,\n\n\t\tfoldl: F3(foldl),\n\t\tfoldr: F3(foldr),\n\n\t\tmap2: F3(map2),\n\t\tmap3: F4(map3),\n\t\tmap4: F5(map4),\n\t\tmap5: F6(map5),\n\t\tsortBy: F2(sortBy),\n\t\tsortWith: F2(sortWith),\n\t\ttake: F2(take)\n\t};\n\treturn localRuntime.Native.List.values = Elm.Native.List.values;\n};\n\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   \"use strict\";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values) return _elm.List.values;\n   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Maybe = Elm.Maybe.make(_elm),$Native$List = Elm.Native.List.make(_elm);\n   var _op = {};\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = function (xs) {    return A2(sortBy,$Basics.identity,xs);};\n   var drop = F2(function (n,list) {\n      drop: while (true) if (_U.cmp(n,0) < 1) return list; else {\n            var _p0 = list;\n            if (_p0.ctor === \"[]\") {\n                  return list;\n               } else {\n                  var _v1 = n - 1,_v2 = _p0._1;\n                  n = _v1;\n                  list = _v2;\n                  continue drop;\n               }\n         }\n   });\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var any = F2(function (isOkay,list) {\n      any: while (true) {\n         var _p1 = list;\n         if (_p1.ctor === \"[]\") {\n               return false;\n            } else {\n               if (isOkay(_p1._0)) return true; else {\n                     var _v4 = isOkay,_v5 = _p1._1;\n                     isOkay = _v4;\n                     list = _v5;\n                     continue any;\n                  }\n            }\n      }\n   });\n   var all = F2(function (isOkay,list) {    return $Basics.not(A2(any,function (_p2) {    return $Basics.not(isOkay(_p2));},list));});\n   var foldr = $Native$List.foldr;\n   var foldl = $Native$List.foldl;\n   var length = function (xs) {    return A3(foldl,F2(function (_p3,i) {    return i + 1;}),0,xs);};\n   var sum = function (numbers) {    return A3(foldl,F2(function (x,y) {    return x + y;}),0,numbers);};\n   var product = function (numbers) {    return A3(foldl,F2(function (x,y) {    return x * y;}),1,numbers);};\n   var maximum = function (list) {\n      var _p4 = list;\n      if (_p4.ctor === \"::\") {\n            return $Maybe.Just(A3(foldl,$Basics.max,_p4._0,_p4._1));\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var minimum = function (list) {\n      var _p5 = list;\n      if (_p5.ctor === \"::\") {\n            return $Maybe.Just(A3(foldl,$Basics.min,_p5._0,_p5._1));\n         } else {\n            return $Maybe.Nothing;\n         }\n   };\n   var indexedMap = F2(function (f,xs) {    return A3(map2,f,_U.range(0,length(xs) - 1),xs);});\n   var member = F2(function (x,xs) {    return A2(any,function (a) {    return _U.eq(a,x);},xs);});\n   var isEmpty = function (xs) {    var _p6 = xs;if (_p6.ctor === \"[]\") {    return true;} else {    return false;}};\n   var tail = function (list) {    var _p7 = list;if (_p7.ctor === \"::\") {    return $Maybe.Just(_p7._1);} else {    return $Maybe.Nothing;}};\n   var head = function (list) {    var _p8 = list;if (_p8.ctor === \"::\") {    return $Maybe.Just(_p8._0);} else {    return $Maybe.Nothing;}};\n   _op[\"::\"] = $Native$List.cons;\n   var map = F2(function (f,xs) {    return A3(foldr,F2(function (x,acc) {    return A2(_op[\"::\"],f(x),acc);}),_U.list([]),xs);});\n   var filter = F2(function (pred,xs) {\n      var conditionalCons = F2(function (x,xs$) {    return pred(x) ? A2(_op[\"::\"],x,xs$) : xs$;});\n      return A3(foldr,conditionalCons,_U.list([]),xs);\n   });\n   var maybeCons = F3(function (f,mx,xs) {    var _p9 = f(mx);if (_p9.ctor === \"Just\") {    return A2(_op[\"::\"],_p9._0,xs);} else {    return xs;}});\n   var filterMap = F2(function (f,xs) {    return A3(foldr,maybeCons(f),_U.list([]),xs);});\n   var reverse = function (list) {    return A3(foldl,F2(function (x,y) {    return A2(_op[\"::\"],x,y);}),_U.list([]),list);};\n   var scanl = F3(function (f,b,xs) {\n      var scan1 = F2(function (x,accAcc) {\n         var _p10 = accAcc;\n         if (_p10.ctor === \"::\") {\n               return A2(_op[\"::\"],A2(f,x,_p10._0),accAcc);\n            } else {\n               return _U.list([]);\n            }\n      });\n      return reverse(A3(foldl,scan1,_U.list([b]),xs));\n   });\n   var append = F2(function (xs,ys) {\n      var _p11 = ys;\n      if (_p11.ctor === \"[]\") {\n            return xs;\n         } else {\n            return A3(foldr,F2(function (x,y) {    return A2(_op[\"::\"],x,y);}),ys,xs);\n         }\n   });\n   var concat = function (lists) {    return A3(foldr,append,_U.list([]),lists);};\n   var concatMap = F2(function (f,list) {    return concat(A2(map,f,list));});\n   var partition = F2(function (pred,list) {\n      var step = F2(function (x,_p12) {\n         var _p13 = _p12;\n         var _p15 = _p13._0;\n         var _p14 = _p13._1;\n         return pred(x) ? {ctor: \"_Tuple2\",_0: A2(_op[\"::\"],x,_p15),_1: _p14} : {ctor: \"_Tuple2\",_0: _p15,_1: A2(_op[\"::\"],x,_p14)};\n      });\n      return A3(foldr,step,{ctor: \"_Tuple2\",_0: _U.list([]),_1: _U.list([])},list);\n   });\n   var unzip = function (pairs) {\n      var step = F2(function (_p17,_p16) {\n         var _p18 = _p17;\n         var _p19 = _p16;\n         return {ctor: \"_Tuple2\",_0: A2(_op[\"::\"],_p18._0,_p19._0),_1: A2(_op[\"::\"],_p18._1,_p19._1)};\n      });\n      return A3(foldr,step,{ctor: \"_Tuple2\",_0: _U.list([]),_1: _U.list([])},pairs);\n   };\n   var intersperse = F2(function (sep,xs) {\n      var _p20 = xs;\n      if (_p20.ctor === \"[]\") {\n            return _U.list([]);\n         } else {\n            var step = F2(function (x,rest) {    return A2(_op[\"::\"],sep,A2(_op[\"::\"],x,rest));});\n            var spersed = A3(foldr,step,_U.list([]),_p20._1);\n            return A2(_op[\"::\"],_p20._0,spersed);\n         }\n   });\n   var repeatHelp = F3(function (result,n,value) {\n      repeatHelp: while (true) if (_U.cmp(n,0) < 1) return result; else {\n            var _v18 = A2(_op[\"::\"],value,result),_v19 = n - 1,_v20 = value;\n            result = _v18;\n            n = _v19;\n            value = _v20;\n            continue repeatHelp;\n         }\n   });\n   var repeat = F2(function (n,value) {    return A3(repeatHelp,_U.list([]),n,value);});\n   return _elm.List.values = {_op: _op\n                             ,isEmpty: isEmpty\n                             ,length: length\n                             ,reverse: reverse\n                             ,member: member\n                             ,head: head\n                             ,tail: tail\n                             ,filter: filter\n                             ,take: take\n                             ,drop: drop\n                             ,repeat: repeat\n                             ,append: append\n                             ,concat: concat\n                             ,intersperse: intersperse\n                             ,partition: partition\n                             ,unzip: unzip\n                             ,map: map\n                             ,map2: map2\n                             ,map3: map3\n                             ,map4: map4\n                             ,map5: map5\n                             ,filterMap: filterMap\n                             ,concatMap: concatMap\n                             ,indexedMap: indexedMap\n                             ,foldr: foldr\n                             ,foldl: foldl\n                             ,sum: sum\n                             ,product: product\n                             ,maximum: maximum\n                             ,minimum: minimum\n                             ,all: all\n                             ,any: any\n                             ,scanl: scanl\n                             ,sort: sort\n                             ,sortBy: sortBy\n                             ,sortWith: sortWith};\n};\nElm.Native.Transform2D = {};\nElm.Native.Transform2D.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Transform2D = localRuntime.Native.Transform2D || {};\n\tif (localRuntime.Native.Transform2D.values)\n\t{\n\t\treturn localRuntime.Native.Transform2D.values;\n\t}\n\n\tvar A;\n\tif (typeof Float32Array === 'undefined')\n\t{\n\t\tA = function(arr)\n\t\t{\n\t\t\tthis.length = arr.length;\n\t\t\tthis[0] = arr[0];\n\t\t\tthis[1] = arr[1];\n\t\t\tthis[2] = arr[2];\n\t\t\tthis[3] = arr[3];\n\t\t\tthis[4] = arr[4];\n\t\t\tthis[5] = arr[5];\n\t\t};\n\t}\n\telse\n\t{\n\t\tA = Float32Array;\n\t}\n\n\t// layout of matrix in an array is\n\t//\n\t//   | m11 m12 dx |\n\t//   | m21 m22 dy |\n\t//   |  0   0   1 |\n\t//\n\t//  new A([ m11, m12, dx, m21, m22, dy ])\n\n\tvar identity = new A([1, 0, 0, 0, 1, 0]);\n\tfunction matrix(m11, m12, m21, m22, dx, dy)\n\t{\n\t\treturn new A([m11, m12, dx, m21, m22, dy]);\n\t}\n\n\tfunction rotation(t)\n\t{\n\t\tvar c = Math.cos(t);\n\t\tvar s = Math.sin(t);\n\t\treturn new A([c, -s, 0, s, c, 0]);\n\t}\n\n\tfunction rotate(t, m)\n\t{\n\t\tvar c = Math.cos(t);\n\t\tvar s = Math.sin(t);\n\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n\t\treturn new A([m11 * c + m12 * s, -m11 * s + m12 * c, m[2],\n\t\t\t\t\t  m21 * c + m22 * s, -m21 * s + m22 * c, m[5]]);\n\t}\n\t/*\n\tfunction move(xy,m) {\n\t\tvar x = xy._0;\n\t\tvar y = xy._1;\n\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\n\t\treturn new A([m11, m12, m11*x + m12*y + m[2],\n\t\t\t\t\t  m21, m22, m21*x + m22*y + m[5]]);\n\t}\n\tfunction scale(s,m) { return new A([m[0]*s, m[1]*s, m[2], m[3]*s, m[4]*s, m[5]]); }\n\tfunction scaleX(x,m) { return new A([m[0]*x, m[1], m[2], m[3]*x, m[4], m[5]]); }\n\tfunction scaleY(y,m) { return new A([m[0], m[1]*y, m[2], m[3], m[4]*y, m[5]]); }\n\tfunction reflectX(m) { return new A([-m[0], m[1], m[2], -m[3], m[4], m[5]]); }\n\tfunction reflectY(m) { return new A([m[0], -m[1], m[2], m[3], -m[4], m[5]]); }\n\n\tfunction transform(m11, m21, m12, m22, mdx, mdy, n) {\n\t\tvar n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n\t\treturn new A([m11*n11 + m12*n21,\n\t\t\t\t\t  m11*n12 + m12*n22,\n\t\t\t\t\t  m11*ndx + m12*ndy + mdx,\n\t\t\t\t\t  m21*n11 + m22*n21,\n\t\t\t\t\t  m21*n12 + m22*n22,\n\t\t\t\t\t  m21*ndx + m22*ndy + mdy]);\n\t}\n\t*/\n\tfunction multiply(m, n)\n\t{\n\t\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4], mdx = m[2], mdy = m[5];\n\t\tvar n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\n\t\treturn new A([m11 * n11 + m12 * n21,\n\t\t\t\t\t  m11 * n12 + m12 * n22,\n\t\t\t\t\t  m11 * ndx + m12 * ndy + mdx,\n\t\t\t\t\t  m21 * n11 + m22 * n21,\n\t\t\t\t\t  m21 * n12 + m22 * n22,\n\t\t\t\t\t  m21 * ndx + m22 * ndy + mdy]);\n\t}\n\n\treturn localRuntime.Native.Transform2D.values = {\n\t\tidentity: identity,\n\t\tmatrix: F6(matrix),\n\t\trotation: rotation,\n\t\tmultiply: F2(multiply)\n\t\t/*\n\t\ttransform: F7(transform),\n\t\trotate: F2(rotate),\n\t\tmove: F2(move),\n\t\tscale: F2(scale),\n\t\tscaleX: F2(scaleX),\n\t\tscaleY: F2(scaleY),\n\t\treflectX: reflectX,\n\t\treflectY: reflectY\n\t\t*/\n\t};\n};\n\nElm.Transform2D = Elm.Transform2D || {};\nElm.Transform2D.make = function (_elm) {\n   \"use strict\";\n   _elm.Transform2D = _elm.Transform2D || {};\n   if (_elm.Transform2D.values) return _elm.Transform2D.values;\n   var _U = Elm.Native.Utils.make(_elm),$Native$Transform2D = Elm.Native.Transform2D.make(_elm);\n   var _op = {};\n   var multiply = $Native$Transform2D.multiply;\n   var rotation = $Native$Transform2D.rotation;\n   var matrix = $Native$Transform2D.matrix;\n   var translation = F2(function (x,y) {    return A6(matrix,1,0,0,1,x,y);});\n   var scale = function (s) {    return A6(matrix,s,0,0,s,0,0);};\n   var scaleX = function (x) {    return A6(matrix,x,0,0,1,0,0);};\n   var scaleY = function (y) {    return A6(matrix,1,0,0,y,0,0);};\n   var identity = $Native$Transform2D.identity;\n   var Transform2D = {ctor: \"Transform2D\"};\n   return _elm.Transform2D.values = {_op: _op\n                                    ,identity: identity\n                                    ,matrix: matrix\n                                    ,multiply: multiply\n                                    ,rotation: rotation\n                                    ,translation: translation\n                                    ,scale: scale\n                                    ,scaleX: scaleX\n                                    ,scaleY: scaleY};\n};\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Collage = Elm.Native.Graphics.Collage || {};\n\n// definition\nElm.Native.Graphics.Collage.make = function(localRuntime) {\n\t'use strict';\n\n\t// attempt to short-circuit\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n\tlocalRuntime.Native.Graphics.Collage = localRuntime.Native.Graphics.Collage || {};\n\tif ('values' in localRuntime.Native.Graphics.Collage)\n\t{\n\t\treturn localRuntime.Native.Graphics.Collage.values;\n\t}\n\n\t// okay, we cannot short-ciruit, so now we define everything\n\tvar Color = Elm.Native.Color.make(localRuntime);\n\tvar List = Elm.Native.List.make(localRuntime);\n\tvar NativeElement = Elm.Native.Graphics.Element.make(localRuntime);\n\tvar Transform = Elm.Transform2D.make(localRuntime);\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\tfunction setStrokeStyle(ctx, style)\n\t{\n\t\tctx.lineWidth = style.width;\n\n\t\tvar cap = style.cap.ctor;\n\t\tctx.lineCap = cap === 'Flat'\n\t\t\t? 'butt'\n\t\t\t: cap === 'Round'\n\t\t\t\t? 'round'\n\t\t\t\t: 'square';\n\n\t\tvar join = style.join.ctor;\n\t\tctx.lineJoin = join === 'Smooth'\n\t\t\t? 'round'\n\t\t\t: join === 'Sharp'\n\t\t\t\t? 'miter'\n\t\t\t\t: 'bevel';\n\n\t\tctx.miterLimit = style.join._0 || 10;\n\t\tctx.strokeStyle = Color.toCss(style.color);\n\t}\n\n\tfunction setFillStyle(redo, ctx, style)\n\t{\n\t\tvar sty = style.ctor;\n\t\tctx.fillStyle = sty === 'Solid'\n\t\t\t? Color.toCss(style._0)\n\t\t\t: sty === 'Texture'\n\t\t\t\t? texture(redo, ctx, style._0)\n\t\t\t\t: gradient(ctx, style._0);\n\t}\n\n\tfunction trace(ctx, path)\n\t{\n\t\tvar points = List.toArray(path);\n\t\tvar i = points.length - 1;\n\t\tif (i <= 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tctx.moveTo(points[i]._0, points[i]._1);\n\t\twhile (i--)\n\t\t{\n\t\t\tctx.lineTo(points[i]._0, points[i]._1);\n\t\t}\n\t\tif (path.closed)\n\t\t{\n\t\t\ti = points.length - 1;\n\t\t\tctx.lineTo(points[i]._0, points[i]._1);\n\t\t}\n\t}\n\n\tfunction line(ctx, style, path)\n\t{\n\t\tif (style.dashing.ctor === '[]')\n\t\t{\n\t\t\ttrace(ctx, path);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcustomLineHelp(ctx, style, path);\n\t\t}\n\t\tctx.scale(1, -1);\n\t\tctx.stroke();\n\t}\n\n\tfunction customLineHelp(ctx, style, path)\n\t{\n\t\tvar points = List.toArray(path);\n\t\tif (path.closed)\n\t\t{\n\t\t\tpoints.push(points[0]);\n\t\t}\n\t\tvar pattern = List.toArray(style.dashing);\n\t\tvar i = points.length - 1;\n\t\tif (i <= 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar x0 = points[i]._0, y0 = points[i]._1;\n\t\tvar x1 = 0, y1 = 0, dx = 0, dy = 0, remaining = 0;\n\t\tvar pindex = 0, plen = pattern.length;\n\t\tvar draw = true, segmentLength = pattern[0];\n\t\tctx.moveTo(x0, y0);\n\t\twhile (i--)\n\t\t{\n\t\t\tx1 = points[i]._0;\n\t\t\ty1 = points[i]._1;\n\t\t\tdx = x1 - x0;\n\t\t\tdy = y1 - y0;\n\t\t\tremaining = Math.sqrt(dx * dx + dy * dy);\n\t\t\twhile (segmentLength <= remaining)\n\t\t\t{\n\t\t\t\tx0 += dx * segmentLength / remaining;\n\t\t\t\ty0 += dy * segmentLength / remaining;\n\t\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x0, y0);\n\t\t\t\t// update starting position\n\t\t\t\tdx = x1 - x0;\n\t\t\t\tdy = y1 - y0;\n\t\t\t\tremaining = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t// update pattern\n\t\t\t\tdraw = !draw;\n\t\t\t\tpindex = (pindex + 1) % plen;\n\t\t\t\tsegmentLength = pattern[pindex];\n\t\t\t}\n\t\t\tif (remaining > 0)\n\t\t\t{\n\t\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x1, y1);\n\t\t\t\tsegmentLength -= remaining;\n\t\t\t}\n\t\t\tx0 = x1;\n\t\t\ty0 = y1;\n\t\t}\n\t}\n\n\tfunction drawLine(ctx, style, path)\n\t{\n\t\tsetStrokeStyle(ctx, style);\n\t\treturn line(ctx, style, path);\n\t}\n\n\tfunction texture(redo, ctx, src)\n\t{\n\t\tvar img = new Image();\n\t\timg.src = src;\n\t\timg.onload = redo;\n\t\treturn ctx.createPattern(img, 'repeat');\n\t}\n\n\tfunction gradient(ctx, grad)\n\t{\n\t\tvar g;\n\t\tvar stops = [];\n\t\tif (grad.ctor === 'Linear')\n\t\t{\n\t\t\tvar p0 = grad._0, p1 = grad._1;\n\t\t\tg = ctx.createLinearGradient(p0._0, -p0._1, p1._0, -p1._1);\n\t\t\tstops = List.toArray(grad._2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = grad._0, p2 = grad._2;\n\t\t\tg = ctx.createRadialGradient(p0._0, -p0._1, grad._1, p2._0, -p2._1, grad._3);\n\t\t\tstops = List.toArray(grad._4);\n\t\t}\n\t\tvar len = stops.length;\n\t\tfor (var i = 0; i < len; ++i)\n\t\t{\n\t\t\tvar stop = stops[i];\n\t\t\tg.addColorStop(stop._0, Color.toCss(stop._1));\n\t\t}\n\t\treturn g;\n\t}\n\n\tfunction drawShape(redo, ctx, style, path)\n\t{\n\t\ttrace(ctx, path);\n\t\tsetFillStyle(redo, ctx, style);\n\t\tctx.scale(1, -1);\n\t\tctx.fill();\n\t}\n\n\n\t// TEXT RENDERING\n\n\tfunction fillText(redo, ctx, text)\n\t{\n\t\tdrawText(ctx, text, ctx.fillText);\n\t}\n\n\tfunction strokeText(redo, ctx, style, text)\n\t{\n\t\tsetStrokeStyle(ctx, style);\n\t\t// Use native canvas API for dashes only for text for now\n\t\t// Degrades to non-dashed on IE 9 + 10\n\t\tif (style.dashing.ctor !== '[]' && ctx.setLineDash)\n\t\t{\n\t\t\tvar pattern = List.toArray(style.dashing);\n\t\t\tctx.setLineDash(pattern);\n\t\t}\n\t\tdrawText(ctx, text, ctx.strokeText);\n\t}\n\n\tfunction drawText(ctx, text, canvasDrawFn)\n\t{\n\t\tvar textChunks = chunkText(defaultContext, text);\n\n\t\tvar totalWidth = 0;\n\t\tvar maxHeight = 0;\n\t\tvar numChunks = textChunks.length;\n\n\t\tctx.scale(1,-1);\n\n\t\tfor (var i = numChunks; i--; )\n\t\t{\n\t\t\tvar chunk = textChunks[i];\n\t\t\tctx.font = chunk.font;\n\t\t\tvar metrics = ctx.measureText(chunk.text);\n\t\t\tchunk.width = metrics.width;\n\t\t\ttotalWidth += chunk.width;\n\t\t\tif (chunk.height > maxHeight)\n\t\t\t{\n\t\t\t\tmaxHeight = chunk.height;\n\t\t\t}\n\t\t}\n\n\t\tvar x = -totalWidth / 2.0;\n\t\tfor (var i = 0; i < numChunks; ++i)\n\t\t{\n\t\t\tvar chunk = textChunks[i];\n\t\t\tctx.font = chunk.font;\n\t\t\tctx.fillStyle = chunk.color;\n\t\t\tcanvasDrawFn.call(ctx, chunk.text, x, maxHeight / 2);\n\t\t\tx += chunk.width;\n\t\t}\n\t}\n\n\tfunction toFont(props)\n\t{\n\t\treturn [\n\t\t\tprops['font-style'],\n\t\t\tprops['font-variant'],\n\t\t\tprops['font-weight'],\n\t\t\tprops['font-size'],\n\t\t\tprops['font-family']\n\t\t].join(' ');\n\t}\n\n\n\t// Convert the object returned by the text module\n\t// into something we can use for styling canvas text\n\tfunction chunkText(context, text)\n\t{\n\t\tvar tag = text.ctor;\n\t\tif (tag === 'Text:Append')\n\t\t{\n\t\t\tvar leftChunks = chunkText(context, text._0);\n\t\t\tvar rightChunks = chunkText(context, text._1);\n\t\t\treturn leftChunks.concat(rightChunks);\n\t\t}\n\t\tif (tag === 'Text:Text')\n\t\t{\n\t\t\treturn [{\n\t\t\t\ttext: text._0,\n\t\t\t\tcolor: context.color,\n\t\t\t\theight: context['font-size'].slice(0, -2) | 0,\n\t\t\t\tfont: toFont(context)\n\t\t\t}];\n\t\t}\n\t\tif (tag === 'Text:Meta')\n\t\t{\n\t\t\tvar newContext = freshContext(text._0, context);\n\t\t\treturn chunkText(newContext, text._1);\n\t\t}\n\t}\n\n\tfunction freshContext(props, ctx)\n\t{\n\t\treturn {\n\t\t\t'font-style': props['font-style'] || ctx['font-style'],\n\t\t\t'font-variant': props['font-variant'] || ctx['font-variant'],\n\t\t\t'font-weight': props['font-weight'] || ctx['font-weight'],\n\t\t\t'font-size': props['font-size'] || ctx['font-size'],\n\t\t\t'font-family': props['font-family'] || ctx['font-family'],\n\t\t\t'color': props['color'] || ctx['color']\n\t\t};\n\t}\n\n\tvar defaultContext = {\n\t\t'font-style': 'normal',\n\t\t'font-variant': 'normal',\n\t\t'font-weight': 'normal',\n\t\t'font-size': '12px',\n\t\t'font-family': 'sans-serif',\n\t\t'color': 'black'\n\t};\n\n\n\t// IMAGES\n\n\tfunction drawImage(redo, ctx, form)\n\t{\n\t\tvar img = new Image();\n\t\timg.onload = redo;\n\t\timg.src = form._3;\n\t\tvar w = form._0,\n\t\t\th = form._1,\n\t\t\tpos = form._2,\n\t\t\tsrcX = pos._0,\n\t\t\tsrcY = pos._1,\n\t\t\tsrcW = w,\n\t\t\tsrcH = h,\n\t\t\tdestX = -w / 2,\n\t\t\tdestY = -h / 2,\n\t\t\tdestW = w,\n\t\t\tdestH = h;\n\n\t\tctx.scale(1, -1);\n\t\tctx.drawImage(img, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\t}\n\n\tfunction renderForm(redo, ctx, form)\n\t{\n\t\tctx.save();\n\n\t\tvar x = form.x,\n\t\t\ty = form.y,\n\t\t\ttheta = form.theta,\n\t\t\tscale = form.scale;\n\n\t\tif (x !== 0 || y !== 0)\n\t\t{\n\t\t\tctx.translate(x, y);\n\t\t}\n\t\tif (theta !== 0)\n\t\t{\n\t\t\tctx.rotate(theta % (Math.PI * 2));\n\t\t}\n\t\tif (scale !== 1)\n\t\t{\n\t\t\tctx.scale(scale, scale);\n\t\t}\n\t\tif (form.alpha !== 1)\n\t\t{\n\t\t\tctx.globalAlpha = ctx.globalAlpha * form.alpha;\n\t\t}\n\n\t\tctx.beginPath();\n\t\tvar f = form.form;\n\t\tswitch (f.ctor)\n\t\t{\n\t\t\tcase 'FPath':\n\t\t\t\tdrawLine(ctx, f._0, f._1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'FImage':\n\t\t\t\tdrawImage(redo, ctx, f);\n\t\t\t\tbreak;\n\n\t\t\tcase 'FShape':\n\t\t\t\tif (f._0.ctor === 'Line')\n\t\t\t\t{\n\t\t\t\t\tf._1.closed = true;\n\t\t\t\t\tdrawLine(ctx, f._0._0, f._1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdrawShape(redo, ctx, f._0._0, f._1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'FText':\n\t\t\t\tfillText(redo, ctx, f._0);\n\t\t\t\tbreak;\n\n\t\t\tcase 'FOutlinedText':\n\t\t\t\tstrokeText(redo, ctx, f._0, f._1);\n\t\t\t\tbreak;\n\t\t}\n\t\tctx.restore();\n\t}\n\n\tfunction formToMatrix(form)\n\t{\n\t   var scale = form.scale;\n\t   var matrix = A6( Transform.matrix, scale, 0, 0, scale, form.x, form.y );\n\n\t   var theta = form.theta;\n\t   if (theta !== 0)\n\t   {\n\t\t   matrix = A2( Transform.multiply, matrix, Transform.rotation(theta) );\n\t   }\n\n\t   return matrix;\n\t}\n\n\tfunction str(n)\n\t{\n\t\tif (n < 0.00001 && n > -0.00001)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\treturn n;\n\t}\n\n\tfunction makeTransform(w, h, form, matrices)\n\t{\n\t\tvar props = form.form._0._0.props;\n\t\tvar m = A6( Transform.matrix, 1, 0, 0, -1,\n\t\t\t\t\t(w - props.width ) / 2,\n\t\t\t\t\t(h - props.height) / 2 );\n\t\tvar len = matrices.length;\n\t\tfor (var i = 0; i < len; ++i)\n\t\t{\n\t\t\tm = A2( Transform.multiply, m, matrices[i] );\n\t\t}\n\t\tm = A2( Transform.multiply, m, formToMatrix(form) );\n\n\t\treturn 'matrix(' +\n\t\t\tstr( m[0]) + ', ' + str( m[3]) + ', ' +\n\t\t\tstr(-m[1]) + ', ' + str(-m[4]) + ', ' +\n\t\t\tstr( m[2]) + ', ' + str( m[5]) + ')';\n\t}\n\n\tfunction stepperHelp(list)\n\t{\n\t\tvar arr = List.toArray(list);\n\t\tvar i = 0;\n\t\tfunction peekNext()\n\t\t{\n\t\t\treturn i < arr.length ? arr[i]._0.form.ctor : '';\n\t\t}\n\t\t// assumes that there is a next element\n\t\tfunction next()\n\t\t{\n\t\t\tvar out = arr[i]._0;\n\t\t\t++i;\n\t\t\treturn out;\n\t\t}\n\t\treturn {\n\t\t\tpeekNext: peekNext,\n\t\t\tnext: next\n\t\t};\n\t}\n\n\tfunction formStepper(forms)\n\t{\n\t\tvar ps = [stepperHelp(forms)];\n\t\tvar matrices = [];\n\t\tvar alphas = [];\n\t\tfunction peekNext()\n\t\t{\n\t\t\tvar len = ps.length;\n\t\t\tvar formType = '';\n\t\t\tfor (var i = 0; i < len; ++i )\n\t\t\t{\n\t\t\t\tif (formType = ps[i].peekNext()) return formType;\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t\t// assumes that there is a next element\n\t\tfunction next(ctx)\n\t\t{\n\t\t\twhile (!ps[0].peekNext())\n\t\t\t{\n\t\t\t\tps.shift();\n\t\t\t\tmatrices.pop();\n\t\t\t\talphas.shift();\n\t\t\t\tif (ctx)\n\t\t\t\t{\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar out = ps[0].next();\n\t\t\tvar f = out.form;\n\t\t\tif (f.ctor === 'FGroup')\n\t\t\t{\n\t\t\t\tps.unshift(stepperHelp(f._1));\n\t\t\t\tvar m = A2(Transform.multiply, f._0, formToMatrix(out));\n\t\t\t\tctx.save();\n\t\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n\t\t\t\tmatrices.push(m);\n\n\t\t\t\tvar alpha = (alphas[0] || 1) * out.alpha;\n\t\t\t\talphas.unshift(alpha);\n\t\t\t\tctx.globalAlpha = alpha;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tfunction transforms()\n\t\t{\n\t\t\treturn matrices;\n\t\t}\n\t\tfunction alpha()\n\t\t{\n\t\t\treturn alphas[0] || 1;\n\t\t}\n\t\treturn {\n\t\t\tpeekNext: peekNext,\n\t\t\tnext: next,\n\t\t\ttransforms: transforms,\n\t\t\talpha: alpha\n\t\t};\n\t}\n\n\tfunction makeCanvas(w, h)\n\t{\n\t\tvar canvas = NativeElement.createNode('canvas');\n\t\tcanvas.style.width  = w + 'px';\n\t\tcanvas.style.height = h + 'px';\n\t\tcanvas.style.display = 'block';\n\t\tcanvas.style.position = 'absolute';\n\t\tvar ratio = window.devicePixelRatio || 1;\n\t\tcanvas.width  = w * ratio;\n\t\tcanvas.height = h * ratio;\n\t\treturn canvas;\n\t}\n\n\tfunction render(model)\n\t{\n\t\tvar div = NativeElement.createNode('div');\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tupdate(div, model, model);\n\t\treturn div;\n\t}\n\n\tfunction nodeStepper(w, h, div)\n\t{\n\t\tvar kids = div.childNodes;\n\t\tvar i = 0;\n\t\tvar ratio = window.devicePixelRatio || 1;\n\n\t\tfunction transform(transforms, ctx)\n\t\t{\n\t\t\tctx.translate( w / 2 * ratio, h / 2 * ratio );\n\t\t\tctx.scale( ratio, -ratio );\n\t\t\tvar len = transforms.length;\n\t\t\tfor (var i = 0; i < len; ++i)\n\t\t\t{\n\t\t\t\tvar m = transforms[i];\n\t\t\t\tctx.save();\n\t\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\n\t\t\t}\n\t\t\treturn ctx;\n\t\t}\n\t\tfunction nextContext(transforms)\n\t\t{\n\t\t\twhile (i < kids.length)\n\t\t\t{\n\t\t\t\tvar node = kids[i];\n\t\t\t\tif (node.getContext)\n\t\t\t\t{\n\t\t\t\t\tnode.width = w * ratio;\n\t\t\t\t\tnode.height = h * ratio;\n\t\t\t\t\tnode.style.width = w + 'px';\n\t\t\t\t\tnode.style.height = h + 'px';\n\t\t\t\t\t++i;\n\t\t\t\t\treturn transform(transforms, node.getContext('2d'));\n\t\t\t\t}\n\t\t\t\tdiv.removeChild(node);\n\t\t\t}\n\t\t\tvar canvas = makeCanvas(w, h);\n\t\t\tdiv.appendChild(canvas);\n\t\t\t// we have added a new node, so we must step our position\n\t\t\t++i;\n\t\t\treturn transform(transforms, canvas.getContext('2d'));\n\t\t}\n\t\tfunction addElement(matrices, alpha, form)\n\t\t{\n\t\t\tvar kid = kids[i];\n\t\t\tvar elem = form.form._0;\n\n\t\t\tvar node = (!kid || kid.getContext)\n\t\t\t\t? NativeElement.render(elem)\n\t\t\t\t: NativeElement.update(kid, kid.oldElement, elem);\n\n\t\t\tnode.style.position = 'absolute';\n\t\t\tnode.style.opacity = alpha * form.alpha * elem._0.props.opacity;\n\t\t\tNativeElement.addTransform(node.style, makeTransform(w, h, form, matrices));\n\t\t\tnode.oldElement = elem;\n\t\t\t++i;\n\t\t\tif (!kid)\n\t\t\t{\n\t\t\t\tdiv.appendChild(node);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.insertBefore(node, kid);\n\t\t\t}\n\t\t}\n\t\tfunction clearRest()\n\t\t{\n\t\t\twhile (i < kids.length)\n\t\t\t{\n\t\t\t\tdiv.removeChild(kids[i]);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tnextContext: nextContext,\n\t\t\taddElement: addElement,\n\t\t\tclearRest: clearRest\n\t\t};\n\t}\n\n\n\tfunction update(div, _, model)\n\t{\n\t\tvar w = model.w;\n\t\tvar h = model.h;\n\n\t\tvar forms = formStepper(model.forms);\n\t\tvar nodes = nodeStepper(w, h, div);\n\t\tvar ctx = null;\n\t\tvar formType = '';\n\n\t\twhile (formType = forms.peekNext())\n\t\t{\n\t\t\t// make sure we have context if we need it\n\t\t\tif (ctx === null && formType !== 'FElement')\n\t\t\t{\n\t\t\t\tctx = nodes.nextContext(forms.transforms());\n\t\t\t\tctx.globalAlpha = forms.alpha();\n\t\t\t}\n\n\t\t\tvar form = forms.next(ctx);\n\t\t\t// if it is FGroup, all updates are made within formStepper when next is called.\n\t\t\tif (formType === 'FElement')\n\t\t\t{\n\t\t\t\t// update or insert an element, get a new context\n\t\t\t\tnodes.addElement(forms.transforms(), forms.alpha(), form);\n\t\t\t\tctx = null;\n\t\t\t}\n\t\t\telse if (formType !== 'FGroup')\n\t\t\t{\n\t\t\t\trenderForm(function() { update(div, model, model); }, ctx, form);\n\t\t\t}\n\t\t}\n\t\tnodes.clearRest();\n\t\treturn div;\n\t}\n\n\n\tfunction collage(w, h, forms)\n\t{\n\t\treturn A3(NativeElement.newElement, w, h, {\n\t\t\tctor: 'Custom',\n\t\t\ttype: 'Collage',\n\t\t\trender: render,\n\t\t\tupdate: update,\n\t\t\tmodel: {w: w, h: h, forms: forms}\n\t\t});\n\t}\n\n\treturn localRuntime.Native.Graphics.Collage.values = {\n\t\tcollage: F3(collage)\n\t};\n};\n\nElm.Native.Color = {};\nElm.Native.Color.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Color = localRuntime.Native.Color || {};\n\tif (localRuntime.Native.Color.values)\n\t{\n\t\treturn localRuntime.Native.Color.values;\n\t}\n\n\tfunction toCss(c)\n\t{\n\t\tvar format = '';\n\t\tvar colors = '';\n\t\tif (c.ctor === 'RGBA')\n\t\t{\n\t\t\tformat = 'rgb';\n\t\t\tcolors = c._0 + ', ' + c._1 + ', ' + c._2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tformat = 'hsl';\n\t\t\tcolors = (c._0 * 180 / Math.PI) + ', ' +\n\t\t\t\t\t (c._1 * 100) + '%, ' +\n\t\t\t\t\t (c._2 * 100) + '%';\n\t\t}\n\t\tif (c._3 === 1)\n\t\t{\n\t\t\treturn format + '(' + colors + ')';\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn format + 'a(' + colors + ', ' + c._3 + ')';\n\t\t}\n\t}\n\n\treturn localRuntime.Native.Color.values = {\n\t\ttoCss: toCss\n\t};\n};\n\nElm.Color = Elm.Color || {};\nElm.Color.make = function (_elm) {\n   \"use strict\";\n   _elm.Color = _elm.Color || {};\n   if (_elm.Color.values) return _elm.Color.values;\n   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm);\n   var _op = {};\n   var Radial = F5(function (a,b,c,d,e) {    return {ctor: \"Radial\",_0: a,_1: b,_2: c,_3: d,_4: e};});\n   var radial = Radial;\n   var Linear = F3(function (a,b,c) {    return {ctor: \"Linear\",_0: a,_1: b,_2: c};});\n   var linear = Linear;\n   var fmod = F2(function (f,n) {    var integer = $Basics.floor(f);return $Basics.toFloat(A2($Basics._op[\"%\"],integer,n)) + f - $Basics.toFloat(integer);});\n   var rgbToHsl = F3(function (red,green,blue) {\n      var b = $Basics.toFloat(blue) / 255;\n      var g = $Basics.toFloat(green) / 255;\n      var r = $Basics.toFloat(red) / 255;\n      var cMax = A2($Basics.max,A2($Basics.max,r,g),b);\n      var cMin = A2($Basics.min,A2($Basics.min,r,g),b);\n      var c = cMax - cMin;\n      var lightness = (cMax + cMin) / 2;\n      var saturation = _U.eq(lightness,0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n      var hue = $Basics.degrees(60) * (_U.eq(cMax,r) ? A2(fmod,(g - b) / c,6) : _U.eq(cMax,g) ? (b - r) / c + 2 : (r - g) / c + 4);\n      return {ctor: \"_Tuple3\",_0: hue,_1: saturation,_2: lightness};\n   });\n   var hslToRgb = F3(function (hue,saturation,lightness) {\n      var hue$ = hue / $Basics.degrees(60);\n      var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n      var x = chroma * (1 - $Basics.abs(A2(fmod,hue$,2) - 1));\n      var _p0 = _U.cmp(hue$,0) < 0 ? {ctor: \"_Tuple3\",_0: 0,_1: 0,_2: 0} : _U.cmp(hue$,1) < 0 ? {ctor: \"_Tuple3\",_0: chroma,_1: x,_2: 0} : _U.cmp(hue$,\n      2) < 0 ? {ctor: \"_Tuple3\",_0: x,_1: chroma,_2: 0} : _U.cmp(hue$,3) < 0 ? {ctor: \"_Tuple3\",_0: 0,_1: chroma,_2: x} : _U.cmp(hue$,4) < 0 ? {ctor: \"_Tuple3\"\n                                                                                                                                               ,_0: 0\n                                                                                                                                               ,_1: x\n                                                                                                                                               ,_2: chroma} : _U.cmp(hue$,\n      5) < 0 ? {ctor: \"_Tuple3\",_0: x,_1: 0,_2: chroma} : _U.cmp(hue$,6) < 0 ? {ctor: \"_Tuple3\",_0: chroma,_1: 0,_2: x} : {ctor: \"_Tuple3\",_0: 0,_1: 0,_2: 0};\n      var r = _p0._0;\n      var g = _p0._1;\n      var b = _p0._2;\n      var m = lightness - chroma / 2;\n      return {ctor: \"_Tuple3\",_0: r + m,_1: g + m,_2: b + m};\n   });\n   var toRgb = function (color) {\n      var _p1 = color;\n      if (_p1.ctor === \"RGBA\") {\n            return {red: _p1._0,green: _p1._1,blue: _p1._2,alpha: _p1._3};\n         } else {\n            var _p2 = A3(hslToRgb,_p1._0,_p1._1,_p1._2);\n            var r = _p2._0;\n            var g = _p2._1;\n            var b = _p2._2;\n            return {red: $Basics.round(255 * r),green: $Basics.round(255 * g),blue: $Basics.round(255 * b),alpha: _p1._3};\n         }\n   };\n   var toHsl = function (color) {\n      var _p3 = color;\n      if (_p3.ctor === \"HSLA\") {\n            return {hue: _p3._0,saturation: _p3._1,lightness: _p3._2,alpha: _p3._3};\n         } else {\n            var _p4 = A3(rgbToHsl,_p3._0,_p3._1,_p3._2);\n            var h = _p4._0;\n            var s = _p4._1;\n            var l = _p4._2;\n            return {hue: h,saturation: s,lightness: l,alpha: _p3._3};\n         }\n   };\n   var HSLA = F4(function (a,b,c,d) {    return {ctor: \"HSLA\",_0: a,_1: b,_2: c,_3: d};});\n   var hsla = F4(function (hue,saturation,lightness,alpha) {\n      return A4(HSLA,hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),saturation,lightness,alpha);\n   });\n   var hsl = F3(function (hue,saturation,lightness) {    return A4(hsla,hue,saturation,lightness,1);});\n   var complement = function (color) {\n      var _p5 = color;\n      if (_p5.ctor === \"HSLA\") {\n            return A4(hsla,_p5._0 + $Basics.degrees(180),_p5._1,_p5._2,_p5._3);\n         } else {\n            var _p6 = A3(rgbToHsl,_p5._0,_p5._1,_p5._2);\n            var h = _p6._0;\n            var s = _p6._1;\n            var l = _p6._2;\n            return A4(hsla,h + $Basics.degrees(180),s,l,_p5._3);\n         }\n   };\n   var grayscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n   var greyscale = function (p) {    return A4(HSLA,0,0,1 - p,1);};\n   var RGBA = F4(function (a,b,c,d) {    return {ctor: \"RGBA\",_0: a,_1: b,_2: c,_3: d};});\n   var rgba = RGBA;\n   var rgb = F3(function (r,g,b) {    return A4(RGBA,r,g,b,1);});\n   var lightRed = A4(RGBA,239,41,41,1);\n   var red = A4(RGBA,204,0,0,1);\n   var darkRed = A4(RGBA,164,0,0,1);\n   var lightOrange = A4(RGBA,252,175,62,1);\n   var orange = A4(RGBA,245,121,0,1);\n   var darkOrange = A4(RGBA,206,92,0,1);\n   var lightYellow = A4(RGBA,255,233,79,1);\n   var yellow = A4(RGBA,237,212,0,1);\n   var darkYellow = A4(RGBA,196,160,0,1);\n   var lightGreen = A4(RGBA,138,226,52,1);\n   var green = A4(RGBA,115,210,22,1);\n   var darkGreen = A4(RGBA,78,154,6,1);\n   var lightBlue = A4(RGBA,114,159,207,1);\n   var blue = A4(RGBA,52,101,164,1);\n   var darkBlue = A4(RGBA,32,74,135,1);\n   var lightPurple = A4(RGBA,173,127,168,1);\n   var purple = A4(RGBA,117,80,123,1);\n   var darkPurple = A4(RGBA,92,53,102,1);\n   var lightBrown = A4(RGBA,233,185,110,1);\n   var brown = A4(RGBA,193,125,17,1);\n   var darkBrown = A4(RGBA,143,89,2,1);\n   var black = A4(RGBA,0,0,0,1);\n   var white = A4(RGBA,255,255,255,1);\n   var lightGrey = A4(RGBA,238,238,236,1);\n   var grey = A4(RGBA,211,215,207,1);\n   var darkGrey = A4(RGBA,186,189,182,1);\n   var lightGray = A4(RGBA,238,238,236,1);\n   var gray = A4(RGBA,211,215,207,1);\n   var darkGray = A4(RGBA,186,189,182,1);\n   var lightCharcoal = A4(RGBA,136,138,133,1);\n   var charcoal = A4(RGBA,85,87,83,1);\n   var darkCharcoal = A4(RGBA,46,52,54,1);\n   return _elm.Color.values = {_op: _op\n                              ,rgb: rgb\n                              ,rgba: rgba\n                              ,hsl: hsl\n                              ,hsla: hsla\n                              ,greyscale: greyscale\n                              ,grayscale: grayscale\n                              ,complement: complement\n                              ,linear: linear\n                              ,radial: radial\n                              ,toRgb: toRgb\n                              ,toHsl: toHsl\n                              ,red: red\n                              ,orange: orange\n                              ,yellow: yellow\n                              ,green: green\n                              ,blue: blue\n                              ,purple: purple\n                              ,brown: brown\n                              ,lightRed: lightRed\n                              ,lightOrange: lightOrange\n                              ,lightYellow: lightYellow\n                              ,lightGreen: lightGreen\n                              ,lightBlue: lightBlue\n                              ,lightPurple: lightPurple\n                              ,lightBrown: lightBrown\n                              ,darkRed: darkRed\n                              ,darkOrange: darkOrange\n                              ,darkYellow: darkYellow\n                              ,darkGreen: darkGreen\n                              ,darkBlue: darkBlue\n                              ,darkPurple: darkPurple\n                              ,darkBrown: darkBrown\n                              ,white: white\n                              ,lightGrey: lightGrey\n                              ,grey: grey\n                              ,darkGrey: darkGrey\n                              ,lightCharcoal: lightCharcoal\n                              ,charcoal: charcoal\n                              ,darkCharcoal: darkCharcoal\n                              ,black: black\n                              ,lightGray: lightGray\n                              ,gray: gray\n                              ,darkGray: darkGray};\n};\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\n// definition\nElm.Native.Graphics.Element.make = function(localRuntime) {\n\t'use strict';\n\n\t// attempt to short-circuit\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Graphics = localRuntime.Native.Graphics || {};\n\tlocalRuntime.Native.Graphics.Element = localRuntime.Native.Graphics.Element || {};\n\tif ('values' in localRuntime.Native.Graphics.Element)\n\t{\n\t\treturn localRuntime.Native.Graphics.Element.values;\n\t}\n\n\tvar Color = Elm.Native.Color.make(localRuntime);\n\tvar List = Elm.Native.List.make(localRuntime);\n\tvar Maybe = Elm.Maybe.make(localRuntime);\n\tvar Text = Elm.Native.Text.make(localRuntime);\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\n\t// CREATION\n\n\tvar createNode =\n\t\ttypeof document === 'undefined'\n\t\t\t?\n\t\t\t\tfunction(_)\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstyle: {},\n\t\t\t\t\t\tappendChild: function() {}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t:\n\t\t\t\tfunction(elementType)\n\t\t\t\t{\n\t\t\t\t\tvar node = document.createElement(elementType);\n\t\t\t\t\tnode.style.padding = '0';\n\t\t\t\t\tnode.style.margin = '0';\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t;\n\n\n\tfunction newElement(width, height, elementPrim)\n\t{\n\t\treturn {\n\t\t\tctor: 'Element_elm_builtin',\n\t\t\t_0: {\n\t\t\t\telement: elementPrim,\n\t\t\t\tprops: {\n\t\t\t\t\tid: Utils.guid(),\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tcolor: Maybe.Nothing,\n\t\t\t\t\thref: '',\n\t\t\t\t\ttag: '',\n\t\t\t\t\thover: Utils.Tuple0,\n\t\t\t\t\tclick: Utils.Tuple0\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\n\t// PROPERTIES\n\n\tfunction setProps(elem, node)\n\t{\n\t\tvar props = elem.props;\n\n\t\tvar element = elem.element;\n\t\tvar width = props.width - (element.adjustWidth || 0);\n\t\tvar height = props.height - (element.adjustHeight || 0);\n\t\tnode.style.width  = (width | 0) + 'px';\n\t\tnode.style.height = (height | 0) + 'px';\n\n\t\tif (props.opacity !== 1)\n\t\t{\n\t\t\tnode.style.opacity = props.opacity;\n\t\t}\n\n\t\tif (props.color.ctor === 'Just')\n\t\t{\n\t\t\tnode.style.backgroundColor = Color.toCss(props.color._0);\n\t\t}\n\n\t\tif (props.tag !== '')\n\t\t{\n\t\t\tnode.id = props.tag;\n\t\t}\n\n\t\tif (props.hover.ctor !== '_Tuple0')\n\t\t{\n\t\t\taddHover(node, props.hover);\n\t\t}\n\n\t\tif (props.click.ctor !== '_Tuple0')\n\t\t{\n\t\t\taddClick(node, props.click);\n\t\t}\n\n\t\tif (props.href !== '')\n\t\t{\n\t\t\tvar anchor = createNode('a');\n\t\t\tanchor.href = props.href;\n\t\t\tanchor.style.display = 'block';\n\t\t\tanchor.style.pointerEvents = 'auto';\n\t\t\tanchor.appendChild(node);\n\t\t\tnode = anchor;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tfunction addClick(e, handler)\n\t{\n\t\te.style.pointerEvents = 'auto';\n\t\te.elm_click_handler = handler;\n\t\tfunction trigger(ev)\n\t\t{\n\t\t\te.elm_click_handler(Utils.Tuple0);\n\t\t\tev.stopPropagation();\n\t\t}\n\t\te.elm_click_trigger = trigger;\n\t\te.addEventListener('click', trigger);\n\t}\n\n\tfunction removeClick(e, handler)\n\t{\n\t\tif (e.elm_click_trigger)\n\t\t{\n\t\t\te.removeEventListener('click', e.elm_click_trigger);\n\t\t\te.elm_click_trigger = null;\n\t\t\te.elm_click_handler = null;\n\t\t}\n\t}\n\n\tfunction addHover(e, handler)\n\t{\n\t\te.style.pointerEvents = 'auto';\n\t\te.elm_hover_handler = handler;\n\t\te.elm_hover_count = 0;\n\n\t\tfunction over(evt)\n\t\t{\n\t\t\tif (e.elm_hover_count++ > 0) return;\n\t\t\te.elm_hover_handler(true);\n\t\t\tevt.stopPropagation();\n\t\t}\n\t\tfunction out(evt)\n\t\t{\n\t\t\tif (e.contains(evt.toElement || evt.relatedTarget)) return;\n\t\t\te.elm_hover_count = 0;\n\t\t\te.elm_hover_handler(false);\n\t\t\tevt.stopPropagation();\n\t\t}\n\t\te.elm_hover_over = over;\n\t\te.elm_hover_out = out;\n\t\te.addEventListener('mouseover', over);\n\t\te.addEventListener('mouseout', out);\n\t}\n\n\tfunction removeHover(e)\n\t{\n\t\te.elm_hover_handler = null;\n\t\tif (e.elm_hover_over)\n\t\t{\n\t\t\te.removeEventListener('mouseover', e.elm_hover_over);\n\t\t\te.elm_hover_over = null;\n\t\t}\n\t\tif (e.elm_hover_out)\n\t\t{\n\t\t\te.removeEventListener('mouseout', e.elm_hover_out);\n\t\t\te.elm_hover_out = null;\n\t\t}\n\t}\n\n\n\t// IMAGES\n\n\tfunction image(props, img)\n\t{\n\t\tswitch (img._0.ctor)\n\t\t{\n\t\t\tcase 'Plain':\n\t\t\t\treturn plainImage(img._3);\n\n\t\t\tcase 'Fitted':\n\t\t\t\treturn fittedImage(props.width, props.height, img._3);\n\n\t\t\tcase 'Cropped':\n\t\t\t\treturn croppedImage(img, props.width, props.height, img._3);\n\n\t\t\tcase 'Tiled':\n\t\t\t\treturn tiledImage(img._3);\n\t\t}\n\t}\n\n\tfunction plainImage(src)\n\t{\n\t\tvar img = createNode('img');\n\t\timg.src = src;\n\t\timg.name = src;\n\t\timg.style.display = 'block';\n\t\treturn img;\n\t}\n\n\tfunction tiledImage(src)\n\t{\n\t\tvar div = createNode('div');\n\t\tdiv.style.backgroundImage = 'url(' + src + ')';\n\t\treturn div;\n\t}\n\n\tfunction fittedImage(w, h, src)\n\t{\n\t\tvar div = createNode('div');\n\t\tdiv.style.background = 'url(' + src + ') no-repeat center';\n\t\tdiv.style.webkitBackgroundSize = 'cover';\n\t\tdiv.style.MozBackgroundSize = 'cover';\n\t\tdiv.style.OBackgroundSize = 'cover';\n\t\tdiv.style.backgroundSize = 'cover';\n\t\treturn div;\n\t}\n\n\tfunction croppedImage(elem, w, h, src)\n\t{\n\t\tvar pos = elem._0._0;\n\t\tvar e = createNode('div');\n\t\te.style.overflow = 'hidden';\n\n\t\tvar img = createNode('img');\n\t\timg.onload = function() {\n\t\t\tvar sw = w / elem._1, sh = h / elem._2;\n\t\t\timg.style.width = ((this.width * sw) | 0) + 'px';\n\t\t\timg.style.height = ((this.height * sh) | 0) + 'px';\n\t\t\timg.style.marginLeft = ((- pos._0 * sw) | 0) + 'px';\n\t\t\timg.style.marginTop = ((- pos._1 * sh) | 0) + 'px';\n\t\t};\n\t\timg.src = src;\n\t\timg.name = src;\n\t\te.appendChild(img);\n\t\treturn e;\n\t}\n\n\n\t// FLOW\n\n\tfunction goOut(node)\n\t{\n\t\tnode.style.position = 'absolute';\n\t\treturn node;\n\t}\n\tfunction goDown(node)\n\t{\n\t\treturn node;\n\t}\n\tfunction goRight(node)\n\t{\n\t\tnode.style.styleFloat = 'left';\n\t\tnode.style.cssFloat = 'left';\n\t\treturn node;\n\t}\n\n\tvar directionTable = {\n\t\tDUp: goDown,\n\t\tDDown: goDown,\n\t\tDLeft: goRight,\n\t\tDRight: goRight,\n\t\tDIn: goOut,\n\t\tDOut: goOut\n\t};\n\tfunction needsReversal(dir)\n\t{\n\t\treturn dir === 'DUp' || dir === 'DLeft' || dir === 'DIn';\n\t}\n\n\tfunction flow(dir, elist)\n\t{\n\t\tvar array = List.toArray(elist);\n\t\tvar container = createNode('div');\n\t\tvar goDir = directionTable[dir];\n\t\tif (goDir === goOut)\n\t\t{\n\t\t\tcontainer.style.pointerEvents = 'none';\n\t\t}\n\t\tif (needsReversal(dir))\n\t\t{\n\t\t\tarray.reverse();\n\t\t}\n\t\tvar len = array.length;\n\t\tfor (var i = 0; i < len; ++i)\n\t\t{\n\t\t\tcontainer.appendChild(goDir(render(array[i])));\n\t\t}\n\t\treturn container;\n\t}\n\n\n\t// CONTAINER\n\n\tfunction toPos(pos)\n\t{\n\t\treturn pos.ctor === 'Absolute'\n\t\t\t? pos._0 + 'px'\n\t\t\t: (pos._0 * 100) + '%';\n\t}\n\n\t// must clear right, left, top, bottom, and transform\n\t// before calling this function\n\tfunction setPos(pos, wrappedElement, e)\n\t{\n\t\tvar elem = wrappedElement._0;\n\t\tvar element = elem.element;\n\t\tvar props = elem.props;\n\t\tvar w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n\t\tvar h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n\t\te.style.position = 'absolute';\n\t\te.style.margin = 'auto';\n\t\tvar transform = '';\n\n\t\tswitch (pos.horizontal.ctor)\n\t\t{\n\t\t\tcase 'P':\n\t\t\t\te.style.right = toPos(pos.x);\n\t\t\t\te.style.removeProperty('left');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Z':\n\t\t\t\ttransform = 'translateX(' + ((-w / 2) | 0) + 'px) ';\n\n\t\t\tcase 'N':\n\t\t\t\te.style.left = toPos(pos.x);\n\t\t\t\te.style.removeProperty('right');\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (pos.vertical.ctor)\n\t\t{\n\t\t\tcase 'N':\n\t\t\t\te.style.bottom = toPos(pos.y);\n\t\t\t\te.style.removeProperty('top');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Z':\n\t\t\t\ttransform += 'translateY(' + ((-h / 2) | 0) + 'px)';\n\n\t\t\tcase 'P':\n\t\t\t\te.style.top = toPos(pos.y);\n\t\t\t\te.style.removeProperty('bottom');\n\t\t\t\tbreak;\n\t\t}\n\t\tif (transform !== '')\n\t\t{\n\t\t\taddTransform(e.style, transform);\n\t\t}\n\t\treturn e;\n\t}\n\n\tfunction addTransform(style, transform)\n\t{\n\t\tstyle.transform       = transform;\n\t\tstyle.msTransform     = transform;\n\t\tstyle.MozTransform    = transform;\n\t\tstyle.webkitTransform = transform;\n\t\tstyle.OTransform      = transform;\n\t}\n\n\tfunction container(pos, elem)\n\t{\n\t\tvar e = render(elem);\n\t\tsetPos(pos, elem, e);\n\t\tvar div = createNode('div');\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.appendChild(e);\n\t\treturn div;\n\t}\n\n\n\tfunction rawHtml(elem)\n\t{\n\t\tvar html = elem.html;\n\t\tvar align = elem.align;\n\n\t\tvar div = createNode('div');\n\t\tdiv.innerHTML = html;\n\t\tdiv.style.visibility = 'hidden';\n\t\tif (align)\n\t\t{\n\t\t\tdiv.style.textAlign = align;\n\t\t}\n\t\tdiv.style.visibility = 'visible';\n\t\tdiv.style.pointerEvents = 'auto';\n\t\treturn div;\n\t}\n\n\n\t// RENDER\n\n\tfunction render(wrappedElement)\n\t{\n\t\tvar elem = wrappedElement._0;\n\t\treturn setProps(elem, makeElement(elem));\n\t}\n\n\tfunction makeElement(e)\n\t{\n\t\tvar elem = e.element;\n\t\tswitch (elem.ctor)\n\t\t{\n\t\t\tcase 'Image':\n\t\t\t\treturn image(e.props, elem);\n\n\t\t\tcase 'Flow':\n\t\t\t\treturn flow(elem._0.ctor, elem._1);\n\n\t\t\tcase 'Container':\n\t\t\t\treturn container(elem._0, elem._1);\n\n\t\t\tcase 'Spacer':\n\t\t\t\treturn createNode('div');\n\n\t\t\tcase 'RawHtml':\n\t\t\t\treturn rawHtml(elem);\n\n\t\t\tcase 'Custom':\n\t\t\t\treturn elem.render(elem.model);\n\t\t}\n\t}\n\n\tfunction updateAndReplace(node, curr, next)\n\t{\n\t\tvar newNode = update(node, curr, next);\n\t\tif (newNode !== node)\n\t\t{\n\t\t\tnode.parentNode.replaceChild(newNode, node);\n\t\t}\n\t\treturn newNode;\n\t}\n\n\n\t// UPDATE\n\n\tfunction update(node, wrappedCurrent, wrappedNext)\n\t{\n\t\tvar curr = wrappedCurrent._0;\n\t\tvar next = wrappedNext._0;\n\t\tvar rootNode = node;\n\t\tif (node.tagName === 'A')\n\t\t{\n\t\t\tnode = node.firstChild;\n\t\t}\n\t\tif (curr.props.id === next.props.id)\n\t\t{\n\t\t\tupdateProps(node, curr, next);\n\t\t\treturn rootNode;\n\t\t}\n\t\tif (curr.element.ctor !== next.element.ctor)\n\t\t{\n\t\t\treturn render(wrappedNext);\n\t\t}\n\t\tvar nextE = next.element;\n\t\tvar currE = curr.element;\n\t\tswitch (nextE.ctor)\n\t\t{\n\t\t\tcase 'Spacer':\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\n\t\t\tcase 'RawHtml':\n\t\t\t\tif(currE.html.valueOf() !== nextE.html.valueOf())\n\t\t\t\t{\n\t\t\t\t\tnode.innerHTML = nextE.html;\n\t\t\t\t}\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\n\t\t\tcase 'Image':\n\t\t\t\tif (nextE._0.ctor === 'Plain')\n\t\t\t\t{\n\t\t\t\t\tif (nextE._3 !== currE._3)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.src = nextE._3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!Utils.eq(nextE, currE)\n\t\t\t\t\t|| next.props.width !== curr.props.width\n\t\t\t\t\t|| next.props.height !== curr.props.height)\n\t\t\t\t{\n\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t}\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\n\t\t\tcase 'Flow':\n\t\t\t\tvar arr = List.toArray(nextE._1);\n\t\t\t\tfor (var i = arr.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tarr[i] = arr[i]._0.element.ctor;\n\t\t\t\t}\n\t\t\t\tif (nextE._0.ctor !== currE._0.ctor)\n\t\t\t\t{\n\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t}\n\t\t\t\tvar nexts = List.toArray(nextE._1);\n\t\t\t\tvar kids = node.childNodes;\n\t\t\t\tif (nexts.length !== kids.length)\n\t\t\t\t{\n\t\t\t\t\treturn render(wrappedNext);\n\t\t\t\t}\n\t\t\t\tvar currs = List.toArray(currE._1);\n\t\t\t\tvar dir = nextE._0.ctor;\n\t\t\t\tvar goDir = directionTable[dir];\n\t\t\t\tvar toReverse = needsReversal(dir);\n\t\t\t\tvar len = kids.length;\n\t\t\t\tfor (var i = len; i--; )\n\t\t\t\t{\n\t\t\t\t\tvar subNode = kids[toReverse ? len - i - 1 : i];\n\t\t\t\t\tgoDir(updateAndReplace(subNode, currs[i], nexts[i]));\n\t\t\t\t}\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\n\t\t\tcase 'Container':\n\t\t\t\tvar subNode = node.firstChild;\n\t\t\t\tvar newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n\t\t\t\tsetPos(nextE._0, nextE._1, newSubNode);\n\t\t\t\tupdateProps(node, curr, next);\n\t\t\t\treturn rootNode;\n\n\t\t\tcase 'Custom':\n\t\t\t\tif (currE.type === nextE.type)\n\t\t\t\t{\n\t\t\t\t\tvar updatedNode = nextE.update(node, currE.model, nextE.model);\n\t\t\t\t\tupdateProps(updatedNode, curr, next);\n\t\t\t\t\treturn updatedNode;\n\t\t\t\t}\n\t\t\t\treturn render(wrappedNext);\n\t\t}\n\t}\n\n\tfunction updateProps(node, curr, next)\n\t{\n\t\tvar nextProps = next.props;\n\t\tvar currProps = curr.props;\n\n\t\tvar element = next.element;\n\t\tvar width = nextProps.width - (element.adjustWidth || 0);\n\t\tvar height = nextProps.height - (element.adjustHeight || 0);\n\t\tif (width !== currProps.width)\n\t\t{\n\t\t\tnode.style.width = (width | 0) + 'px';\n\t\t}\n\t\tif (height !== currProps.height)\n\t\t{\n\t\t\tnode.style.height = (height | 0) + 'px';\n\t\t}\n\n\t\tif (nextProps.opacity !== currProps.opacity)\n\t\t{\n\t\t\tnode.style.opacity = nextProps.opacity;\n\t\t}\n\n\t\tvar nextColor = nextProps.color.ctor === 'Just'\n\t\t\t? Color.toCss(nextProps.color._0)\n\t\t\t: '';\n\t\tif (node.style.backgroundColor !== nextColor)\n\t\t{\n\t\t\tnode.style.backgroundColor = nextColor;\n\t\t}\n\n\t\tif (nextProps.tag !== currProps.tag)\n\t\t{\n\t\t\tnode.id = nextProps.tag;\n\t\t}\n\n\t\tif (nextProps.href !== currProps.href)\n\t\t{\n\t\t\tif (currProps.href === '')\n\t\t\t{\n\t\t\t\t// add a surrounding href\n\t\t\t\tvar anchor = createNode('a');\n\t\t\t\tanchor.href = nextProps.href;\n\t\t\t\tanchor.style.display = 'block';\n\t\t\t\tanchor.style.pointerEvents = 'auto';\n\n\t\t\t\tnode.parentNode.replaceChild(anchor, node);\n\t\t\t\tanchor.appendChild(node);\n\t\t\t}\n\t\t\telse if (nextProps.href === '')\n\t\t\t{\n\t\t\t\t// remove the surrounding href\n\t\t\t\tvar anchor = node.parentNode;\n\t\t\t\tanchor.parentNode.replaceChild(node, anchor);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// just update the link\n\t\t\t\tnode.parentNode.href = nextProps.href;\n\t\t\t}\n\t\t}\n\n\t\t// update click and hover handlers\n\t\tvar removed = false;\n\n\t\t// update hover handlers\n\t\tif (currProps.hover.ctor === '_Tuple0')\n\t\t{\n\t\t\tif (nextProps.hover.ctor !== '_Tuple0')\n\t\t\t{\n\t\t\t\taddHover(node, nextProps.hover);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (nextProps.hover.ctor === '_Tuple0')\n\t\t\t{\n\t\t\t\tremoved = true;\n\t\t\t\tremoveHover(node);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.elm_hover_handler = nextProps.hover;\n\t\t\t}\n\t\t}\n\n\t\t// update click handlers\n\t\tif (currProps.click.ctor === '_Tuple0')\n\t\t{\n\t\t\tif (nextProps.click.ctor !== '_Tuple0')\n\t\t\t{\n\t\t\t\taddClick(node, nextProps.click);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (nextProps.click.ctor === '_Tuple0')\n\t\t\t{\n\t\t\t\tremoved = true;\n\t\t\t\tremoveClick(node);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.elm_click_handler = nextProps.click;\n\t\t\t}\n\t\t}\n\n\t\t// stop capturing clicks if\n\t\tif (removed\n\t\t\t&& nextProps.hover.ctor === '_Tuple0'\n\t\t\t&& nextProps.click.ctor === '_Tuple0')\n\t\t{\n\t\t\tnode.style.pointerEvents = 'none';\n\t\t}\n\t}\n\n\n\t// TEXT\n\n\tfunction block(align)\n\t{\n\t\treturn function(text)\n\t\t{\n\t\t\tvar raw = {\n\t\t\t\tctor: 'RawHtml',\n\t\t\t\thtml: Text.renderHtml(text),\n\t\t\t\talign: align\n\t\t\t};\n\t\t\tvar pos = htmlHeight(0, raw);\n\t\t\treturn newElement(pos._0, pos._1, raw);\n\t\t};\n\t}\n\n\tfunction markdown(text)\n\t{\n\t\tvar raw = {\n\t\t\tctor: 'RawHtml',\n\t\t\thtml: text,\n\t\t\talign: null\n\t\t};\n\t\tvar pos = htmlHeight(0, raw);\n\t\treturn newElement(pos._0, pos._1, raw);\n\t}\n\n\tvar htmlHeight =\n\t\ttypeof document !== 'undefined'\n\t\t\t? realHtmlHeight\n\t\t\t: function(a, b) { return Utils.Tuple2(0, 0); };\n\n\tfunction realHtmlHeight(width, rawHtml)\n\t{\n\t\t// create dummy node\n\t\tvar temp = document.createElement('div');\n\t\ttemp.innerHTML = rawHtml.html;\n\t\tif (width > 0)\n\t\t{\n\t\t\ttemp.style.width = width + 'px';\n\t\t}\n\t\ttemp.style.visibility = 'hidden';\n\t\ttemp.style.styleFloat = 'left';\n\t\ttemp.style.cssFloat = 'left';\n\n\t\tdocument.body.appendChild(temp);\n\n\t\t// get dimensions\n\t\tvar style = window.getComputedStyle(temp, null);\n\t\tvar w = Math.ceil(style.getPropertyValue('width').slice(0, -2) - 0);\n\t\tvar h = Math.ceil(style.getPropertyValue('height').slice(0, -2) - 0);\n\t\tdocument.body.removeChild(temp);\n\t\treturn Utils.Tuple2(w, h);\n\t}\n\n\n\treturn localRuntime.Native.Graphics.Element.values = {\n\t\trender: render,\n\t\tupdate: update,\n\t\tupdateAndReplace: updateAndReplace,\n\n\t\tcreateNode: createNode,\n\t\tnewElement: F3(newElement),\n\t\taddTransform: addTransform,\n\t\thtmlHeight: F2(htmlHeight),\n\t\tguid: Utils.guid,\n\n\t\tblock: block,\n\t\tmarkdown: markdown\n\t};\n};\n\nElm.Native.Text = {};\nElm.Native.Text.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Text = localRuntime.Native.Text || {};\n\tif (localRuntime.Native.Text.values)\n\t{\n\t\treturn localRuntime.Native.Text.values;\n\t}\n\n\tvar toCss = Elm.Native.Color.make(localRuntime).toCss;\n\tvar List = Elm.Native.List.make(localRuntime);\n\n\n\t// CONSTRUCTORS\n\n\tfunction fromString(str)\n\t{\n\t\treturn {\n\t\t\tctor: 'Text:Text',\n\t\t\t_0: str\n\t\t};\n\t}\n\n\tfunction append(a, b)\n\t{\n\t\treturn {\n\t\t\tctor: 'Text:Append',\n\t\t\t_0: a,\n\t\t\t_1: b\n\t\t};\n\t}\n\n\tfunction addMeta(field, value, text)\n\t{\n\t\tvar newProps = {};\n\t\tvar newText = {\n\t\t\tctor: 'Text:Meta',\n\t\t\t_0: newProps,\n\t\t\t_1: text\n\t\t};\n\n\t\tif (text.ctor === 'Text:Meta')\n\t\t{\n\t\t\tnewText._1 = text._1;\n\t\t\tvar props = text._0;\n\t\t\tfor (var i = metaKeys.length; i--; )\n\t\t\t{\n\t\t\t\tvar key = metaKeys[i];\n\t\t\t\tvar val = props[key];\n\t\t\t\tif (val)\n\t\t\t\t{\n\t\t\t\t\tnewProps[key] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnewProps[field] = value;\n\t\treturn newText;\n\t}\n\n\tvar metaKeys = [\n\t\t'font-size',\n\t\t'font-family',\n\t\t'font-style',\n\t\t'font-weight',\n\t\t'href',\n\t\t'text-decoration',\n\t\t'color'\n\t];\n\n\n\t// conversions from Elm values to CSS\n\n\tfunction toTypefaces(list)\n\t{\n\t\tvar typefaces = List.toArray(list);\n\t\tfor (var i = typefaces.length; i--; )\n\t\t{\n\t\t\tvar typeface = typefaces[i];\n\t\t\tif (typeface.indexOf(' ') > -1)\n\t\t\t{\n\t\t\t\ttypefaces[i] = \"'\" + typeface + \"'\";\n\t\t\t}\n\t\t}\n\t\treturn typefaces.join(',');\n\t}\n\n\tfunction toLine(line)\n\t{\n\t\tvar ctor = line.ctor;\n\t\treturn ctor === 'Under'\n\t\t\t? 'underline'\n\t\t\t: ctor === 'Over'\n\t\t\t\t? 'overline'\n\t\t\t\t: 'line-through';\n\t}\n\n\t// setting styles of Text\n\n\tfunction style(style, text)\n\t{\n\t\tvar newText = addMeta('color', toCss(style.color), text);\n\t\tvar props = newText._0;\n\n\t\tif (style.typeface.ctor !== '[]')\n\t\t{\n\t\t\tprops['font-family'] = toTypefaces(style.typeface);\n\t\t}\n\t\tif (style.height.ctor !== 'Nothing')\n\t\t{\n\t\t\tprops['font-size'] = style.height._0 + 'px';\n\t\t}\n\t\tif (style.bold)\n\t\t{\n\t\t\tprops['font-weight'] = 'bold';\n\t\t}\n\t\tif (style.italic)\n\t\t{\n\t\t\tprops['font-style'] = 'italic';\n\t\t}\n\t\tif (style.line.ctor !== 'Nothing')\n\t\t{\n\t\t\tprops['text-decoration'] = toLine(style.line._0);\n\t\t}\n\t\treturn newText;\n\t}\n\n\tfunction height(px, text)\n\t{\n\t\treturn addMeta('font-size', px + 'px', text);\n\t}\n\n\tfunction typeface(names, text)\n\t{\n\t\treturn addMeta('font-family', toTypefaces(names), text);\n\t}\n\n\tfunction monospace(text)\n\t{\n\t\treturn addMeta('font-family', 'monospace', text);\n\t}\n\n\tfunction italic(text)\n\t{\n\t\treturn addMeta('font-style', 'italic', text);\n\t}\n\n\tfunction bold(text)\n\t{\n\t\treturn addMeta('font-weight', 'bold', text);\n\t}\n\n\tfunction link(href, text)\n\t{\n\t\treturn addMeta('href', href, text);\n\t}\n\n\tfunction line(line, text)\n\t{\n\t\treturn addMeta('text-decoration', toLine(line), text);\n\t}\n\n\tfunction color(color, text)\n\t{\n\t\treturn addMeta('color', toCss(color), text);\n\t}\n\n\n\t// RENDER\n\n\tfunction renderHtml(text)\n\t{\n\t\tvar tag = text.ctor;\n\t\tif (tag === 'Text:Append')\n\t\t{\n\t\t\treturn renderHtml(text._0) + renderHtml(text._1);\n\t\t}\n\t\tif (tag === 'Text:Text')\n\t\t{\n\t\t\treturn properEscape(text._0);\n\t\t}\n\t\tif (tag === 'Text:Meta')\n\t\t{\n\t\t\treturn renderMeta(text._0, renderHtml(text._1));\n\t\t}\n\t}\n\n\tfunction renderMeta(metas, string)\n\t{\n\t\tvar href = metas.href;\n\t\tif (href)\n\t\t{\n\t\t\tstring = '<a href=\"' + href + '\">' + string + '</a>';\n\t\t}\n\t\tvar styles = '';\n\t\tfor (var key in metas)\n\t\t{\n\t\t\tif (key === 'href')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstyles += key + ':' + metas[key] + ';';\n\t\t}\n\t\tif (styles)\n\t\t{\n\t\t\tstring = '<span style=\"' + styles + '\">' + string + '</span>';\n\t\t}\n\t\treturn string;\n\t}\n\n\tfunction properEscape(str)\n\t{\n\t\tif (str.length === 0)\n\t\t{\n\t\t\treturn str;\n\t\t}\n\t\tstr = str //.replace(/&/g,  '&#38;')\n\t\t\t.replace(/\"/g,  '&#34;')\n\t\t\t.replace(/'/g,  '&#39;')\n\t\t\t.replace(/</g,  '&#60;')\n\t\t\t.replace(/>/g,  '&#62;');\n\t\tvar arr = str.split('\\n');\n\t\tfor (var i = arr.length; i--; )\n\t\t{\n\t\t\tarr[i] = makeSpaces(arr[i]);\n\t\t}\n\t\treturn arr.join('<br/>');\n\t}\n\n\tfunction makeSpaces(s)\n\t{\n\t\tif (s.length === 0)\n\t\t{\n\t\t\treturn s;\n\t\t}\n\t\tvar arr = s.split('');\n\t\tif (arr[0] === ' ')\n\t\t{\n\t\t\tarr[0] = '&nbsp;';\n\t\t}\n\t\tfor (var i = arr.length; --i; )\n\t\t{\n\t\t\tif (arr[i][0] === ' ' && arr[i - 1] === ' ')\n\t\t\t{\n\t\t\t\tarr[i - 1] = arr[i - 1] + arr[i];\n\t\t\t\tarr[i] = '';\n\t\t\t}\n\t\t}\n\t\tfor (var i = arr.length; i--; )\n\t\t{\n\t\t\tif (arr[i].length > 1 && arr[i][0] === ' ')\n\t\t\t{\n\t\t\t\tvar spaces = arr[i].split('');\n\t\t\t\tfor (var j = spaces.length - 2; j >= 0; j -= 2)\n\t\t\t\t{\n\t\t\t\t\tspaces[j] = '&nbsp;';\n\t\t\t\t}\n\t\t\t\tarr[i] = spaces.join('');\n\t\t\t}\n\t\t}\n\t\tarr = arr.join('');\n\t\tif (arr[arr.length - 1] === ' ')\n\t\t{\n\t\t\treturn arr.slice(0, -1) + '&nbsp;';\n\t\t}\n\t\treturn arr;\n\t}\n\n\n\treturn localRuntime.Native.Text.values = {\n\t\tfromString: fromString,\n\t\tappend: F2(append),\n\n\t\theight: F2(height),\n\t\titalic: italic,\n\t\tbold: bold,\n\t\tline: F2(line),\n\t\tmonospace: monospace,\n\t\ttypeface: F2(typeface),\n\t\tcolor: F2(color),\n\t\tlink: F2(link),\n\t\tstyle: F2(style),\n\n\t\ttoTypefaces: toTypefaces,\n\t\ttoLine: toLine,\n\t\trenderHtml: renderHtml\n\t};\n};\n\nElm.Text = Elm.Text || {};\nElm.Text.make = function (_elm) {\n   \"use strict\";\n   _elm.Text = _elm.Text || {};\n   if (_elm.Text.values) return _elm.Text.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Text = Elm.Native.Text.make(_elm);\n   var _op = {};\n   var line = $Native$Text.line;\n   var italic = $Native$Text.italic;\n   var bold = $Native$Text.bold;\n   var color = $Native$Text.color;\n   var height = $Native$Text.height;\n   var link = $Native$Text.link;\n   var monospace = $Native$Text.monospace;\n   var typeface = $Native$Text.typeface;\n   var style = $Native$Text.style;\n   var append = $Native$Text.append;\n   var fromString = $Native$Text.fromString;\n   var empty = fromString(\"\");\n   var concat = function (texts) {    return A3($List.foldr,append,empty,texts);};\n   var join = F2(function (seperator,texts) {    return concat(A2($List.intersperse,seperator,texts));});\n   var defaultStyle = {typeface: _U.list([]),height: $Maybe.Nothing,color: $Color.black,bold: false,italic: false,line: $Maybe.Nothing};\n   var Style = F6(function (a,b,c,d,e,f) {    return {typeface: a,height: b,color: c,bold: d,italic: e,line: f};});\n   var Through = {ctor: \"Through\"};\n   var Over = {ctor: \"Over\"};\n   var Under = {ctor: \"Under\"};\n   var Text = {ctor: \"Text\"};\n   return _elm.Text.values = {_op: _op\n                             ,fromString: fromString\n                             ,empty: empty\n                             ,append: append\n                             ,concat: concat\n                             ,join: join\n                             ,link: link\n                             ,style: style\n                             ,defaultStyle: defaultStyle\n                             ,typeface: typeface\n                             ,monospace: monospace\n                             ,height: height\n                             ,color: color\n                             ,bold: bold\n                             ,italic: italic\n                             ,line: line\n                             ,Style: Style\n                             ,Under: Under\n                             ,Over: Over\n                             ,Through: Through};\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values) return _elm.Graphics.Element.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm),\n   $Text = Elm.Text.make(_elm);\n   var _op = {};\n   var DOut = {ctor: \"DOut\"};\n   var outward = DOut;\n   var DIn = {ctor: \"DIn\"};\n   var inward = DIn;\n   var DRight = {ctor: \"DRight\"};\n   var right = DRight;\n   var DLeft = {ctor: \"DLeft\"};\n   var left = DLeft;\n   var DDown = {ctor: \"DDown\"};\n   var down = DDown;\n   var DUp = {ctor: \"DUp\"};\n   var up = DUp;\n   var RawPosition = F4(function (a,b,c,d) {    return {horizontal: a,vertical: b,x: c,y: d};});\n   var Position = function (a) {    return {ctor: \"Position\",_0: a};};\n   var Relative = function (a) {    return {ctor: \"Relative\",_0: a};};\n   var relative = Relative;\n   var Absolute = function (a) {    return {ctor: \"Absolute\",_0: a};};\n   var absolute = Absolute;\n   var N = {ctor: \"N\"};\n   var bottomLeft = Position({horizontal: N,vertical: N,x: Absolute(0),y: Absolute(0)});\n   var bottomLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: N,x: x,y: y});});\n   var Z = {ctor: \"Z\"};\n   var middle = Position({horizontal: Z,vertical: Z,x: Relative(0.5),y: Relative(0.5)});\n   var midLeft = Position({horizontal: N,vertical: Z,x: Absolute(0),y: Relative(0.5)});\n   var midBottom = Position({horizontal: Z,vertical: N,x: Relative(0.5),y: Absolute(0)});\n   var middleAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: Z,x: x,y: y});});\n   var midLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: Z,x: x,y: y});});\n   var midBottomAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: N,x: x,y: y});});\n   var P = {ctor: \"P\"};\n   var topLeft = Position({horizontal: N,vertical: P,x: Absolute(0),y: Absolute(0)});\n   var topRight = Position({horizontal: P,vertical: P,x: Absolute(0),y: Absolute(0)});\n   var bottomRight = Position({horizontal: P,vertical: N,x: Absolute(0),y: Absolute(0)});\n   var midRight = Position({horizontal: P,vertical: Z,x: Absolute(0),y: Relative(0.5)});\n   var midTop = Position({horizontal: Z,vertical: P,x: Relative(0.5),y: Absolute(0)});\n   var topLeftAt = F2(function (x,y) {    return Position({horizontal: N,vertical: P,x: x,y: y});});\n   var topRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: P,x: x,y: y});});\n   var bottomRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: N,x: x,y: y});});\n   var midRightAt = F2(function (x,y) {    return Position({horizontal: P,vertical: Z,x: x,y: y});});\n   var midTopAt = F2(function (x,y) {    return Position({horizontal: Z,vertical: P,x: x,y: y});});\n   var justified = $Native$Graphics$Element.block(\"justify\");\n   var centered = $Native$Graphics$Element.block(\"center\");\n   var rightAligned = $Native$Graphics$Element.block(\"right\");\n   var leftAligned = $Native$Graphics$Element.block(\"left\");\n   var show = function (value) {    return leftAligned($Text.monospace($Text.fromString($Basics.toString(value))));};\n   var Tiled = {ctor: \"Tiled\"};\n   var Cropped = function (a) {    return {ctor: \"Cropped\",_0: a};};\n   var Fitted = {ctor: \"Fitted\"};\n   var Plain = {ctor: \"Plain\"};\n   var Custom = {ctor: \"Custom\"};\n   var RawHtml = {ctor: \"RawHtml\"};\n   var Spacer = {ctor: \"Spacer\"};\n   var Flow = F2(function (a,b) {    return {ctor: \"Flow\",_0: a,_1: b};});\n   var Container = F2(function (a,b) {    return {ctor: \"Container\",_0: a,_1: b};});\n   var Image = F4(function (a,b,c,d) {    return {ctor: \"Image\",_0: a,_1: b,_2: c,_3: d};});\n   var newElement = $Native$Graphics$Element.newElement;\n   var image = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Plain,w,h,src));});\n   var fittedImage = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Fitted,w,h,src));});\n   var croppedImage = F4(function (pos,w,h,src) {    return A3(newElement,w,h,A4(Image,Cropped(pos),w,h,src));});\n   var tiledImage = F3(function (w,h,src) {    return A3(newElement,w,h,A4(Image,Tiled,w,h,src));});\n   var container = F4(function (w,h,_p0,e) {    var _p1 = _p0;return A3(newElement,w,h,A2(Container,_p1._0,e));});\n   var spacer = F2(function (w,h) {    return A3(newElement,w,h,Spacer);});\n   var sizeOf = function (_p2) {    var _p3 = _p2;var _p4 = _p3._0;return {ctor: \"_Tuple2\",_0: _p4.props.width,_1: _p4.props.height};};\n   var heightOf = function (_p5) {    var _p6 = _p5;return _p6._0.props.height;};\n   var widthOf = function (_p7) {    var _p8 = _p7;return _p8._0.props.width;};\n   var above = F2(function (hi,lo) {\n      return A3(newElement,A2($Basics.max,widthOf(hi),widthOf(lo)),heightOf(hi) + heightOf(lo),A2(Flow,DDown,_U.list([hi,lo])));\n   });\n   var below = F2(function (lo,hi) {\n      return A3(newElement,A2($Basics.max,widthOf(hi),widthOf(lo)),heightOf(hi) + heightOf(lo),A2(Flow,DDown,_U.list([hi,lo])));\n   });\n   var beside = F2(function (lft,rht) {\n      return A3(newElement,widthOf(lft) + widthOf(rht),A2($Basics.max,heightOf(lft),heightOf(rht)),A2(Flow,right,_U.list([lft,rht])));\n   });\n   var layers = function (es) {\n      var hs = A2($List.map,heightOf,es);\n      var ws = A2($List.map,widthOf,es);\n      return A3(newElement,A2($Maybe.withDefault,0,$List.maximum(ws)),A2($Maybe.withDefault,0,$List.maximum(hs)),A2(Flow,DOut,es));\n   };\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,es) {\n      var newFlow = F2(function (w,h) {    return A3(newElement,w,h,A2(Flow,dir,es));});\n      var maxOrZero = function (list) {    return A2($Maybe.withDefault,0,$List.maximum(list));};\n      var hs = A2($List.map,heightOf,es);\n      var ws = A2($List.map,widthOf,es);\n      if (_U.eq(es,_U.list([]))) return empty; else {\n            var _p9 = dir;\n            switch (_p9.ctor)\n            {case \"DUp\": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n               case \"DDown\": return A2(newFlow,maxOrZero(ws),$List.sum(hs));\n               case \"DLeft\": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n               case \"DRight\": return A2(newFlow,$List.sum(ws),maxOrZero(hs));\n               case \"DIn\": return A2(newFlow,maxOrZero(ws),maxOrZero(hs));\n               default: return A2(newFlow,maxOrZero(ws),maxOrZero(hs));}\n         }\n   });\n   var Properties = F9(function (a,b,c,d,e,f,g,h,i) {    return {id: a,width: b,height: c,opacity: d,color: e,href: f,tag: g,hover: h,click: i};});\n   var Element_elm_builtin = function (a) {    return {ctor: \"Element_elm_builtin\",_0: a};};\n   var width = F2(function (newWidth,_p10) {\n      var _p11 = _p10;\n      var _p14 = _p11._0.props;\n      var _p13 = _p11._0.element;\n      var newHeight = function () {\n         var _p12 = _p13;\n         switch (_p12.ctor)\n         {case \"Image\": return $Basics.round($Basics.toFloat(_p12._2) / $Basics.toFloat(_p12._1) * $Basics.toFloat(newWidth));\n            case \"RawHtml\": return $Basics.snd(A2($Native$Graphics$Element.htmlHeight,newWidth,_p13));\n            default: return _p14.height;}\n      }();\n      return Element_elm_builtin({element: _p13,props: _U.update(_p14,{width: newWidth,height: newHeight})});\n   });\n   var height = F2(function (newHeight,_p15) {\n      var _p16 = _p15;\n      return Element_elm_builtin({element: _p16._0.element,props: _U.update(_p16._0.props,{height: newHeight})});\n   });\n   var size = F3(function (w,h,e) {    return A2(height,h,A2(width,w,e));});\n   var opacity = F2(function (givenOpacity,_p17) {\n      var _p18 = _p17;\n      return Element_elm_builtin({element: _p18._0.element,props: _U.update(_p18._0.props,{opacity: givenOpacity})});\n   });\n   var color = F2(function (clr,_p19) {\n      var _p20 = _p19;\n      return Element_elm_builtin({element: _p20._0.element,props: _U.update(_p20._0.props,{color: $Maybe.Just(clr)})});\n   });\n   var tag = F2(function (name,_p21) {    var _p22 = _p21;return Element_elm_builtin({element: _p22._0.element,props: _U.update(_p22._0.props,{tag: name})});});\n   var link = F2(function (href,_p23) {\n      var _p24 = _p23;\n      return Element_elm_builtin({element: _p24._0.element,props: _U.update(_p24._0.props,{href: href})});\n   });\n   return _elm.Graphics.Element.values = {_op: _op\n                                         ,image: image\n                                         ,fittedImage: fittedImage\n                                         ,croppedImage: croppedImage\n                                         ,tiledImage: tiledImage\n                                         ,leftAligned: leftAligned\n                                         ,rightAligned: rightAligned\n                                         ,centered: centered\n                                         ,justified: justified\n                                         ,show: show\n                                         ,width: width\n                                         ,height: height\n                                         ,size: size\n                                         ,color: color\n                                         ,opacity: opacity\n                                         ,link: link\n                                         ,tag: tag\n                                         ,widthOf: widthOf\n                                         ,heightOf: heightOf\n                                         ,sizeOf: sizeOf\n                                         ,flow: flow\n                                         ,up: up\n                                         ,down: down\n                                         ,left: left\n                                         ,right: right\n                                         ,inward: inward\n                                         ,outward: outward\n                                         ,layers: layers\n                                         ,above: above\n                                         ,below: below\n                                         ,beside: beside\n                                         ,empty: empty\n                                         ,spacer: spacer\n                                         ,container: container\n                                         ,middle: middle\n                                         ,midTop: midTop\n                                         ,midBottom: midBottom\n                                         ,midLeft: midLeft\n                                         ,midRight: midRight\n                                         ,topLeft: topLeft\n                                         ,topRight: topRight\n                                         ,bottomLeft: bottomLeft\n                                         ,bottomRight: bottomRight\n                                         ,absolute: absolute\n                                         ,relative: relative\n                                         ,middleAt: middleAt\n                                         ,midTopAt: midTopAt\n                                         ,midBottomAt: midBottomAt\n                                         ,midLeftAt: midLeftAt\n                                         ,midRightAt: midRightAt\n                                         ,topLeftAt: topLeftAt\n                                         ,topRightAt: topRightAt\n                                         ,bottomLeftAt: bottomLeftAt\n                                         ,bottomRightAt: bottomRightAt};\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Collage = Elm.Graphics.Collage || {};\nElm.Graphics.Collage.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Collage = _elm.Graphics.Collage || {};\n   if (_elm.Graphics.Collage.values) return _elm.Graphics.Collage.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Graphics$Collage = Elm.Native.Graphics.Collage.make(_elm),\n   $Text = Elm.Text.make(_elm),\n   $Transform2D = Elm.Transform2D.make(_elm);\n   var _op = {};\n   var Shape = function (a) {    return {ctor: \"Shape\",_0: a};};\n   var polygon = function (points) {    return Shape(points);};\n   var rect = F2(function (w,h) {\n      var hh = h / 2;\n      var hw = w / 2;\n      return Shape(_U.list([{ctor: \"_Tuple2\",_0: 0 - hw,_1: 0 - hh}\n                           ,{ctor: \"_Tuple2\",_0: 0 - hw,_1: hh}\n                           ,{ctor: \"_Tuple2\",_0: hw,_1: hh}\n                           ,{ctor: \"_Tuple2\",_0: hw,_1: 0 - hh}]));\n   });\n   var square = function (n) {    return A2(rect,n,n);};\n   var oval = F2(function (w,h) {\n      var hh = h / 2;\n      var hw = w / 2;\n      var n = 50;\n      var t = 2 * $Basics.pi / n;\n      var f = function (i) {    return {ctor: \"_Tuple2\",_0: hw * $Basics.cos(t * i),_1: hh * $Basics.sin(t * i)};};\n      return Shape(A2($List.map,f,_U.range(0,n - 1)));\n   });\n   var circle = function (r) {    return A2(oval,2 * r,2 * r);};\n   var ngon = F2(function (n,r) {\n      var m = $Basics.toFloat(n);\n      var t = 2 * $Basics.pi / m;\n      var f = function (i) {    return {ctor: \"_Tuple2\",_0: r * $Basics.cos(t * i),_1: r * $Basics.sin(t * i)};};\n      return Shape(A2($List.map,f,_U.range(0,m - 1)));\n   });\n   var Path = function (a) {    return {ctor: \"Path\",_0: a};};\n   var path = function (ps) {    return Path(ps);};\n   var segment = F2(function (p1,p2) {    return Path(_U.list([p1,p2]));});\n   var collage = $Native$Graphics$Collage.collage;\n   var Fill = function (a) {    return {ctor: \"Fill\",_0: a};};\n   var Line = function (a) {    return {ctor: \"Line\",_0: a};};\n   var FGroup = F2(function (a,b) {    return {ctor: \"FGroup\",_0: a,_1: b};});\n   var FElement = function (a) {    return {ctor: \"FElement\",_0: a};};\n   var FImage = F4(function (a,b,c,d) {    return {ctor: \"FImage\",_0: a,_1: b,_2: c,_3: d};});\n   var FText = function (a) {    return {ctor: \"FText\",_0: a};};\n   var FOutlinedText = F2(function (a,b) {    return {ctor: \"FOutlinedText\",_0: a,_1: b};});\n   var FShape = F2(function (a,b) {    return {ctor: \"FShape\",_0: a,_1: b};});\n   var FPath = F2(function (a,b) {    return {ctor: \"FPath\",_0: a,_1: b};});\n   var LineStyle = F6(function (a,b,c,d,e,f) {    return {color: a,width: b,cap: c,join: d,dashing: e,dashOffset: f};});\n   var Clipped = {ctor: \"Clipped\"};\n   var Sharp = function (a) {    return {ctor: \"Sharp\",_0: a};};\n   var Smooth = {ctor: \"Smooth\"};\n   var Padded = {ctor: \"Padded\"};\n   var Round = {ctor: \"Round\"};\n   var Flat = {ctor: \"Flat\"};\n   var defaultLine = {color: $Color.black,width: 1,cap: Flat,join: Sharp(10),dashing: _U.list([]),dashOffset: 0};\n   var solid = function (clr) {    return _U.update(defaultLine,{color: clr});};\n   var dashed = function (clr) {    return _U.update(defaultLine,{color: clr,dashing: _U.list([8,4])});};\n   var dotted = function (clr) {    return _U.update(defaultLine,{color: clr,dashing: _U.list([3,3])});};\n   var Grad = function (a) {    return {ctor: \"Grad\",_0: a};};\n   var Texture = function (a) {    return {ctor: \"Texture\",_0: a};};\n   var Solid = function (a) {    return {ctor: \"Solid\",_0: a};};\n   var Form_elm_builtin = function (a) {    return {ctor: \"Form_elm_builtin\",_0: a};};\n   var form = function (f) {    return Form_elm_builtin({theta: 0,scale: 1,x: 0,y: 0,alpha: 1,form: f});};\n   var fill = F2(function (style,_p0) {    var _p1 = _p0;return form(A2(FShape,Fill(style),_p1._0));});\n   var filled = F2(function (color,shape) {    return A2(fill,Solid(color),shape);});\n   var textured = F2(function (src,shape) {    return A2(fill,Texture(src),shape);});\n   var gradient = F2(function (grad,shape) {    return A2(fill,Grad(grad),shape);});\n   var outlined = F2(function (style,_p2) {    var _p3 = _p2;return form(A2(FShape,Line(style),_p3._0));});\n   var traced = F2(function (style,_p4) {    var _p5 = _p4;return form(A2(FPath,style,_p5._0));});\n   var sprite = F4(function (w,h,pos,src) {    return form(A4(FImage,w,h,pos,src));});\n   var toForm = function (e) {    return form(FElement(e));};\n   var group = function (fs) {    return form(A2(FGroup,$Transform2D.identity,fs));};\n   var groupTransform = F2(function (matrix,fs) {    return form(A2(FGroup,matrix,fs));});\n   var text = function (t) {    return form(FText(t));};\n   var outlinedText = F2(function (ls,t) {    return form(A2(FOutlinedText,ls,t));});\n   var move = F2(function (_p7,_p6) {\n      var _p8 = _p7;\n      var _p9 = _p6;\n      var _p10 = _p9._0;\n      return Form_elm_builtin(_U.update(_p10,{x: _p10.x + _p8._0,y: _p10.y + _p8._1}));\n   });\n   var moveX = F2(function (x,_p11) {    var _p12 = _p11;var _p13 = _p12._0;return Form_elm_builtin(_U.update(_p13,{x: _p13.x + x}));});\n   var moveY = F2(function (y,_p14) {    var _p15 = _p14;var _p16 = _p15._0;return Form_elm_builtin(_U.update(_p16,{y: _p16.y + y}));});\n   var scale = F2(function (s,_p17) {    var _p18 = _p17;var _p19 = _p18._0;return Form_elm_builtin(_U.update(_p19,{scale: _p19.scale * s}));});\n   var rotate = F2(function (t,_p20) {    var _p21 = _p20;var _p22 = _p21._0;return Form_elm_builtin(_U.update(_p22,{theta: _p22.theta + t}));});\n   var alpha = F2(function (a,_p23) {    var _p24 = _p23;return Form_elm_builtin(_U.update(_p24._0,{alpha: a}));});\n   return _elm.Graphics.Collage.values = {_op: _op\n                                         ,collage: collage\n                                         ,toForm: toForm\n                                         ,filled: filled\n                                         ,textured: textured\n                                         ,gradient: gradient\n                                         ,outlined: outlined\n                                         ,traced: traced\n                                         ,text: text\n                                         ,outlinedText: outlinedText\n                                         ,move: move\n                                         ,moveX: moveX\n                                         ,moveY: moveY\n                                         ,scale: scale\n                                         ,rotate: rotate\n                                         ,alpha: alpha\n                                         ,group: group\n                                         ,groupTransform: groupTransform\n                                         ,rect: rect\n                                         ,oval: oval\n                                         ,square: square\n                                         ,circle: circle\n                                         ,ngon: ngon\n                                         ,polygon: polygon\n                                         ,segment: segment\n                                         ,path: path\n                                         ,solid: solid\n                                         ,dashed: dashed\n                                         ,dotted: dotted\n                                         ,defaultLine: defaultLine\n                                         ,LineStyle: LineStyle\n                                         ,Flat: Flat\n                                         ,Round: Round\n                                         ,Padded: Padded\n                                         ,Smooth: Smooth\n                                         ,Sharp: Sharp\n                                         ,Clipped: Clipped};\n};\nElm.Native.Debug = {};\nElm.Native.Debug.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Debug = localRuntime.Native.Debug || {};\n\tif (localRuntime.Native.Debug.values)\n\t{\n\t\treturn localRuntime.Native.Debug.values;\n\t}\n\n\tvar toString = Elm.Native.Utils.make(localRuntime).toString;\n\n\tfunction log(tag, value)\n\t{\n\t\tvar msg = tag + ': ' + toString(value);\n\t\tvar process = process || {};\n\t\tif (process.stdout)\n\t\t{\n\t\t\tprocess.stdout.write(msg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(msg);\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction crash(message)\n\t{\n\t\tthrow new Error(message);\n\t}\n\n\tfunction tracePath(tag, form)\n\t{\n\t\tif (localRuntime.debug)\n\t\t{\n\t\t\treturn localRuntime.debug.trace(tag, form);\n\t\t}\n\t\treturn form;\n\t}\n\n\tfunction watch(tag, value)\n\t{\n\t\tif (localRuntime.debug)\n\t\t{\n\t\t\tlocalRuntime.debug.watch(tag, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction watchSummary(tag, summarize, value)\n\t{\n\t\tif (localRuntime.debug)\n\t\t{\n\t\t\tlocalRuntime.debug.watch(tag, summarize(value));\n\t\t}\n\t\treturn value;\n\t}\n\n\treturn localRuntime.Native.Debug.values = {\n\t\tcrash: crash,\n\t\ttracePath: F2(tracePath),\n\t\tlog: F2(log),\n\t\twatch: F2(watch),\n\t\twatchSummary: F3(watchSummary)\n\t};\n};\n\nElm.Debug = Elm.Debug || {};\nElm.Debug.make = function (_elm) {\n   \"use strict\";\n   _elm.Debug = _elm.Debug || {};\n   if (_elm.Debug.values) return _elm.Debug.values;\n   var _U = Elm.Native.Utils.make(_elm),$Graphics$Collage = Elm.Graphics.Collage.make(_elm),$Native$Debug = Elm.Native.Debug.make(_elm);\n   var _op = {};\n   var trace = $Native$Debug.tracePath;\n   var watchSummary = $Native$Debug.watchSummary;\n   var watch = $Native$Debug.watch;\n   var crash = $Native$Debug.crash;\n   var log = $Native$Debug.log;\n   return _elm.Debug.values = {_op: _op,log: log,crash: crash,watch: watch,watchSummary: watchSummary,trace: trace};\n};\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   \"use strict\";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values) return _elm.Result.values;\n   var _U = Elm.Native.Utils.make(_elm),$Maybe = Elm.Maybe.make(_elm);\n   var _op = {};\n   var toMaybe = function (result) {    var _p0 = result;if (_p0.ctor === \"Ok\") {    return $Maybe.Just(_p0._0);} else {    return $Maybe.Nothing;}};\n   var withDefault = F2(function (def,result) {    var _p1 = result;if (_p1.ctor === \"Ok\") {    return _p1._0;} else {    return def;}});\n   var Err = function (a) {    return {ctor: \"Err\",_0: a};};\n   var andThen = F2(function (result,callback) {    var _p2 = result;if (_p2.ctor === \"Ok\") {    return callback(_p2._0);} else {    return Err(_p2._0);}});\n   var Ok = function (a) {    return {ctor: \"Ok\",_0: a};};\n   var map = F2(function (func,ra) {    var _p3 = ra;if (_p3.ctor === \"Ok\") {    return Ok(func(_p3._0));} else {    return Err(_p3._0);}});\n   var map2 = F3(function (func,ra,rb) {\n      var _p4 = {ctor: \"_Tuple2\",_0: ra,_1: rb};\n      if (_p4._0.ctor === \"Ok\") {\n            if (_p4._1.ctor === \"Ok\") {\n                  return Ok(A2(func,_p4._0._0,_p4._1._0));\n               } else {\n                  return Err(_p4._1._0);\n               }\n         } else {\n            return Err(_p4._0._0);\n         }\n   });\n   var map3 = F4(function (func,ra,rb,rc) {\n      var _p5 = {ctor: \"_Tuple3\",_0: ra,_1: rb,_2: rc};\n      if (_p5._0.ctor === \"Ok\") {\n            if (_p5._1.ctor === \"Ok\") {\n                  if (_p5._2.ctor === \"Ok\") {\n                        return Ok(A3(func,_p5._0._0,_p5._1._0,_p5._2._0));\n                     } else {\n                        return Err(_p5._2._0);\n                     }\n               } else {\n                  return Err(_p5._1._0);\n               }\n         } else {\n            return Err(_p5._0._0);\n         }\n   });\n   var map4 = F5(function (func,ra,rb,rc,rd) {\n      var _p6 = {ctor: \"_Tuple4\",_0: ra,_1: rb,_2: rc,_3: rd};\n      if (_p6._0.ctor === \"Ok\") {\n            if (_p6._1.ctor === \"Ok\") {\n                  if (_p6._2.ctor === \"Ok\") {\n                        if (_p6._3.ctor === \"Ok\") {\n                              return Ok(A4(func,_p6._0._0,_p6._1._0,_p6._2._0,_p6._3._0));\n                           } else {\n                              return Err(_p6._3._0);\n                           }\n                     } else {\n                        return Err(_p6._2._0);\n                     }\n               } else {\n                  return Err(_p6._1._0);\n               }\n         } else {\n            return Err(_p6._0._0);\n         }\n   });\n   var map5 = F6(function (func,ra,rb,rc,rd,re) {\n      var _p7 = {ctor: \"_Tuple5\",_0: ra,_1: rb,_2: rc,_3: rd,_4: re};\n      if (_p7._0.ctor === \"Ok\") {\n            if (_p7._1.ctor === \"Ok\") {\n                  if (_p7._2.ctor === \"Ok\") {\n                        if (_p7._3.ctor === \"Ok\") {\n                              if (_p7._4.ctor === \"Ok\") {\n                                    return Ok(A5(func,_p7._0._0,_p7._1._0,_p7._2._0,_p7._3._0,_p7._4._0));\n                                 } else {\n                                    return Err(_p7._4._0);\n                                 }\n                           } else {\n                              return Err(_p7._3._0);\n                           }\n                     } else {\n                        return Err(_p7._2._0);\n                     }\n               } else {\n                  return Err(_p7._1._0);\n               }\n         } else {\n            return Err(_p7._0._0);\n         }\n   });\n   var formatError = F2(function (f,result) {    var _p8 = result;if (_p8.ctor === \"Ok\") {    return Ok(_p8._0);} else {    return Err(f(_p8._0));}});\n   var fromMaybe = F2(function (err,maybe) {    var _p9 = maybe;if (_p9.ctor === \"Just\") {    return Ok(_p9._0);} else {    return Err(err);}});\n   return _elm.Result.values = {_op: _op\n                               ,withDefault: withDefault\n                               ,map: map\n                               ,map2: map2\n                               ,map3: map3\n                               ,map4: map4\n                               ,map5: map5\n                               ,andThen: andThen\n                               ,toMaybe: toMaybe\n                               ,fromMaybe: fromMaybe\n                               ,formatError: formatError\n                               ,Ok: Ok\n                               ,Err: Err};\n};\nElm.Native.Signal = {};\n\nElm.Native.Signal.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Signal = localRuntime.Native.Signal || {};\n\tif (localRuntime.Native.Signal.values)\n\t{\n\t\treturn localRuntime.Native.Signal.values;\n\t}\n\n\n\tvar Task = Elm.Native.Task.make(localRuntime);\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\n\tfunction broadcastToKids(node, timestamp, update)\n\t{\n\t\tvar kids = node.kids;\n\t\tfor (var i = kids.length; i--; )\n\t\t{\n\t\t\tkids[i].notify(timestamp, update, node.id);\n\t\t}\n\t}\n\n\n\t// INPUT\n\n\tfunction input(name, base)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'input-' + name,\n\t\t\tvalue: base,\n\t\t\tparents: [],\n\t\t\tkids: []\n\t\t};\n\n\t\tnode.notify = function(timestamp, targetId, value) {\n\t\t\tvar update = targetId === node.id;\n\t\t\tif (update)\n\t\t\t{\n\t\t\t\tnode.value = value;\n\t\t\t}\n\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\treturn update;\n\t\t};\n\n\t\tlocalRuntime.inputs.push(node);\n\n\t\treturn node;\n\t}\n\n\tfunction constant(value)\n\t{\n\t\treturn input('constant', value);\n\t}\n\n\n\t// MAILBOX\n\n\tfunction mailbox(base)\n\t{\n\t\tvar signal = input('mailbox', base);\n\n\t\tfunction send(value) {\n\t\t\treturn Task.asyncFunction(function(callback) {\n\t\t\t\tlocalRuntime.setTimeout(function() {\n\t\t\t\t\tlocalRuntime.notify(signal.id, value);\n\t\t\t\t}, 0);\n\t\t\t\tcallback(Task.succeed(Utils.Tuple0));\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tsignal: signal,\n\t\t\taddress: {\n\t\t\t\tctor: 'Address',\n\t\t\t\t_0: send\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction sendMessage(message)\n\t{\n\t\tTask.perform(message._0);\n\t}\n\n\n\t// OUTPUT\n\n\tfunction output(name, handler, parent)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'output-' + name,\n\t\t\tparents: [parent],\n\t\t\tisOutput: true\n\t\t};\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tif (parentUpdate)\n\t\t\t{\n\t\t\t\thandler(parent.value);\n\t\t\t}\n\t\t};\n\n\t\tparent.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\t// MAP\n\n\tfunction mapMany(refreshValue, args)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'map' + args.length,\n\t\t\tvalue: refreshValue(),\n\t\t\tparents: args,\n\t\t\tkids: []\n\t\t};\n\n\t\tvar numberOfParents = args.length;\n\t\tvar count = 0;\n\t\tvar update = false;\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\t++count;\n\n\t\t\tupdate = update || parentUpdate;\n\n\t\t\tif (count === numberOfParents)\n\t\t\t{\n\t\t\t\tif (update)\n\t\t\t\t{\n\t\t\t\t\tnode.value = refreshValue();\n\t\t\t\t}\n\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t\tupdate = false;\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (var i = numberOfParents; i--; )\n\t\t{\n\t\t\targs[i].kids.push(node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\n\tfunction map(func, a)\n\t{\n\t\tfunction refreshValue()\n\t\t{\n\t\t\treturn func(a.value);\n\t\t}\n\t\treturn mapMany(refreshValue, [a]);\n\t}\n\n\n\tfunction map2(func, a, b)\n\t{\n\t\tfunction refreshValue()\n\t\t{\n\t\t\treturn A2( func, a.value, b.value );\n\t\t}\n\t\treturn mapMany(refreshValue, [a, b]);\n\t}\n\n\n\tfunction map3(func, a, b, c)\n\t{\n\t\tfunction refreshValue()\n\t\t{\n\t\t\treturn A3( func, a.value, b.value, c.value );\n\t\t}\n\t\treturn mapMany(refreshValue, [a, b, c]);\n\t}\n\n\n\tfunction map4(func, a, b, c, d)\n\t{\n\t\tfunction refreshValue()\n\t\t{\n\t\t\treturn A4( func, a.value, b.value, c.value, d.value );\n\t\t}\n\t\treturn mapMany(refreshValue, [a, b, c, d]);\n\t}\n\n\n\tfunction map5(func, a, b, c, d, e)\n\t{\n\t\tfunction refreshValue()\n\t\t{\n\t\t\treturn A5( func, a.value, b.value, c.value, d.value, e.value );\n\t\t}\n\t\treturn mapMany(refreshValue, [a, b, c, d, e]);\n\t}\n\n\n\t// FOLD\n\n\tfunction foldp(update, state, signal)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'foldp',\n\t\t\tparents: [signal],\n\t\t\tkids: [],\n\t\t\tvalue: state\n\t\t};\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tif (parentUpdate)\n\t\t\t{\n\t\t\t\tnode.value = A2( update, signal.value, node.value );\n\t\t\t}\n\t\t\tbroadcastToKids(node, timestamp, parentUpdate);\n\t\t};\n\n\t\tsignal.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\t// TIME\n\n\tfunction timestamp(signal)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'timestamp',\n\t\t\tvalue: Utils.Tuple2(localRuntime.timer.programStart, signal.value),\n\t\t\tparents: [signal],\n\t\t\tkids: []\n\t\t};\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tif (parentUpdate)\n\t\t\t{\n\t\t\t\tnode.value = Utils.Tuple2(timestamp, signal.value);\n\t\t\t}\n\t\t\tbroadcastToKids(node, timestamp, parentUpdate);\n\t\t};\n\n\t\tsignal.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\tfunction delay(time, signal)\n\t{\n\t\tvar delayed = input('delay-input-' + time, signal.value);\n\n\t\tfunction handler(value)\n\t\t{\n\t\t\tsetTimeout(function() {\n\t\t\t\tlocalRuntime.notify(delayed.id, value);\n\t\t\t}, time);\n\t\t}\n\n\t\toutput('delay-output-' + time, handler, signal);\n\n\t\treturn delayed;\n\t}\n\n\n\t// MERGING\n\n\tfunction genericMerge(tieBreaker, leftStream, rightStream)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'merge',\n\t\t\tvalue: A2(tieBreaker, leftStream.value, rightStream.value),\n\t\t\tparents: [leftStream, rightStream],\n\t\t\tkids: []\n\t\t};\n\n\t\tvar left = { touched: false, update: false, value: null };\n\t\tvar right = { touched: false, update: false, value: null };\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tif (parentID === leftStream.id)\n\t\t\t{\n\t\t\t\tleft.touched = true;\n\t\t\t\tleft.update = parentUpdate;\n\t\t\t\tleft.value = leftStream.value;\n\t\t\t}\n\t\t\tif (parentID === rightStream.id)\n\t\t\t{\n\t\t\t\tright.touched = true;\n\t\t\t\tright.update = parentUpdate;\n\t\t\t\tright.value = rightStream.value;\n\t\t\t}\n\n\t\t\tif (left.touched && right.touched)\n\t\t\t{\n\t\t\t\tvar update = false;\n\t\t\t\tif (left.update && right.update)\n\t\t\t\t{\n\t\t\t\t\tnode.value = A2(tieBreaker, left.value, right.value);\n\t\t\t\t\tupdate = true;\n\t\t\t\t}\n\t\t\t\telse if (left.update)\n\t\t\t\t{\n\t\t\t\t\tnode.value = left.value;\n\t\t\t\t\tupdate = true;\n\t\t\t\t}\n\t\t\t\telse if (right.update)\n\t\t\t\t{\n\t\t\t\t\tnode.value = right.value;\n\t\t\t\t\tupdate = true;\n\t\t\t\t}\n\t\t\t\tleft.touched = false;\n\t\t\t\tright.touched = false;\n\n\t\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t\t}\n\t\t};\n\n\t\tleftStream.kids.push(node);\n\t\trightStream.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\t// FILTERING\n\n\tfunction filterMap(toMaybe, base, signal)\n\t{\n\t\tvar maybe = toMaybe(signal.value);\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'filterMap',\n\t\t\tvalue: maybe.ctor === 'Nothing' ? base : maybe._0,\n\t\t\tparents: [signal],\n\t\t\tkids: []\n\t\t};\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tvar update = false;\n\t\t\tif (parentUpdate)\n\t\t\t{\n\t\t\t\tvar maybe = toMaybe(signal.value);\n\t\t\t\tif (maybe.ctor === 'Just')\n\t\t\t\t{\n\t\t\t\t\tupdate = true;\n\t\t\t\t\tnode.value = maybe._0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t};\n\n\t\tsignal.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\t// SAMPLING\n\n\tfunction sampleOn(ticker, signal)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'sampleOn',\n\t\t\tvalue: signal.value,\n\t\t\tparents: [ticker, signal],\n\t\t\tkids: []\n\t\t};\n\n\t\tvar signalTouch = false;\n\t\tvar tickerTouch = false;\n\t\tvar tickerUpdate = false;\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tif (parentID === ticker.id)\n\t\t\t{\n\t\t\t\ttickerTouch = true;\n\t\t\t\ttickerUpdate = parentUpdate;\n\t\t\t}\n\t\t\tif (parentID === signal.id)\n\t\t\t{\n\t\t\t\tsignalTouch = true;\n\t\t\t}\n\n\t\t\tif (tickerTouch && signalTouch)\n\t\t\t{\n\t\t\t\tif (tickerUpdate)\n\t\t\t\t{\n\t\t\t\t\tnode.value = signal.value;\n\t\t\t\t}\n\t\t\t\ttickerTouch = false;\n\t\t\t\tsignalTouch = false;\n\n\t\t\t\tbroadcastToKids(node, timestamp, tickerUpdate);\n\t\t\t}\n\t\t};\n\n\t\tticker.kids.push(node);\n\t\tsignal.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\t// DROP REPEATS\n\n\tfunction dropRepeats(signal)\n\t{\n\t\tvar node = {\n\t\t\tid: Utils.guid(),\n\t\t\tname: 'dropRepeats',\n\t\t\tvalue: signal.value,\n\t\t\tparents: [signal],\n\t\t\tkids: []\n\t\t};\n\n\t\tnode.notify = function(timestamp, parentUpdate, parentID)\n\t\t{\n\t\t\tvar update = false;\n\t\t\tif (parentUpdate && !Utils.eq(node.value, signal.value))\n\t\t\t{\n\t\t\t\tnode.value = signal.value;\n\t\t\t\tupdate = true;\n\t\t\t}\n\t\t\tbroadcastToKids(node, timestamp, update);\n\t\t};\n\n\t\tsignal.kids.push(node);\n\n\t\treturn node;\n\t}\n\n\n\treturn localRuntime.Native.Signal.values = {\n\t\tinput: input,\n\t\tconstant: constant,\n\t\tmailbox: mailbox,\n\t\tsendMessage: sendMessage,\n\t\toutput: output,\n\t\tmap: F2(map),\n\t\tmap2: F3(map2),\n\t\tmap3: F4(map3),\n\t\tmap4: F5(map4),\n\t\tmap5: F6(map5),\n\t\tfoldp: F3(foldp),\n\t\tgenericMerge: F3(genericMerge),\n\t\tfilterMap: F3(filterMap),\n\t\tsampleOn: F2(sampleOn),\n\t\tdropRepeats: dropRepeats,\n\t\ttimestamp: timestamp,\n\t\tdelay: F2(delay)\n\t};\n};\n\nElm.Native.Task = {};\n\nElm.Native.Task.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Task = localRuntime.Native.Task || {};\n\tif (localRuntime.Native.Task.values)\n\t{\n\t\treturn localRuntime.Native.Task.values;\n\t}\n\n\tvar Result = Elm.Result.make(localRuntime);\n\tvar Signal;\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\n\t// CONSTRUCTORS\n\n\tfunction succeed(value)\n\t{\n\t\treturn {\n\t\t\ttag: 'Succeed',\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tfunction fail(error)\n\t{\n\t\treturn {\n\t\t\ttag: 'Fail',\n\t\t\tvalue: error\n\t\t};\n\t}\n\n\tfunction asyncFunction(func)\n\t{\n\t\treturn {\n\t\t\ttag: 'Async',\n\t\t\tasyncFunction: func\n\t\t};\n\t}\n\n\tfunction andThen(task, callback)\n\t{\n\t\treturn {\n\t\t\ttag: 'AndThen',\n\t\t\ttask: task,\n\t\t\tcallback: callback\n\t\t};\n\t}\n\n\tfunction catch_(task, callback)\n\t{\n\t\treturn {\n\t\t\ttag: 'Catch',\n\t\t\ttask: task,\n\t\t\tcallback: callback\n\t\t};\n\t}\n\n\n\t// RUNNER\n\n\tfunction perform(task) {\n\t\trunTask({ task: task }, function() {});\n\t}\n\n\tfunction performSignal(name, signal)\n\t{\n\t\tvar workQueue = [];\n\n\t\tfunction onComplete()\n\t\t{\n\t\t\tworkQueue.shift();\n\n\t\t\tif (workQueue.length > 0)\n\t\t\t{\n\t\t\t\tvar task = workQueue[0];\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\trunTask(task, onComplete);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\n\t\tfunction register(task)\n\t\t{\n\t\t\tvar root = { task: task };\n\t\t\tworkQueue.push(root);\n\t\t\tif (workQueue.length === 1)\n\t\t\t{\n\t\t\t\trunTask(root, onComplete);\n\t\t\t}\n\t\t}\n\n\t\tif (!Signal)\n\t\t{\n\t\t\tSignal = Elm.Native.Signal.make(localRuntime);\n\t\t}\n\t\tSignal.output('perform-tasks-' + name, register, signal);\n\n\t\tregister(signal.value);\n\n\t\treturn signal;\n\t}\n\n\tfunction mark(status, task)\n\t{\n\t\treturn { status: status, task: task };\n\t}\n\n\tfunction runTask(root, onComplete)\n\t{\n\t\tvar result = mark('runnable', root.task);\n\t\twhile (result.status === 'runnable')\n\t\t{\n\t\t\tresult = stepTask(onComplete, root, result.task);\n\t\t}\n\n\t\tif (result.status === 'done')\n\t\t{\n\t\t\troot.task = result.task;\n\t\t\tonComplete();\n\t\t}\n\n\t\tif (result.status === 'blocked')\n\t\t{\n\t\t\troot.task = result.task;\n\t\t}\n\t}\n\n\tfunction stepTask(onComplete, root, task)\n\t{\n\t\tvar tag = task.tag;\n\n\t\tif (tag === 'Succeed' || tag === 'Fail')\n\t\t{\n\t\t\treturn mark('done', task);\n\t\t}\n\n\t\tif (tag === 'Async')\n\t\t{\n\t\t\tvar placeHolder = {};\n\t\t\tvar couldBeSync = true;\n\t\t\tvar wasSync = false;\n\n\t\t\ttask.asyncFunction(function(result) {\n\t\t\t\tplaceHolder.tag = result.tag;\n\t\t\t\tplaceHolder.value = result.value;\n\t\t\t\tif (couldBeSync)\n\t\t\t\t{\n\t\t\t\t\twasSync = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trunTask(root, onComplete);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcouldBeSync = false;\n\t\t\treturn mark(wasSync ? 'done' : 'blocked', placeHolder);\n\t\t}\n\n\t\tif (tag === 'AndThen' || tag === 'Catch')\n\t\t{\n\t\t\tvar result = mark('runnable', task.task);\n\t\t\twhile (result.status === 'runnable')\n\t\t\t{\n\t\t\t\tresult = stepTask(onComplete, root, result.task);\n\t\t\t}\n\n\t\t\tif (result.status === 'done')\n\t\t\t{\n\t\t\t\tvar activeTask = result.task;\n\t\t\t\tvar activeTag = activeTask.tag;\n\n\t\t\t\tvar succeedChain = activeTag === 'Succeed' && tag === 'AndThen';\n\t\t\t\tvar failChain = activeTag === 'Fail' && tag === 'Catch';\n\n\t\t\t\treturn (succeedChain || failChain)\n\t\t\t\t\t? mark('runnable', task.callback(activeTask.value))\n\t\t\t\t\t: mark('runnable', activeTask);\n\t\t\t}\n\t\t\tif (result.status === 'blocked')\n\t\t\t{\n\t\t\t\treturn mark('blocked', {\n\t\t\t\t\ttag: tag,\n\t\t\t\t\ttask: result.task,\n\t\t\t\t\tcallback: task.callback\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// THREADS\n\n\tfunction sleep(time) {\n\t\treturn asyncFunction(function(callback) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tcallback(succeed(Utils.Tuple0));\n\t\t\t}, time);\n\t\t});\n\t}\n\n\tfunction spawn(task) {\n\t\treturn asyncFunction(function(callback) {\n\t\t\tvar id = setTimeout(function() {\n\t\t\t\tperform(task);\n\t\t\t}, 0);\n\t\t\tcallback(succeed(id));\n\t\t});\n\t}\n\n\n\treturn localRuntime.Native.Task.values = {\n\t\tsucceed: succeed,\n\t\tfail: fail,\n\t\tasyncFunction: asyncFunction,\n\t\tandThen: F2(andThen),\n\t\tcatch_: F2(catch_),\n\t\tperform: perform,\n\t\tperformSignal: performSignal,\n\t\tspawn: spawn,\n\t\tsleep: sleep\n\t};\n};\n\nElm.Task = Elm.Task || {};\nElm.Task.make = function (_elm) {\n   \"use strict\";\n   _elm.Task = _elm.Task || {};\n   if (_elm.Task.values) return _elm.Task.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Task = Elm.Native.Task.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var _op = {};\n   var sleep = $Native$Task.sleep;\n   var spawn = $Native$Task.spawn;\n   var ThreadID = function (a) {    return {ctor: \"ThreadID\",_0: a};};\n   var onError = $Native$Task.catch_;\n   var andThen = $Native$Task.andThen;\n   var fail = $Native$Task.fail;\n   var mapError = F2(function (f,task) {    return A2(onError,task,function (err) {    return fail(f(err));});});\n   var succeed = $Native$Task.succeed;\n   var map = F2(function (func,taskA) {    return A2(andThen,taskA,function (a) {    return succeed(func(a));});});\n   var map2 = F3(function (func,taskA,taskB) {\n      return A2(andThen,taskA,function (a) {    return A2(andThen,taskB,function (b) {    return succeed(A2(func,a,b));});});\n   });\n   var map3 = F4(function (func,taskA,taskB,taskC) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,taskB,function (b) {    return A2(andThen,taskC,function (c) {    return succeed(A3(func,a,b,c));});});\n      });\n   });\n   var map4 = F5(function (func,taskA,taskB,taskC,taskD) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return A2(andThen,taskC,function (c) {    return A2(andThen,taskD,function (d) {    return succeed(A4(func,a,b,c,d));});});\n         });\n      });\n   });\n   var map5 = F6(function (func,taskA,taskB,taskC,taskD,taskE) {\n      return A2(andThen,\n      taskA,\n      function (a) {\n         return A2(andThen,\n         taskB,\n         function (b) {\n            return A2(andThen,\n            taskC,\n            function (c) {\n               return A2(andThen,taskD,function (d) {    return A2(andThen,taskE,function (e) {    return succeed(A5(func,a,b,c,d,e));});});\n            });\n         });\n      });\n   });\n   var andMap = F2(function (taskFunc,taskValue) {\n      return A2(andThen,taskFunc,function (func) {    return A2(andThen,taskValue,function (value) {    return succeed(func(value));});});\n   });\n   var sequence = function (tasks) {\n      var _p0 = tasks;\n      if (_p0.ctor === \"[]\") {\n            return succeed(_U.list([]));\n         } else {\n            return A3(map2,F2(function (x,y) {    return A2($List._op[\"::\"],x,y);}),_p0._0,sequence(_p0._1));\n         }\n   };\n   var toMaybe = function (task) {    return A2(onError,A2(map,$Maybe.Just,task),function (_p1) {    return succeed($Maybe.Nothing);});};\n   var fromMaybe = F2(function ($default,maybe) {    var _p2 = maybe;if (_p2.ctor === \"Just\") {    return succeed(_p2._0);} else {    return fail($default);}});\n   var toResult = function (task) {    return A2(onError,A2(map,$Result.Ok,task),function (msg) {    return succeed($Result.Err(msg));});};\n   var fromResult = function (result) {    var _p3 = result;if (_p3.ctor === \"Ok\") {    return succeed(_p3._0);} else {    return fail(_p3._0);}};\n   var Task = {ctor: \"Task\"};\n   return _elm.Task.values = {_op: _op\n                             ,succeed: succeed\n                             ,fail: fail\n                             ,map: map\n                             ,map2: map2\n                             ,map3: map3\n                             ,map4: map4\n                             ,map5: map5\n                             ,andMap: andMap\n                             ,sequence: sequence\n                             ,andThen: andThen\n                             ,onError: onError\n                             ,mapError: mapError\n                             ,toMaybe: toMaybe\n                             ,fromMaybe: fromMaybe\n                             ,toResult: toResult\n                             ,fromResult: fromResult\n                             ,spawn: spawn\n                             ,sleep: sleep};\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values) return _elm.Signal.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm),\n   $Task = Elm.Task.make(_elm);\n   var _op = {};\n   var send = F2(function (_p0,value) {\n      var _p1 = _p0;\n      return A2($Task.onError,_p1._0(value),function (_p2) {    return $Task.succeed({ctor: \"_Tuple0\"});});\n   });\n   var Message = function (a) {    return {ctor: \"Message\",_0: a};};\n   var message = F2(function (_p3,value) {    var _p4 = _p3;return Message(_p4._0(value));});\n   var mailbox = $Native$Signal.mailbox;\n   var Address = function (a) {    return {ctor: \"Address\",_0: a};};\n   var forwardTo = F2(function (_p5,f) {    var _p6 = _p5;return Address(function (x) {    return _p6._0(f(x));});});\n   var Mailbox = F2(function (a,b) {    return {address: a,signal: b};});\n   var sampleOn = $Native$Signal.sampleOn;\n   var dropRepeats = $Native$Signal.dropRepeats;\n   var filterMap = $Native$Signal.filterMap;\n   var filter = F3(function (isOk,base,signal) {\n      return A3(filterMap,function (value) {    return isOk(value) ? $Maybe.Just(value) : $Maybe.Nothing;},base,signal);\n   });\n   var merge = F2(function (left,right) {    return A3($Native$Signal.genericMerge,$Basics.always,left,right);});\n   var mergeMany = function (signalList) {\n      var _p7 = $List.reverse(signalList);\n      if (_p7.ctor === \"[]\") {\n            return _U.crashCase(\"Signal\",{start: {line: 184,column: 3},end: {line: 189,column: 40}},_p7)(\"mergeMany was given an empty list!\");\n         } else {\n            return A3($List.foldl,merge,_p7._0,_p7._1);\n         }\n   };\n   var foldp = $Native$Signal.foldp;\n   var map5 = $Native$Signal.map5;\n   var map4 = $Native$Signal.map4;\n   var map3 = $Native$Signal.map3;\n   var map2 = $Native$Signal.map2;\n   var map = $Native$Signal.map;\n   var constant = $Native$Signal.constant;\n   var Signal = {ctor: \"Signal\"};\n   return _elm.Signal.values = {_op: _op\n                               ,merge: merge\n                               ,mergeMany: mergeMany\n                               ,map: map\n                               ,map2: map2\n                               ,map3: map3\n                               ,map4: map4\n                               ,map5: map5\n                               ,constant: constant\n                               ,dropRepeats: dropRepeats\n                               ,filter: filter\n                               ,filterMap: filterMap\n                               ,sampleOn: sampleOn\n                               ,foldp: foldp\n                               ,mailbox: mailbox\n                               ,send: send\n                               ,message: message\n                               ,forwardTo: forwardTo\n                               ,Mailbox: Mailbox};\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.Extra = Elm.Signal.Extra || {};\nElm.Signal.Extra.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   _elm.Signal.Extra = _elm.Signal.Extra || {};\n   if (_elm.Signal.Extra.values) return _elm.Signal.Extra.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var unsafeFromJust = function (maybe) {\n      var _p0 = maybe;\n      if (_p0.ctor === \"Just\") {\n            return _p0._0;\n         } else {\n            return _U.crashCase(\"Signal.Extra\",{start: {line: 510,column: 3},end: {line: 515,column: 59}},_p0)(\"This case should have been unreachable\");\n         }\n   };\n   var passiveMap2 = F2(function (func,a) {    return function (_p2) {    return A3($Signal.map2,func,a,A2($Signal.sampleOn,a,_p2));};});\n   var withPassive = passiveMap2(F2(function (x,y) {    return x(y);}));\n   var combine = A2($List.foldr,$Signal.map2(F2(function (x,y) {    return A2($List._op[\"::\"],x,y);})),$Signal.constant(_U.list([])));\n   var mergeMany = F2(function (original,others) {    return A3($List.foldl,$Signal.merge,original,others);});\n   var filter = function (initial) {    return A2($Signal.filterMap,$Basics.identity,initial);};\n   var keepIf = $Signal.filter;\n   var runBuffer$ = F3(function (l,n,input) {\n      var f = F2(function (inp,prev) {\n         var l = $List.length(prev);\n         return _U.cmp(l,n) < 0 ? A2($Basics._op[\"++\"],prev,_U.list([inp])) : A2($Basics._op[\"++\"],A2($List.drop,l - n + 1,prev),_U.list([inp]));\n      });\n      return A3($Signal.foldp,f,l,input);\n   });\n   var runBuffer = runBuffer$(_U.list([]));\n   var initSignal = function (s) {    return A2($Signal.sampleOn,$Signal.constant({ctor: \"_Tuple0\"}),s);};\n   var zip4 = $Signal.map4(F4(function (v0,v1,v2,v3) {    return {ctor: \"_Tuple4\",_0: v0,_1: v1,_2: v2,_3: v3};}));\n   var zip3 = $Signal.map3(F3(function (v0,v1,v2) {    return {ctor: \"_Tuple3\",_0: v0,_1: v1,_2: v2};}));\n   var zip = $Signal.map2(F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}));\n   var keepWhen = F3(function (boolSig,a,aSig) {\n      return A2($Signal.map,$Basics.snd,A3(keepIf,$Basics.fst,{ctor: \"_Tuple2\",_0: true,_1: a},A2($Signal.sampleOn,aSig,A2(zip,boolSig,aSig))));\n   });\n   var sampleWhen = F3(function (bs,def,sig) {\n      return A2($Signal.map,$Basics.snd,A3(keepIf,$Basics.fst,{ctor: \"_Tuple2\",_0: true,_1: def},A2(zip,bs,sig)));\n   });\n   var andMap = $Signal.map2(F2(function (x,y) {    return x(y);}));\n   _op[\"~\"] = andMap;\n   var applyMany = F2(function (fs,l) {    return A2(_op[\"~\"],fs,combine(l));});\n   _op[\"~>\"] = $Basics.flip($Signal.map);\n   var foldpWith = F4(function (unpack,step,init,input) {\n      var step$ = F2(function (a,_p3) {    var _p4 = _p3;return unpack(A2(step,a,_p4._1));});\n      return A2(_op[\"~>\"],A3($Signal.foldp,step$,init,input),$Basics.fst);\n   });\n   _op[\"<~\"] = $Signal.map;\n   var unzip = function (pairS) {    return {ctor: \"_Tuple2\",_0: A2(_op[\"<~\"],$Basics.fst,pairS),_1: A2(_op[\"<~\"],$Basics.snd,pairS)};};\n   var unzip3 = function (pairS) {\n      return {ctor: \"_Tuple3\"\n             ,_0: A2(_op[\"<~\"],function (_p5) {    var _p6 = _p5;return _p6._0;},pairS)\n             ,_1: A2(_op[\"<~\"],function (_p7) {    var _p8 = _p7;return _p8._1;},pairS)\n             ,_2: A2(_op[\"<~\"],function (_p9) {    var _p10 = _p9;return _p10._2;},pairS)};\n   };\n   var unzip4 = function (pairS) {\n      return {ctor: \"_Tuple4\"\n             ,_0: A2(_op[\"<~\"],function (_p11) {    var _p12 = _p11;return _p12._0;},pairS)\n             ,_1: A2(_op[\"<~\"],function (_p13) {    var _p14 = _p13;return _p14._1;},pairS)\n             ,_2: A2(_op[\"<~\"],function (_p15) {    var _p16 = _p15;return _p16._2;},pairS)\n             ,_3: A2(_op[\"<~\"],function (_p17) {    var _p18 = _p17;return _p18._3;},pairS)};\n   };\n   var foldp$ = F3(function (fun,initFun,input) {\n      var fun$ = F2(function (_p19,mb) {    var _p20 = _p19;return $Maybe.Just(A2(fun,_p20._0,A2($Maybe.withDefault,_p20._1,mb)));});\n      var initial = A2(_op[\"~>\"],initSignal(input),initFun);\n      var rest = A3($Signal.foldp,fun$,$Maybe.Nothing,A2(zip,input,initial));\n      return A2(_op[\"<~\"],unsafeFromJust,A2($Signal.merge,A2(_op[\"<~\"],$Maybe.Just,initial),rest));\n   });\n   var deltas = function (signal) {\n      var initial = function (value) {    return {ctor: \"_Tuple2\",_0: value,_1: value};};\n      var step = F2(function (value,delta) {    return {ctor: \"_Tuple2\",_0: $Basics.snd(delta),_1: value};});\n      return A3(foldp$,step,initial,signal);\n   };\n   var foldps = F3(function (f,bs,aS) {\n      return A2(_op[\"<~\"],$Basics.fst,A3($Signal.foldp,F2(function (a,_p21) {    var _p22 = _p21;return A2(f,a,_p22._1);}),bs,aS));\n   });\n   var delayRound = F2(function (b,bS) {\n      return A3(foldps,F2(function ($new,old) {    return {ctor: \"_Tuple2\",_0: old,_1: $new};}),{ctor: \"_Tuple2\",_0: b,_1: b},bS);\n   });\n   var filterFold = F2(function (f,initial) {\n      var f$ = F2(function (a,s) {    var res = A2(f,a,s);return {ctor: \"_Tuple2\",_0: res,_1: A2($Maybe.withDefault,s,res)};});\n      return function (_p23) {\n         return A2(filter,initial,A3(foldps,f$,{ctor: \"_Tuple2\",_0: $Maybe.Just(initial),_1: initial},_p23));\n      };\n   });\n   var foldps$ = F3(function (f,iF,aS) {\n      return A2(_op[\"<~\"],$Basics.fst,A3(foldp$,F2(function (a,_p24) {    var _p25 = _p24;return A2(f,a,_p25._1);}),iF,aS));\n   });\n   var switchHelper = F4(function (filter,b,l,r) {\n      var lAndR = A2($Signal.merge,\n      A3(filter,b,$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,l)),\n      A3(filter,A2(_op[\"<~\"],$Basics.not,b),$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,r)));\n      var base = A2(_op[\"~\"],\n      A2(_op[\"~\"],A2(_op[\"<~\"],F3(function (bi,li,ri) {    return $Maybe.Just(bi ? li : ri);}),initSignal(b)),initSignal(l)),\n      initSignal(r));\n      return A2(_op[\"<~\"],unsafeFromJust,A2($Signal.merge,base,lAndR));\n   });\n   var switchWhen = F3(function (b,l,r) {    return A4(switchHelper,keepWhen,b,l,r);});\n   var switchSample = F3(function (b,l,r) {    return A4(switchHelper,sampleWhen,b,l,r);});\n   var keepThen = F3(function (choice,base,signal) {    return A3(switchSample,choice,signal,$Signal.constant(base));});\n   var keepWhenI = F2(function (fs,s) {\n      return A2(_op[\"~>\"],A3(keepWhen,A2($Signal.merge,$Signal.constant(true),fs),$Maybe.Nothing,A2(_op[\"<~\"],$Maybe.Just,s)),unsafeFromJust);\n   });\n   var fairMerge = F3(function (resolve,left,right) {\n      var merged = A2($Signal.merge,left,right);\n      var boolRight = A2(_op[\"<~\"],$Basics.always(false),right);\n      var boolLeft = A2(_op[\"<~\"],$Basics.always(true),left);\n      var bothUpdated = A2(_op[\"~\"],\n      A2(_op[\"<~\"],F2(function (x,y) {    return !_U.eq(x,y);}),A2($Signal.merge,boolLeft,boolRight)),\n      A2($Signal.merge,boolRight,boolLeft));\n      var keep = keepWhenI(bothUpdated);\n      var resolved = A2(_op[\"~\"],A2(_op[\"<~\"],resolve,keep(left)),keep(right));\n      return A2($Signal.merge,resolved,merged);\n   });\n   var mapMany = F2(function (f,l) {    return A2(_op[\"<~\"],f,combine(l));});\n   return _elm.Signal.Extra.values = {_op: _op\n                                     ,andMap: andMap\n                                     ,zip: zip\n                                     ,zip3: zip3\n                                     ,zip4: zip4\n                                     ,unzip: unzip\n                                     ,unzip3: unzip3\n                                     ,unzip4: unzip4\n                                     ,foldp$: foldp$\n                                     ,foldps: foldps\n                                     ,foldps$: foldps$\n                                     ,runBuffer: runBuffer\n                                     ,runBuffer$: runBuffer$\n                                     ,deltas: deltas\n                                     ,delayRound: delayRound\n                                     ,keepIf: keepIf\n                                     ,keepWhen: keepWhen\n                                     ,sampleWhen: sampleWhen\n                                     ,switchWhen: switchWhen\n                                     ,keepWhenI: keepWhenI\n                                     ,switchSample: switchSample\n                                     ,keepThen: keepThen\n                                     ,filter: filter\n                                     ,filterFold: filterFold\n                                     ,fairMerge: fairMerge\n                                     ,mergeMany: mergeMany\n                                     ,combine: combine\n                                     ,mapMany: mapMany\n                                     ,applyMany: applyMany\n                                     ,passiveMap2: passiveMap2\n                                     ,withPassive: withPassive};\n};\nElm.Native.Time = {};\n\nElm.Native.Time.make = function(localRuntime)\n{\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Time = localRuntime.Native.Time || {};\n\tif (localRuntime.Native.Time.values)\n\t{\n\t\treturn localRuntime.Native.Time.values;\n\t}\n\n\tvar NS = Elm.Native.Signal.make(localRuntime);\n\tvar Maybe = Elm.Maybe.make(localRuntime);\n\n\n\t// FRAMES PER SECOND\n\n\tfunction fpsWhen(desiredFPS, isOn)\n\t{\n\t\tvar msPerFrame = 1000 / desiredFPS;\n\t\tvar ticker = NS.input('fps-' + desiredFPS, null);\n\n\t\tfunction notifyTicker()\n\t\t{\n\t\t\tlocalRuntime.notify(ticker.id, null);\n\t\t}\n\n\t\tfunction firstArg(x, y)\n\t\t{\n\t\t\treturn x;\n\t\t}\n\n\t\t// input fires either when isOn changes, or when ticker fires.\n\t\t// Its value is a tuple with the current timestamp, and the state of isOn\n\t\tvar input = NS.timestamp(A3(NS.map2, F2(firstArg), NS.dropRepeats(isOn), ticker));\n\n\t\tvar initialState = {\n\t\t\tisOn: false,\n\t\t\ttime: localRuntime.timer.programStart,\n\t\t\tdelta: 0\n\t\t};\n\n\t\tvar timeoutId;\n\n\t\tfunction update(input, state)\n\t\t{\n\t\t\tvar currentTime = input._0;\n\t\t\tvar isOn = input._1;\n\t\t\tvar wasOn = state.isOn;\n\t\t\tvar previousTime = state.time;\n\n\t\t\tif (isOn)\n\t\t\t{\n\t\t\t\ttimeoutId = localRuntime.setTimeout(notifyTicker, msPerFrame);\n\t\t\t}\n\t\t\telse if (wasOn)\n\t\t\t{\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisOn: isOn,\n\t\t\t\ttime: currentTime,\n\t\t\t\tdelta: (isOn && !wasOn) ? 0 : currentTime - previousTime\n\t\t\t};\n\t\t}\n\n\t\treturn A2(\n\t\t\tNS.map,\n\t\t\tfunction(state) { return state.delta; },\n\t\t\tA3(NS.foldp, F2(update), update(input.value, initialState), input)\n\t\t);\n\t}\n\n\n\t// EVERY\n\n\tfunction every(t)\n\t{\n\t\tvar ticker = NS.input('every-' + t, null);\n\t\tfunction tellTime()\n\t\t{\n\t\t\tlocalRuntime.notify(ticker.id, null);\n\t\t}\n\t\tvar clock = A2(NS.map, fst, NS.timestamp(ticker));\n\t\tsetInterval(tellTime, t);\n\t\treturn clock;\n\t}\n\n\n\tfunction fst(pair)\n\t{\n\t\treturn pair._0;\n\t}\n\n\n\tfunction read(s)\n\t{\n\t\tvar t = Date.parse(s);\n\t\treturn isNaN(t) ? Maybe.Nothing : Maybe.Just(t);\n\t}\n\n\treturn localRuntime.Native.Time.values = {\n\t\tfpsWhen: F2(fpsWhen),\n\t\tevery: every,\n\t\ttoDate: function(t) { return new Date(t); },\n\t\tread: read\n\t};\n};\n\nElm.Time = Elm.Time || {};\nElm.Time.make = function (_elm) {\n   \"use strict\";\n   _elm.Time = _elm.Time || {};\n   if (_elm.Time.values) return _elm.Time.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm),\n   $Native$Time = Elm.Native.Time.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var delay = $Native$Signal.delay;\n   var since = F2(function (time,signal) {\n      var stop = A2($Signal.map,$Basics.always(-1),A2(delay,time,signal));\n      var start = A2($Signal.map,$Basics.always(1),signal);\n      var delaydiff = A3($Signal.foldp,F2(function (x,y) {    return x + y;}),0,A2($Signal.merge,start,stop));\n      return A2($Signal.map,F2(function (x,y) {    return !_U.eq(x,y);})(0),delaydiff);\n   });\n   var timestamp = $Native$Signal.timestamp;\n   var every = $Native$Time.every;\n   var fpsWhen = $Native$Time.fpsWhen;\n   var fps = function (targetFrames) {    return A2(fpsWhen,targetFrames,$Signal.constant(true));};\n   var inMilliseconds = function (t) {    return t;};\n   var millisecond = 1;\n   var second = 1000 * millisecond;\n   var minute = 60 * second;\n   var hour = 60 * minute;\n   var inHours = function (t) {    return t / hour;};\n   var inMinutes = function (t) {    return t / minute;};\n   var inSeconds = function (t) {    return t / second;};\n   return _elm.Time.values = {_op: _op\n                             ,millisecond: millisecond\n                             ,second: second\n                             ,minute: minute\n                             ,hour: hour\n                             ,inMilliseconds: inMilliseconds\n                             ,inSeconds: inSeconds\n                             ,inMinutes: inMinutes\n                             ,inHours: inHours\n                             ,fps: fps\n                             ,fpsWhen: fpsWhen\n                             ,every: every\n                             ,timestamp: timestamp\n                             ,delay: delay\n                             ,since: since};\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(localRuntime) {\n\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Array = localRuntime.Native.Array || {};\n\tif (localRuntime.Native.Array.values)\n\t{\n\t\treturn localRuntime.Native.Array.values;\n\t}\n\tif ('values' in Elm.Native.Array)\n\t{\n\t\treturn localRuntime.Native.Array.values = Elm.Native.Array.values;\n\t}\n\n\tvar List = Elm.Native.List.make(localRuntime);\n\n\t// A RRB-Tree has two distinct data types.\n\t// Leaf -> \"height\"  is always 0\n\t//         \"table\"   is an array of elements\n\t// Node -> \"height\"  is always greater than 0\n\t//         \"table\"   is an array of child nodes\n\t//         \"lengths\" is an array of accumulated lengths of the child nodes\n\n\t// M is the maximal table size. 32 seems fast. E is the allowed increase\n\t// of search steps when concatting to find an index. Lower values will\n\t// decrease balancing, but will increase search steps.\n\tvar M = 32;\n\tvar E = 2;\n\n\t// An empty array.\n\tvar empty = {\n\t\tctor: '_Array',\n\t\theight: 0,\n\t\ttable: []\n\t};\n\n\n\tfunction get(i, array)\n\t{\n\t\tif (i < 0 || i >= length(array))\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\n\t\t\t\t'your array first or use getMaybe or getWithDefault.');\n\t\t}\n\t\treturn unsafeGet(i, array);\n\t}\n\n\n\tfunction unsafeGet(i, array)\n\t{\n\t\tfor (var x = array.height; x > 0; x--)\n\t\t{\n\t\t\tvar slot = i >> (x * 5);\n\t\t\twhile (array.lengths[slot] <= i)\n\t\t\t{\n\t\t\t\tslot++;\n\t\t\t}\n\t\t\tif (slot > 0)\n\t\t\t{\n\t\t\t\ti -= array.lengths[slot - 1];\n\t\t\t}\n\t\t\tarray = array.table[slot];\n\t\t}\n\t\treturn array.table[i];\n\t}\n\n\n\t// Sets the value at the index i. Only the nodes leading to i will get\n\t// copied and updated.\n\tfunction set(i, item, array)\n\t{\n\t\tif (i < 0 || length(array) <= i)\n\t\t{\n\t\t\treturn array;\n\t\t}\n\t\treturn unsafeSet(i, item, array);\n\t}\n\n\n\tfunction unsafeSet(i, item, array)\n\t{\n\t\tarray = nodeCopy(array);\n\n\t\tif (array.height === 0)\n\t\t{\n\t\t\tarray.table[i] = item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar slot = getSlot(i, array);\n\t\t\tif (slot > 0)\n\t\t\t{\n\t\t\t\ti -= array.lengths[slot - 1];\n\t\t\t}\n\t\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tfunction initialize(len, f)\n\t{\n\t\tif (len <= 0)\n\t\t{\n\t\t\treturn empty;\n\t\t}\n\t\tvar h = Math.floor( Math.log(len) / Math.log(M) );\n\t\treturn initialize_(f, h, 0, len);\n\t}\n\n\tfunction initialize_(f, h, from, to)\n\t{\n\t\tif (h === 0)\n\t\t{\n\t\t\tvar table = new Array((to - from) % (M + 1));\n\t\t\tfor (var i = 0; i < table.length; i++)\n\t\t\t{\n\t\t\t  table[i] = f(from + i);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: table\n\t\t\t};\n\t\t}\n\n\t\tvar step = Math.pow(M, h);\n\t\tvar table = new Array(Math.ceil((to - from) / step));\n\t\tvar lengths = new Array(table.length);\n\t\tfor (var i = 0; i < table.length; i++)\n\t\t{\n\t\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n\t\t}\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: h,\n\t\t\ttable: table,\n\t\t\tlengths: lengths\n\t\t};\n\t}\n\n\tfunction fromList(list)\n\t{\n\t\tif (list === List.Nil)\n\t\t{\n\t\t\treturn empty;\n\t\t}\n\n\t\t// Allocate M sized blocks (table) and write list elements to it.\n\t\tvar table = new Array(M);\n\t\tvar nodes = [];\n\t\tvar i = 0;\n\n\t\twhile (list.ctor !== '[]')\n\t\t{\n\t\t\ttable[i] = list._0;\n\t\t\tlist = list._1;\n\t\t\ti++;\n\n\t\t\t// table is full, so we can push a leaf containing it into the\n\t\t\t// next node.\n\t\t\tif (i === M)\n\t\t\t{\n\t\t\t\tvar leaf = {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: table\n\t\t\t\t};\n\t\t\t\tfromListPush(leaf, nodes);\n\t\t\t\ttable = new Array(M);\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Maybe there is something left on the table.\n\t\tif (i > 0)\n\t\t{\n\t\t\tvar leaf = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: table.splice(0, i)\n\t\t\t};\n\t\t\tfromListPush(leaf, nodes);\n\t\t}\n\n\t\t// Go through all of the nodes and eventually push them into higher nodes.\n\t\tfor (var h = 0; h < nodes.length - 1; h++)\n\t\t{\n\t\t\tif (nodes[h].table.length > 0)\n\t\t\t{\n\t\t\t\tfromListPush(nodes[h], nodes);\n\t\t\t}\n\t\t}\n\n\t\tvar head = nodes[nodes.length - 1];\n\t\tif (head.height > 0 && head.table.length === 1)\n\t\t{\n\t\t\treturn head.table[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn head;\n\t\t}\n\t}\n\n\t// Push a node into a higher node as a child.\n\tfunction fromListPush(toPush, nodes)\n\t{\n\t\tvar h = toPush.height;\n\n\t\t// Maybe the node on this height does not exist.\n\t\tif (nodes.length === h)\n\t\t{\n\t\t\tvar node = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h + 1,\n\t\t\t\ttable: [],\n\t\t\t\tlengths: []\n\t\t\t};\n\t\t\tnodes.push(node);\n\t\t}\n\n\t\tnodes[h].table.push(toPush);\n\t\tvar len = length(toPush);\n\t\tif (nodes[h].lengths.length > 0)\n\t\t{\n\t\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\n\t\t}\n\t\tnodes[h].lengths.push(len);\n\n\t\tif (nodes[h].table.length === M)\n\t\t{\n\t\t\tfromListPush(nodes[h], nodes);\n\t\t\tnodes[h] = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: h + 1,\n\t\t\t\ttable: [],\n\t\t\t\tlengths: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// Pushes an item via push_ to the bottom right of a tree.\n\tfunction push(item, a)\n\t{\n\t\tvar pushed = push_(item, a);\n\t\tif (pushed !== null)\n\t\t{\n\t\t\treturn pushed;\n\t\t}\n\n\t\tvar newTree = create(item, a.height);\n\t\treturn siblise(a, newTree);\n\t}\n\n\t// Recursively tries to push an item to the bottom-right most\n\t// tree possible. If there is no space left for the item,\n\t// null will be returned.\n\tfunction push_(item, a)\n\t{\n\t\t// Handle resursion stop at leaf level.\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tif (a.table.length < M)\n\t\t\t{\n\t\t\t\tvar newA = {\n\t\t\t\t\tctor: '_Array',\n\t\t\t\t\theight: 0,\n\t\t\t\t\ttable: a.table.slice()\n\t\t\t\t};\n\t\t\t\tnewA.table.push(item);\n\t\t\t\treturn newA;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  return null;\n\t\t\t}\n\t\t}\n\n\t\t// Recursively push\n\t\tvar pushed = push_(item, botRight(a));\n\n\t\t// There was space in the bottom right tree, so the slot will\n\t\t// be updated.\n\t\tif (pushed !== null)\n\t\t{\n\t\t\tvar newA = nodeCopy(a);\n\t\t\tnewA.table[newA.table.length - 1] = pushed;\n\t\t\tnewA.lengths[newA.lengths.length - 1]++;\n\t\t\treturn newA;\n\t\t}\n\n\t\t// When there was no space left, check if there is space left\n\t\t// for a new slot with a tree which contains only the item\n\t\t// at the bottom.\n\t\tif (a.table.length < M)\n\t\t{\n\t\t\tvar newSlot = create(item, a.height - 1);\n\t\t\tvar newA = nodeCopy(a);\n\t\t\tnewA.table.push(newSlot);\n\t\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n\t\t\treturn newA;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Converts an array into a list of elements.\n\tfunction toList(a)\n\t{\n\t\treturn toList_(List.Nil, a);\n\t}\n\n\tfunction toList_(list, a)\n\t{\n\t\tfor (var i = a.table.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tlist =\n\t\t\t\ta.height === 0\n\t\t\t\t\t? List.Cons(a.table[i], list)\n\t\t\t\t\t: toList_(list, a.table[i]);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// Maps a function over the elements of an array.\n\tfunction map(f, a)\n\t{\n\t\tvar newA = {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height,\n\t\t\ttable: new Array(a.table.length)\n\t\t};\n\t\tif (a.height > 0)\n\t\t{\n\t\t\tnewA.lengths = a.lengths;\n\t\t}\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tnewA.table[i] =\n\t\t\t\ta.height === 0\n\t\t\t\t\t? f(a.table[i])\n\t\t\t\t\t: map(f, a.table[i]);\n\t\t}\n\t\treturn newA;\n\t}\n\n\t// Maps a function over the elements with their index as first argument.\n\tfunction indexedMap(f, a)\n\t{\n\t\treturn indexedMap_(f, a, 0);\n\t}\n\n\tfunction indexedMap_(f, a, from)\n\t{\n\t\tvar newA = {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height,\n\t\t\ttable: new Array(a.table.length)\n\t\t};\n\t\tif (a.height > 0)\n\t\t{\n\t\t\tnewA.lengths = a.lengths;\n\t\t}\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tnewA.table[i] =\n\t\t\t\ta.height === 0\n\t\t\t\t\t? A2(f, from + i, a.table[i])\n\t\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\n\t\t}\n\t\treturn newA;\n\t}\n\n\tfunction foldl(f, b, a)\n\t{\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t{\n\t\t\t\tb = A2(f, a.table[i], b);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t\t{\n\t\t\t\tb = foldl(f, b, a.table[i]);\n\t\t\t}\n\t\t}\n\t\treturn b;\n\t}\n\n\tfunction foldr(f, b, a)\n\t{\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tfor (var i = a.table.length; i--; )\n\t\t\t{\n\t\t\t\tb = A2(f, a.table[i], b);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = a.table.length; i--; )\n\t\t\t{\n\t\t\t\tb = foldr(f, b, a.table[i]);\n\t\t\t}\n\t\t}\n\t\treturn b;\n\t}\n\n\t// TODO: currently, it slices the right, then the left. This can be\n\t// optimized.\n\tfunction slice(from, to, a)\n\t{\n\t\tif (from < 0)\n\t\t{\n\t\t\tfrom += length(a);\n\t\t}\n\t\tif (to < 0)\n\t\t{\n\t\t\tto += length(a);\n\t\t}\n\t\treturn sliceLeft(from, sliceRight(to, a));\n\t}\n\n\tfunction sliceRight(to, a)\n\t{\n\t\tif (to === length(a))\n\t\t{\n\t\t\treturn a;\n\t\t}\n\n\t\t// Handle leaf level.\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tvar newA = { ctor:'_Array', height:0 };\n\t\t\tnewA.table = a.table.slice(0, to);\n\t\t\treturn newA;\n\t\t}\n\n\t\t// Slice the right recursively.\n\t\tvar right = getSlot(to, a);\n\t\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n\t\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\t\tif (right === 0)\n\t\t{\n\t\t\treturn sliced;\n\t\t}\n\n\t\t// Create new node.\n\t\tvar newA = {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height,\n\t\t\ttable: a.table.slice(0, right),\n\t\t\tlengths: a.lengths.slice(0, right)\n\t\t};\n\t\tif (sliced.table.length > 0)\n\t\t{\n\t\t\tnewA.table[right] = sliced;\n\t\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n\t\t}\n\t\treturn newA;\n\t}\n\n\tfunction sliceLeft(from, a)\n\t{\n\t\tif (from === 0)\n\t\t{\n\t\t\treturn a;\n\t\t}\n\n\t\t// Handle leaf level.\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tvar newA = { ctor:'_Array', height:0 };\n\t\t\tnewA.table = a.table.slice(from, a.table.length + 1);\n\t\t\treturn newA;\n\t\t}\n\n\t\t// Slice the left recursively.\n\t\tvar left = getSlot(from, a);\n\t\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n\t\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\t\tif (left === a.table.length - 1)\n\t\t{\n\t\t\treturn sliced;\n\t\t}\n\n\t\t// Create new node.\n\t\tvar newA = {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height,\n\t\t\ttable: a.table.slice(left, a.table.length + 1),\n\t\t\tlengths: new Array(a.table.length - left)\n\t\t};\n\t\tnewA.table[0] = sliced;\n\t\tvar len = 0;\n\t\tfor (var i = 0; i < newA.table.length; i++)\n\t\t{\n\t\t\tlen += length(newA.table[i]);\n\t\t\tnewA.lengths[i] = len;\n\t\t}\n\n\t\treturn newA;\n\t}\n\n\t// Appends two trees.\n\tfunction append(a,b)\n\t{\n\t\tif (a.table.length === 0)\n\t\t{\n\t\t\treturn b;\n\t\t}\n\t\tif (b.table.length === 0)\n\t\t{\n\t\t\treturn a;\n\t\t}\n\n\t\tvar c = append_(a, b);\n\n\t\t// Check if both nodes can be crunshed together.\n\t\tif (c[0].table.length + c[1].table.length <= M)\n\t\t{\n\t\t\tif (c[0].table.length === 0)\n\t\t\t{\n\t\t\t\treturn c[1];\n\t\t\t}\n\t\t\tif (c[1].table.length === 0)\n\t\t\t{\n\t\t\t\treturn c[0];\n\t\t\t}\n\n\t\t\t// Adjust .table and .lengths\n\t\t\tc[0].table = c[0].table.concat(c[1].table);\n\t\t\tif (c[0].height > 0)\n\t\t\t{\n\t\t\t\tvar len = length(c[0]);\n\t\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\n\t\t\t\t{\n\t\t\t\t\tc[1].lengths[i] += len;\n\t\t\t\t}\n\t\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\n\t\t\t}\n\n\t\t\treturn c[0];\n\t\t}\n\n\t\tif (c[0].height > 0)\n\t\t{\n\t\t\tvar toRemove = calcToRemove(a, b);\n\t\t\tif (toRemove > E)\n\t\t\t{\n\t\t\t\tc = shuffle(c[0], c[1], toRemove);\n\t\t\t}\n\t\t}\n\n\t\treturn siblise(c[0], c[1]);\n\t}\n\n\t// Returns an array of two nodes; right and left. One node _may_ be empty.\n\tfunction append_(a, b)\n\t{\n\t\tif (a.height === 0 && b.height === 0)\n\t\t{\n\t\t\treturn [a, b];\n\t\t}\n\n\t\tif (a.height !== 1 || b.height !== 1)\n\t\t{\n\t\t\tif (a.height === b.height)\n\t\t\t{\n\t\t\t\ta = nodeCopy(a);\n\t\t\t\tb = nodeCopy(b);\n\t\t\t\tvar appended = append_(botRight(a), botLeft(b));\n\n\t\t\t\tinsertRight(a, appended[1]);\n\t\t\t\tinsertLeft(b, appended[0]);\n\t\t\t}\n\t\t\telse if (a.height > b.height)\n\t\t\t{\n\t\t\t\ta = nodeCopy(a);\n\t\t\t\tvar appended = append_(botRight(a), b);\n\n\t\t\t\tinsertRight(a, appended[0]);\n\t\t\t\tb = parentise(appended[1], appended[1].height + 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb = nodeCopy(b);\n\t\t\t\tvar appended = append_(a, botLeft(b));\n\n\t\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\n\t\t\t\tvar right = left === 0 ? 1 : 0;\n\t\t\t\tinsertLeft(b, appended[left]);\n\t\t\t\ta = parentise(appended[right], appended[right].height + 1);\n\t\t\t}\n\t\t}\n\n\t\t// Check if balancing is needed and return based on that.\n\t\tif (a.table.length === 0 || b.table.length === 0)\n\t\t{\n\t\t\treturn [a, b];\n\t\t}\n\n\t\tvar toRemove = calcToRemove(a, b);\n\t\tif (toRemove <= E)\n\t\t{\n\t\t\treturn [a, b];\n\t\t}\n\t\treturn shuffle(a, b, toRemove);\n\t}\n\n\t// Helperfunctions for append_. Replaces a child node at the side of the parent.\n\tfunction insertRight(parent, node)\n\t{\n\t\tvar index = parent.table.length - 1;\n\t\tparent.table[index] = node;\n\t\tparent.lengths[index] = length(node);\n\t\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n\t}\n\n\tfunction insertLeft(parent, node)\n\t{\n\t\tif (node.table.length > 0)\n\t\t{\n\t\t\tparent.table[0] = node;\n\t\t\tparent.lengths[0] = length(node);\n\n\t\t\tvar len = length(parent.table[0]);\n\t\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t\t{\n\t\t\t\tlen += length(parent.table[i]);\n\t\t\t\tparent.lengths[i] = len;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparent.table.shift();\n\t\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t\t{\n\t\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n\t\t\t}\n\t\t\tparent.lengths.shift();\n\t\t}\n\t}\n\n\t// Returns the extra search steps for E. Refer to the paper.\n\tfunction calcToRemove(a, b)\n\t{\n\t\tvar subLengths = 0;\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tsubLengths += a.table[i].table.length;\n\t\t}\n\t\tfor (var i = 0; i < b.table.length; i++)\n\t\t{\n\t\t\tsubLengths += b.table[i].table.length;\n\t\t}\n\n\t\tvar toRemove = a.table.length + b.table.length;\n\t\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\n\t}\n\n\t// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n\tfunction get2(a, b, index)\n\t{\n\t\treturn index < a.length\n\t\t\t? a[index]\n\t\t\t: b[index - a.length];\n\t}\n\n\tfunction set2(a, b, index, value)\n\t{\n\t\tif (index < a.length)\n\t\t{\n\t\t\ta[index] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[index - a.length] = value;\n\t\t}\n\t}\n\n\tfunction saveSlot(a, b, index, slot)\n\t{\n\t\tset2(a.table, b.table, index, slot);\n\n\t\tvar l = (index === 0 || index === a.lengths.length)\n\t\t\t? 0\n\t\t\t: get2(a.lengths, a.lengths, index - 1);\n\n\t\tset2(a.lengths, b.lengths, index, l + length(slot));\n\t}\n\n\t// Creates a node or leaf with a given length at their arrays for perfomance.\n\t// Is only used by shuffle.\n\tfunction createNode(h, length)\n\t{\n\t\tif (length < 0)\n\t\t{\n\t\t\tlength = 0;\n\t\t}\n\t\tvar a = {\n\t\t\tctor: '_Array',\n\t\t\theight: h,\n\t\t\ttable: new Array(length)\n\t\t};\n\t\tif (h > 0)\n\t\t{\n\t\t\ta.lengths = new Array(length);\n\t\t}\n\t\treturn a;\n\t}\n\n\t// Returns an array of two balanced nodes.\n\tfunction shuffle(a, b, toRemove)\n\t{\n\t\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n\t\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n\t\t// Skip the slots with size M. More precise: copy the slot references\n\t\t// to the new node\n\t\tvar read = 0;\n\t\twhile (get2(a.table, b.table, read).table.length % M === 0)\n\t\t{\n\t\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\n\t\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n\t\t\tread++;\n\t\t}\n\n\t\t// Pulling items from left to right, caching in a slot before writing\n\t\t// it into the new nodes.\n\t\tvar write = read;\n\t\tvar slot = new createNode(a.height - 1, 0);\n\t\tvar from = 0;\n\n\t\t// If the current slot is still containing data, then there will be at\n\t\t// least one more write, so we do not break this loop yet.\n\t\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\n\t\t{\n\t\t\t// Find out the max possible items for copying.\n\t\t\tvar source = get2(a.table, b.table, read);\n\t\t\tvar to = Math.min(M - slot.table.length, source.table.length);\n\n\t\t\t// Copy and adjust size table.\n\t\t\tslot.table = slot.table.concat(source.table.slice(from, to));\n\t\t\tif (slot.height > 0)\n\t\t\t{\n\t\t\t\tvar len = slot.lengths.length;\n\t\t\t\tfor (var i = len; i < len + to - from; i++)\n\t\t\t\t{\n\t\t\t\t\tslot.lengths[i] = length(slot.table[i]);\n\t\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfrom += to;\n\n\t\t\t// Only proceed to next slots[i] if the current one was\n\t\t\t// fully copied.\n\t\t\tif (source.table.length <= to)\n\t\t\t{\n\t\t\t\tread++; from = 0;\n\t\t\t}\n\n\t\t\t// Only create a new slot if the current one is filled up.\n\t\t\tif (slot.table.length === M)\n\t\t\t{\n\t\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\t\tslot = createNode(a.height - 1, 0);\n\t\t\t\twrite++;\n\t\t\t}\n\t\t}\n\n\t\t// Cleanup after the loop. Copy the last slot into the new nodes.\n\t\tif (slot.table.length > 0)\n\t\t{\n\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\twrite++;\n\t\t}\n\n\t\t// Shift the untouched slots to the left\n\t\twhile (read < a.table.length + b.table.length )\n\t\t{\n\t\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\n\t\t\tread++;\n\t\t\twrite++;\n\t\t}\n\n\t\treturn [newA, newB];\n\t}\n\n\t// Navigation functions\n\tfunction botRight(a)\n\t{\n\t\treturn a.table[a.table.length - 1];\n\t}\n\tfunction botLeft(a)\n\t{\n\t\treturn a.table[0];\n\t}\n\n\t// Copies a node for updating. Note that you should not use this if\n\t// only updating only one of \"table\" or \"lengths\" for performance reasons.\n\tfunction nodeCopy(a)\n\t{\n\t\tvar newA = {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height,\n\t\t\ttable: a.table.slice()\n\t\t};\n\t\tif (a.height > 0)\n\t\t{\n\t\t\tnewA.lengths = a.lengths.slice();\n\t\t}\n\t\treturn newA;\n\t}\n\n\t// Returns how many items are in the tree.\n\tfunction length(array)\n\t{\n\t\tif (array.height === 0)\n\t\t{\n\t\t\treturn array.table.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn array.lengths[array.lengths.length - 1];\n\t\t}\n\t}\n\n\t// Calculates in which slot of \"table\" the item probably is, then\n\t// find the exact slot via forward searching in  \"lengths\". Returns the index.\n\tfunction getSlot(i, a)\n\t{\n\t\tvar slot = i >> (5 * a.height);\n\t\twhile (a.lengths[slot] <= i)\n\t\t{\n\t\t\tslot++;\n\t\t}\n\t\treturn slot;\n\t}\n\n\t// Recursively creates a tree with a given height containing\n\t// only the given item.\n\tfunction create(item, h)\n\t{\n\t\tif (h === 0)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: [item]\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: h,\n\t\t\ttable: [create(item, h - 1)],\n\t\t\tlengths: [1]\n\t\t};\n\t}\n\n\t// Recursively creates a tree that contains the given tree.\n\tfunction parentise(tree, h)\n\t{\n\t\tif (h === tree.height)\n\t\t{\n\t\t\treturn tree;\n\t\t}\n\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: h,\n\t\t\ttable: [parentise(tree, h - 1)],\n\t\t\tlengths: [length(tree)]\n\t\t};\n\t}\n\n\t// Emphasizes blood brotherhood beneath two trees.\n\tfunction siblise(a, b)\n\t{\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: a.height + 1,\n\t\t\ttable: [a, b],\n\t\t\tlengths: [length(a), length(a) + length(b)]\n\t\t};\n\t}\n\n\tfunction toJSArray(a)\n\t{\n\t\tvar jsArray = new Array(length(a));\n\t\ttoJSArray_(jsArray, 0, a);\n\t\treturn jsArray;\n\t}\n\n\tfunction toJSArray_(jsArray, i, a)\n\t{\n\t\tfor (var t = 0; t < a.table.length; t++)\n\t\t{\n\t\t\tif (a.height === 0)\n\t\t\t{\n\t\t\t\tjsArray[i + t] = a.table[t];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\n\t\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction fromJSArray(jsArray)\n\t{\n\t\tif (jsArray.length === 0)\n\t\t{\n\t\t\treturn empty;\n\t\t}\n\t\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n\t\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\n\t}\n\n\tfunction fromJSArray_(jsArray, h, from, to)\n\t{\n\t\tif (h === 0)\n\t\t{\n\t\t\treturn {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: jsArray.slice(from, to)\n\t\t\t};\n\t\t}\n\n\t\tvar step = Math.pow(M, h);\n\t\tvar table = new Array(Math.ceil((to - from) / step));\n\t\tvar lengths = new Array(table.length);\n\t\tfor (var i = 0; i < table.length; i++)\n\t\t{\n\t\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\n\t\t}\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: h,\n\t\t\ttable: table,\n\t\t\tlengths: lengths\n\t\t};\n\t}\n\n\tElm.Native.Array.values = {\n\t\tempty: empty,\n\t\tfromList: fromList,\n\t\ttoList: toList,\n\t\tinitialize: F2(initialize),\n\t\tappend: F2(append),\n\t\tpush: F2(push),\n\t\tslice: F3(slice),\n\t\tget: F2(get),\n\t\tset: F3(set),\n\t\tmap: F2(map),\n\t\tindexedMap: F2(indexedMap),\n\t\tfoldl: F3(foldl),\n\t\tfoldr: F3(foldr),\n\t\tlength: length,\n\n\t\ttoJSArray: toJSArray,\n\t\tfromJSArray: fromJSArray\n\t};\n\n\treturn localRuntime.Native.Array.values = Elm.Native.Array.values;\n};\n\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   \"use strict\";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values) return _elm.Array.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var _op = {};\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var isEmpty = function (array) {    return _U.eq(length(array),0);};\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,array) {\n      return _U.cmp(0,i) < 1 && _U.cmp(i,$Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,i,array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,arr) {\n      var update = F2(function (x,xs) {    return isOkay(x) ? A2($Native$Array.push,x,xs) : xs;});\n      return A3($Native$Array.foldl,update,$Native$Array.empty,arr);\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}),\n      _U.range(0,$Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {    return A2(initialize,n,$Basics.always(e));});\n   var Array = {ctor: \"Array\"};\n   return _elm.Array.values = {_op: _op\n                              ,empty: empty\n                              ,repeat: repeat\n                              ,initialize: initialize\n                              ,fromList: fromList\n                              ,isEmpty: isEmpty\n                              ,length: length\n                              ,push: push\n                              ,append: append\n                              ,get: get\n                              ,set: set\n                              ,slice: slice\n                              ,toList: toList\n                              ,toIndexedList: toIndexedList\n                              ,map: map\n                              ,indexedMap: indexedMap\n                              ,filter: filter\n                              ,foldl: foldl\n                              ,foldr: foldr};\n};\nElm.Native.Char = {};\nElm.Native.Char.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Char = localRuntime.Native.Char || {};\n\tif (localRuntime.Native.Char.values)\n\t{\n\t\treturn localRuntime.Native.Char.values;\n\t}\n\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\treturn localRuntime.Native.Char.values = {\n\t\tfromCode: function(c) { return Utils.chr(String.fromCharCode(c)); },\n\t\ttoCode: function(c) { return c.charCodeAt(0); },\n\t\ttoUpper: function(c) { return Utils.chr(c.toUpperCase()); },\n\t\ttoLower: function(c) { return Utils.chr(c.toLowerCase()); },\n\t\ttoLocaleUpper: function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n\t\ttoLocaleLower: function(c) { return Utils.chr(c.toLocaleLowerCase()); }\n\t};\n};\n\nElm.Char = Elm.Char || {};\nElm.Char.make = function (_elm) {\n   \"use strict\";\n   _elm.Char = _elm.Char || {};\n   if (_elm.Char.values) return _elm.Char.values;\n   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Native$Char = Elm.Native.Char.make(_elm);\n   var _op = {};\n   var fromCode = $Native$Char.fromCode;\n   var toCode = $Native$Char.toCode;\n   var toLocaleLower = $Native$Char.toLocaleLower;\n   var toLocaleUpper = $Native$Char.toLocaleUpper;\n   var toLower = $Native$Char.toLower;\n   var toUpper = $Native$Char.toUpper;\n   var isBetween = F3(function (low,high,$char) {    var code = toCode($char);return _U.cmp(code,toCode(low)) > -1 && _U.cmp(code,toCode(high)) < 1;});\n   var isUpper = A2(isBetween,_U.chr(\"A\"),_U.chr(\"Z\"));\n   var isLower = A2(isBetween,_U.chr(\"a\"),_U.chr(\"z\"));\n   var isDigit = A2(isBetween,_U.chr(\"0\"),_U.chr(\"9\"));\n   var isOctDigit = A2(isBetween,_U.chr(\"0\"),_U.chr(\"7\"));\n   var isHexDigit = function ($char) {\n      return isDigit($char) || (A3(isBetween,_U.chr(\"a\"),_U.chr(\"f\"),$char) || A3(isBetween,_U.chr(\"A\"),_U.chr(\"F\"),$char));\n   };\n   return _elm.Char.values = {_op: _op\n                             ,isUpper: isUpper\n                             ,isLower: isLower\n                             ,isDigit: isDigit\n                             ,isOctDigit: isOctDigit\n                             ,isHexDigit: isHexDigit\n                             ,toUpper: toUpper\n                             ,toLower: toLower\n                             ,toLocaleUpper: toLocaleUpper\n                             ,toLocaleLower: toLocaleLower\n                             ,toCode: toCode\n                             ,fromCode: fromCode};\n};\nElm.Native.String = {};\n\nElm.Native.String.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.String = localRuntime.Native.String || {};\n\tif (localRuntime.Native.String.values)\n\t{\n\t\treturn localRuntime.Native.String.values;\n\t}\n\tif ('values' in Elm.Native.String)\n\t{\n\t\treturn localRuntime.Native.String.values = Elm.Native.String.values;\n\t}\n\n\n\tvar Char = Elm.Char.make(localRuntime);\n\tvar List = Elm.Native.List.make(localRuntime);\n\tvar Maybe = Elm.Maybe.make(localRuntime);\n\tvar Result = Elm.Result.make(localRuntime);\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\tfunction isEmpty(str)\n\t{\n\t\treturn str.length === 0;\n\t}\n\tfunction cons(chr, str)\n\t{\n\t\treturn chr + str;\n\t}\n\tfunction uncons(str)\n\t{\n\t\tvar hd = str[0];\n\t\tif (hd)\n\t\t{\n\t\t\treturn Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)));\n\t\t}\n\t\treturn Maybe.Nothing;\n\t}\n\tfunction append(a, b)\n\t{\n\t\treturn a + b;\n\t}\n\tfunction concat(strs)\n\t{\n\t\treturn List.toArray(strs).join('');\n\t}\n\tfunction length(str)\n\t{\n\t\treturn str.length;\n\t}\n\tfunction map(f, str)\n\t{\n\t\tvar out = str.split('');\n\t\tfor (var i = out.length; i--; )\n\t\t{\n\t\t\tout[i] = f(Utils.chr(out[i]));\n\t\t}\n\t\treturn out.join('');\n\t}\n\tfunction filter(pred, str)\n\t{\n\t\treturn str.split('').map(Utils.chr).filter(pred).join('');\n\t}\n\tfunction reverse(str)\n\t{\n\t\treturn str.split('').reverse().join('');\n\t}\n\tfunction foldl(f, b, str)\n\t{\n\t\tvar len = str.length;\n\t\tfor (var i = 0; i < len; ++i)\n\t\t{\n\t\t\tb = A2(f, Utils.chr(str[i]), b);\n\t\t}\n\t\treturn b;\n\t}\n\tfunction foldr(f, b, str)\n\t{\n\t\tfor (var i = str.length; i--; )\n\t\t{\n\t\t\tb = A2(f, Utils.chr(str[i]), b);\n\t\t}\n\t\treturn b;\n\t}\n\tfunction split(sep, str)\n\t{\n\t\treturn List.fromArray(str.split(sep));\n\t}\n\tfunction join(sep, strs)\n\t{\n\t\treturn List.toArray(strs).join(sep);\n\t}\n\tfunction repeat(n, str)\n\t{\n\t\tvar result = '';\n\t\twhile (n > 0)\n\t\t{\n\t\t\tif (n & 1)\n\t\t\t{\n\t\t\t\tresult += str;\n\t\t\t}\n\t\t\tn >>= 1, str += str;\n\t\t}\n\t\treturn result;\n\t}\n\tfunction slice(start, end, str)\n\t{\n\t\treturn str.slice(start, end);\n\t}\n\tfunction left(n, str)\n\t{\n\t\treturn n < 1 ? '' : str.slice(0, n);\n\t}\n\tfunction right(n, str)\n\t{\n\t\treturn n < 1 ? '' : str.slice(-n);\n\t}\n\tfunction dropLeft(n, str)\n\t{\n\t\treturn n < 1 ? str : str.slice(n);\n\t}\n\tfunction dropRight(n, str)\n\t{\n\t\treturn n < 1 ? str : str.slice(0, -n);\n\t}\n\tfunction pad(n, chr, str)\n\t{\n\t\tvar half = (n - str.length) / 2;\n\t\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\n\t}\n\tfunction padRight(n, chr, str)\n\t{\n\t\treturn str + repeat(n - str.length, chr);\n\t}\n\tfunction padLeft(n, chr, str)\n\t{\n\t\treturn repeat(n - str.length, chr) + str;\n\t}\n\n\tfunction trim(str)\n\t{\n\t\treturn str.trim();\n\t}\n\tfunction trimLeft(str)\n\t{\n\t\treturn str.replace(/^\\s+/, '');\n\t}\n\tfunction trimRight(str)\n\t{\n\t\treturn str.replace(/\\s+$/, '');\n\t}\n\n\tfunction words(str)\n\t{\n\t\treturn List.fromArray(str.trim().split(/\\s+/g));\n\t}\n\tfunction lines(str)\n\t{\n\t\treturn List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n\t}\n\n\tfunction toUpper(str)\n\t{\n\t\treturn str.toUpperCase();\n\t}\n\tfunction toLower(str)\n\t{\n\t\treturn str.toLowerCase();\n\t}\n\n\tfunction any(pred, str)\n\t{\n\t\tfor (var i = str.length; i--; )\n\t\t{\n\t\t\tif (pred(Utils.chr(str[i])))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfunction all(pred, str)\n\t{\n\t\tfor (var i = str.length; i--; )\n\t\t{\n\t\t\tif (!pred(Utils.chr(str[i])))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction contains(sub, str)\n\t{\n\t\treturn str.indexOf(sub) > -1;\n\t}\n\tfunction startsWith(sub, str)\n\t{\n\t\treturn str.indexOf(sub) === 0;\n\t}\n\tfunction endsWith(sub, str)\n\t{\n\t\treturn str.length >= sub.length &&\n\t\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n\t}\n\tfunction indexes(sub, str)\n\t{\n\t\tvar subLen = sub.length;\n\t\tvar i = 0;\n\t\tvar is = [];\n\t\twhile ((i = str.indexOf(sub, i)) > -1)\n\t\t{\n\t\t\tis.push(i);\n\t\t\ti = i + subLen;\n\t\t}\n\t\treturn List.fromArray(is);\n\t}\n\n\tfunction toInt(s)\n\t{\n\t\tvar len = s.length;\n\t\tif (len === 0)\n\t\t{\n\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t}\n\t\tvar start = 0;\n\t\tif (s[0] === '-')\n\t\t{\n\t\t\tif (len === 1)\n\t\t\t{\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t\t}\n\t\t\tstart = 1;\n\t\t}\n\t\tfor (var i = start; i < len; ++i)\n\t\t{\n\t\t\tif (!Char.isDigit(s[i]))\n\t\t\t{\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n\t\t\t}\n\t\t}\n\t\treturn Result.Ok(parseInt(s, 10));\n\t}\n\n\tfunction toFloat(s)\n\t{\n\t\tvar len = s.length;\n\t\tif (len === 0)\n\t\t{\n\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t}\n\t\tvar start = 0;\n\t\tif (s[0] === '-')\n\t\t{\n\t\t\tif (len === 1)\n\t\t\t{\n\t\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t\t}\n\t\t\tstart = 1;\n\t\t}\n\t\tvar dotCount = 0;\n\t\tfor (var i = start; i < len; ++i)\n\t\t{\n\t\t\tif (Char.isDigit(s[i]))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (s[i] === '.')\n\t\t\t{\n\t\t\t\tdotCount += 1;\n\t\t\t\tif (dotCount <= 1)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n\t\t}\n\t\treturn Result.Ok(parseFloat(s));\n\t}\n\n\tfunction toList(str)\n\t{\n\t\treturn List.fromArray(str.split('').map(Utils.chr));\n\t}\n\tfunction fromList(chars)\n\t{\n\t\treturn List.toArray(chars).join('');\n\t}\n\n\treturn Elm.Native.String.values = {\n\t\tisEmpty: isEmpty,\n\t\tcons: F2(cons),\n\t\tuncons: uncons,\n\t\tappend: F2(append),\n\t\tconcat: concat,\n\t\tlength: length,\n\t\tmap: F2(map),\n\t\tfilter: F2(filter),\n\t\treverse: reverse,\n\t\tfoldl: F3(foldl),\n\t\tfoldr: F3(foldr),\n\n\t\tsplit: F2(split),\n\t\tjoin: F2(join),\n\t\trepeat: F2(repeat),\n\n\t\tslice: F3(slice),\n\t\tleft: F2(left),\n\t\tright: F2(right),\n\t\tdropLeft: F2(dropLeft),\n\t\tdropRight: F2(dropRight),\n\n\t\tpad: F3(pad),\n\t\tpadLeft: F3(padLeft),\n\t\tpadRight: F3(padRight),\n\n\t\ttrim: trim,\n\t\ttrimLeft: trimLeft,\n\t\ttrimRight: trimRight,\n\n\t\twords: words,\n\t\tlines: lines,\n\n\t\ttoUpper: toUpper,\n\t\ttoLower: toLower,\n\n\t\tany: F2(any),\n\t\tall: F2(all),\n\n\t\tcontains: F2(contains),\n\t\tstartsWith: F2(startsWith),\n\t\tendsWith: F2(endsWith),\n\t\tindexes: F2(indexes),\n\n\t\ttoInt: toInt,\n\t\ttoFloat: toFloat,\n\t\ttoList: toList,\n\t\tfromList: fromList\n\t};\n};\n\nElm.String = Elm.String || {};\nElm.String.make = function (_elm) {\n   \"use strict\";\n   _elm.String = _elm.String || {};\n   if (_elm.String.values) return _elm.String.values;\n   var _U = Elm.Native.Utils.make(_elm),$Maybe = Elm.Maybe.make(_elm),$Native$String = Elm.Native.String.make(_elm),$Result = Elm.Result.make(_elm);\n   var _op = {};\n   var fromList = $Native$String.fromList;\n   var toList = $Native$String.toList;\n   var toFloat = $Native$String.toFloat;\n   var toInt = $Native$String.toInt;\n   var indices = $Native$String.indexes;\n   var indexes = $Native$String.indexes;\n   var endsWith = $Native$String.endsWith;\n   var startsWith = $Native$String.startsWith;\n   var contains = $Native$String.contains;\n   var all = $Native$String.all;\n   var any = $Native$String.any;\n   var toLower = $Native$String.toLower;\n   var toUpper = $Native$String.toUpper;\n   var lines = $Native$String.lines;\n   var words = $Native$String.words;\n   var trimRight = $Native$String.trimRight;\n   var trimLeft = $Native$String.trimLeft;\n   var trim = $Native$String.trim;\n   var padRight = $Native$String.padRight;\n   var padLeft = $Native$String.padLeft;\n   var pad = $Native$String.pad;\n   var dropRight = $Native$String.dropRight;\n   var dropLeft = $Native$String.dropLeft;\n   var right = $Native$String.right;\n   var left = $Native$String.left;\n   var slice = $Native$String.slice;\n   var repeat = $Native$String.repeat;\n   var join = $Native$String.join;\n   var split = $Native$String.split;\n   var foldr = $Native$String.foldr;\n   var foldl = $Native$String.foldl;\n   var reverse = $Native$String.reverse;\n   var filter = $Native$String.filter;\n   var map = $Native$String.map;\n   var length = $Native$String.length;\n   var concat = $Native$String.concat;\n   var append = $Native$String.append;\n   var uncons = $Native$String.uncons;\n   var cons = $Native$String.cons;\n   var fromChar = function ($char) {    return A2(cons,$char,\"\");};\n   var isEmpty = $Native$String.isEmpty;\n   return _elm.String.values = {_op: _op\n                               ,isEmpty: isEmpty\n                               ,length: length\n                               ,reverse: reverse\n                               ,repeat: repeat\n                               ,cons: cons\n                               ,uncons: uncons\n                               ,fromChar: fromChar\n                               ,append: append\n                               ,concat: concat\n                               ,split: split\n                               ,join: join\n                               ,words: words\n                               ,lines: lines\n                               ,slice: slice\n                               ,left: left\n                               ,right: right\n                               ,dropLeft: dropLeft\n                               ,dropRight: dropRight\n                               ,contains: contains\n                               ,startsWith: startsWith\n                               ,endsWith: endsWith\n                               ,indexes: indexes\n                               ,indices: indices\n                               ,toInt: toInt\n                               ,toFloat: toFloat\n                               ,toList: toList\n                               ,fromList: fromList\n                               ,toUpper: toUpper\n                               ,toLower: toLower\n                               ,pad: pad\n                               ,padLeft: padLeft\n                               ,padRight: padRight\n                               ,trim: trim\n                               ,trimLeft: trimLeft\n                               ,trimRight: trimRight\n                               ,map: map\n                               ,filter: filter\n                               ,foldl: foldl\n                               ,foldr: foldr\n                               ,any: any\n                               ,all: all};\n};\nElm.Dict = Elm.Dict || {};\nElm.Dict.make = function (_elm) {\n   \"use strict\";\n   _elm.Dict = _elm.Dict || {};\n   if (_elm.Dict.values) return _elm.Dict.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm),\n   $String = Elm.String.make(_elm);\n   var _op = {};\n   var foldr = F3(function (f,acc,t) {\n      foldr: while (true) {\n         var _p0 = t;\n         if (_p0.ctor === \"RBEmpty_elm_builtin\") {\n               return acc;\n            } else {\n               var _v1 = f,_v2 = A3(f,_p0._1,_p0._2,A3(foldr,f,acc,_p0._4)),_v3 = _p0._3;\n               f = _v1;\n               acc = _v2;\n               t = _v3;\n               continue foldr;\n            }\n      }\n   });\n   var keys = function (dict) {    return A3(foldr,F3(function (key,value,keyList) {    return A2($List._op[\"::\"],key,keyList);}),_U.list([]),dict);};\n   var values = function (dict) {    return A3(foldr,F3(function (key,value,valueList) {    return A2($List._op[\"::\"],value,valueList);}),_U.list([]),dict);};\n   var toList = function (dict) {\n      return A3(foldr,F3(function (key,value,list) {    return A2($List._op[\"::\"],{ctor: \"_Tuple2\",_0: key,_1: value},list);}),_U.list([]),dict);\n   };\n   var foldl = F3(function (f,acc,dict) {\n      foldl: while (true) {\n         var _p1 = dict;\n         if (_p1.ctor === \"RBEmpty_elm_builtin\") {\n               return acc;\n            } else {\n               var _v5 = f,_v6 = A3(f,_p1._1,_p1._2,A3(foldl,f,acc,_p1._3)),_v7 = _p1._4;\n               f = _v5;\n               acc = _v6;\n               dict = _v7;\n               continue foldl;\n            }\n      }\n   });\n   var reportRemBug = F4(function (msg,c,lgot,rgot) {\n      return $Native$Debug.crash($String.concat(_U.list([\"Internal red-black tree invariant violated, expected \"\n                                                        ,msg\n                                                        ,\" and got \"\n                                                        ,$Basics.toString(c)\n                                                        ,\"/\"\n                                                        ,lgot\n                                                        ,\"/\"\n                                                        ,rgot\n                                                        ,\"\\nPlease report this bug to <https://github.com/elm-lang/core/issues>\"])));\n   });\n   var isBBlack = function (dict) {\n      var _p2 = dict;\n      _v8_2: do {\n         if (_p2.ctor === \"RBNode_elm_builtin\") {\n               if (_p2._0.ctor === \"BBlack\") {\n                     return true;\n                  } else {\n                     break _v8_2;\n                  }\n            } else {\n               if (_p2._0.ctor === \"LBBlack\") {\n                     return true;\n                  } else {\n                     break _v8_2;\n                  }\n            }\n      } while (false);\n      return false;\n   };\n   var Same = {ctor: \"Same\"};\n   var Remove = {ctor: \"Remove\"};\n   var Insert = {ctor: \"Insert\"};\n   var sizeHelp = F2(function (n,dict) {\n      sizeHelp: while (true) {\n         var _p3 = dict;\n         if (_p3.ctor === \"RBEmpty_elm_builtin\") {\n               return n;\n            } else {\n               var _v10 = A2(sizeHelp,n + 1,_p3._4),_v11 = _p3._3;\n               n = _v10;\n               dict = _v11;\n               continue sizeHelp;\n            }\n      }\n   });\n   var size = function (dict) {    return A2(sizeHelp,0,dict);};\n   var get = F2(function (targetKey,dict) {\n      get: while (true) {\n         var _p4 = dict;\n         if (_p4.ctor === \"RBEmpty_elm_builtin\") {\n               return $Maybe.Nothing;\n            } else {\n               var _p5 = A2($Basics.compare,targetKey,_p4._1);\n               switch (_p5.ctor)\n               {case \"LT\": var _v14 = targetKey,_v15 = _p4._3;\n                    targetKey = _v14;\n                    dict = _v15;\n                    continue get;\n                  case \"EQ\": return $Maybe.Just(_p4._2);\n                  default: var _v16 = targetKey,_v17 = _p4._4;\n                    targetKey = _v16;\n                    dict = _v17;\n                    continue get;}\n            }\n      }\n   });\n   var member = F2(function (key,dict) {    var _p6 = A2(get,key,dict);if (_p6.ctor === \"Just\") {    return true;} else {    return false;}});\n   var maxWithDefault = F3(function (k,v,r) {\n      maxWithDefault: while (true) {\n         var _p7 = r;\n         if (_p7.ctor === \"RBEmpty_elm_builtin\") {\n               return {ctor: \"_Tuple2\",_0: k,_1: v};\n            } else {\n               var _v20 = _p7._1,_v21 = _p7._2,_v22 = _p7._4;\n               k = _v20;\n               v = _v21;\n               r = _v22;\n               continue maxWithDefault;\n            }\n      }\n   });\n   var RBEmpty_elm_builtin = function (a) {    return {ctor: \"RBEmpty_elm_builtin\",_0: a};};\n   var RBNode_elm_builtin = F5(function (a,b,c,d,e) {    return {ctor: \"RBNode_elm_builtin\",_0: a,_1: b,_2: c,_3: d,_4: e};});\n   var LBBlack = {ctor: \"LBBlack\"};\n   var LBlack = {ctor: \"LBlack\"};\n   var empty = RBEmpty_elm_builtin(LBlack);\n   var isEmpty = function (dict) {    return _U.eq(dict,empty);};\n   var map = F2(function (f,dict) {\n      var _p8 = dict;\n      if (_p8.ctor === \"RBEmpty_elm_builtin\") {\n            return RBEmpty_elm_builtin(LBlack);\n         } else {\n            var _p9 = _p8._1;\n            return A5(RBNode_elm_builtin,_p8._0,_p9,A2(f,_p9,_p8._2),A2(map,f,_p8._3),A2(map,f,_p8._4));\n         }\n   });\n   var NBlack = {ctor: \"NBlack\"};\n   var BBlack = {ctor: \"BBlack\"};\n   var Black = {ctor: \"Black\"};\n   var ensureBlackRoot = function (dict) {\n      var _p10 = dict;\n      if (_p10.ctor === \"RBNode_elm_builtin\" && _p10._0.ctor === \"Red\") {\n            return A5(RBNode_elm_builtin,Black,_p10._1,_p10._2,_p10._3,_p10._4);\n         } else {\n            return dict;\n         }\n   };\n   var blackish = function (t) {\n      var _p11 = t;\n      if (_p11.ctor === \"RBNode_elm_builtin\") {\n            var _p12 = _p11._0;\n            return _U.eq(_p12,Black) || _U.eq(_p12,BBlack);\n         } else {\n            return true;\n         }\n   };\n   var blacken = function (t) {\n      var _p13 = t;\n      if (_p13.ctor === \"RBEmpty_elm_builtin\") {\n            return RBEmpty_elm_builtin(LBlack);\n         } else {\n            return A5(RBNode_elm_builtin,Black,_p13._1,_p13._2,_p13._3,_p13._4);\n         }\n   };\n   var Red = {ctor: \"Red\"};\n   var moreBlack = function (color) {\n      var _p14 = color;\n      switch (_p14.ctor)\n      {case \"Black\": return BBlack;\n         case \"Red\": return Black;\n         case \"NBlack\": return Red;\n         default: return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");}\n   };\n   var lessBlack = function (color) {\n      var _p15 = color;\n      switch (_p15.ctor)\n      {case \"BBlack\": return Black;\n         case \"Black\": return Red;\n         case \"Red\": return NBlack;\n         default: return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");}\n   };\n   var lessBlackTree = function (dict) {\n      var _p16 = dict;\n      if (_p16.ctor === \"RBNode_elm_builtin\") {\n            return A5(RBNode_elm_builtin,lessBlack(_p16._0),_p16._1,_p16._2,_p16._3,_p16._4);\n         } else {\n            return RBEmpty_elm_builtin(LBlack);\n         }\n   };\n   var balancedTree = function (col) {\n      return function (xk) {\n         return function (xv) {\n            return function (yk) {\n               return function (yv) {\n                  return function (zk) {\n                     return function (zv) {\n                        return function (a) {\n                           return function (b) {\n                              return function (c) {\n                                 return function (d) {\n                                    return A5(RBNode_elm_builtin,\n                                    lessBlack(col),\n                                    yk,\n                                    yv,\n                                    A5(RBNode_elm_builtin,Black,xk,xv,a,b),\n                                    A5(RBNode_elm_builtin,Black,zk,zv,c,d));\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n      };\n   };\n   var redden = function (t) {\n      var _p17 = t;\n      if (_p17.ctor === \"RBEmpty_elm_builtin\") {\n            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n         } else {\n            return A5(RBNode_elm_builtin,Red,_p17._1,_p17._2,_p17._3,_p17._4);\n         }\n   };\n   var balanceHelp = function (tree) {\n      var _p18 = tree;\n      _v31_6: do {\n         _v31_5: do {\n            _v31_4: do {\n               _v31_3: do {\n                  _v31_2: do {\n                     _v31_1: do {\n                        _v31_0: do {\n                           if (_p18.ctor === \"RBNode_elm_builtin\") {\n                                 if (_p18._3.ctor === \"RBNode_elm_builtin\") {\n                                       if (_p18._4.ctor === \"RBNode_elm_builtin\") {\n                                             switch (_p18._3._0.ctor)\n                                             {case \"Red\": switch (_p18._4._0.ctor)\n                                                  {case \"Red\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n                                                                         break _v31_2;\n                                                                      } else {\n                                                                         if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n                                                                               break _v31_3;\n                                                                            } else {\n                                                                               break _v31_6;\n                                                                            }\n                                                                      }\n                                                                }\n                                                          }\n                                                     case \"NBlack\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n                                                                   {\n                                                                         break _v31_4;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          }\n                                                     default: if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n                                                             break _v31_0;\n                                                          } else {\n                                                             if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n                                                                   break _v31_1;\n                                                                } else {\n                                                                   break _v31_6;\n                                                                }\n                                                          }}\n                                                case \"NBlack\": switch (_p18._4._0.ctor)\n                                                  {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n                                                             break _v31_2;\n                                                          } else {\n                                                             if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n                                                                   break _v31_3;\n                                                                } else {\n                                                                   if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n                                                                   {\n                                                                         break _v31_5;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          }\n                                                     case \"NBlack\": if (_p18._0.ctor === \"BBlack\") {\n                                                             if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n                                                             {\n                                                                   break _v31_4;\n                                                                } else {\n                                                                   if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n                                                                   {\n                                                                         break _v31_5;\n                                                                      } else {\n                                                                         break _v31_6;\n                                                                      }\n                                                                }\n                                                          } else {\n                                                             break _v31_6;\n                                                          }\n                                                     default:\n                                                     if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n                                                       {\n                                                             break _v31_5;\n                                                          } else {\n                                                             break _v31_6;\n                                                          }}\n                                                default: switch (_p18._4._0.ctor)\n                                                  {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n                                                             break _v31_2;\n                                                          } else {\n                                                             if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n                                                                   break _v31_3;\n                                                                } else {\n                                                                   break _v31_6;\n                                                                }\n                                                          }\n                                                     case \"NBlack\":\n                                                     if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n                                                       {\n                                                             break _v31_4;\n                                                          } else {\n                                                             break _v31_6;\n                                                          }\n                                                     default: break _v31_6;}}\n                                          } else {\n                                             switch (_p18._3._0.ctor)\n                                             {case \"Red\": if (_p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Red\") {\n                                                        break _v31_0;\n                                                     } else {\n                                                        if (_p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Red\") {\n                                                              break _v31_1;\n                                                           } else {\n                                                              break _v31_6;\n                                                           }\n                                                     }\n                                                case \"NBlack\":\n                                                if (_p18._0.ctor === \"BBlack\" && _p18._3._3.ctor === \"RBNode_elm_builtin\" && _p18._3._3._0.ctor === \"Black\" && _p18._3._4.ctor === \"RBNode_elm_builtin\" && _p18._3._4._0.ctor === \"Black\")\n                                                  {\n                                                        break _v31_5;\n                                                     } else {\n                                                        break _v31_6;\n                                                     }\n                                                default: break _v31_6;}\n                                          }\n                                    } else {\n                                       if (_p18._4.ctor === \"RBNode_elm_builtin\") {\n                                             switch (_p18._4._0.ctor)\n                                             {case \"Red\": if (_p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Red\") {\n                                                        break _v31_2;\n                                                     } else {\n                                                        if (_p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Red\") {\n                                                              break _v31_3;\n                                                           } else {\n                                                              break _v31_6;\n                                                           }\n                                                     }\n                                                case \"NBlack\":\n                                                if (_p18._0.ctor === \"BBlack\" && _p18._4._3.ctor === \"RBNode_elm_builtin\" && _p18._4._3._0.ctor === \"Black\" && _p18._4._4.ctor === \"RBNode_elm_builtin\" && _p18._4._4._0.ctor === \"Black\")\n                                                  {\n                                                        break _v31_4;\n                                                     } else {\n                                                        break _v31_6;\n                                                     }\n                                                default: break _v31_6;}\n                                          } else {\n                                             break _v31_6;\n                                          }\n                                    }\n                              } else {\n                                 break _v31_6;\n                              }\n                        } while (false);\n                        return balancedTree(_p18._0)(_p18._3._3._1)(_p18._3._3._2)(_p18._3._1)(_p18._3._2)(_p18._1)(_p18._2)(_p18._3._3._3)(_p18._3._3._4)(_p18._3._4)(_p18._4);\n                     } while (false);\n                     return balancedTree(_p18._0)(_p18._3._1)(_p18._3._2)(_p18._3._4._1)(_p18._3._4._2)(_p18._1)(_p18._2)(_p18._3._3)(_p18._3._4._3)(_p18._3._4._4)(_p18._4);\n                  } while (false);\n                  return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._3._1)(_p18._4._3._2)(_p18._4._1)(_p18._4._2)(_p18._3)(_p18._4._3._3)(_p18._4._3._4)(_p18._4._4);\n               } while (false);\n               return balancedTree(_p18._0)(_p18._1)(_p18._2)(_p18._4._1)(_p18._4._2)(_p18._4._4._1)(_p18._4._4._2)(_p18._3)(_p18._4._3)(_p18._4._4._3)(_p18._4._4._4);\n            } while (false);\n            return A5(RBNode_elm_builtin,\n            Black,\n            _p18._4._3._1,\n            _p18._4._3._2,\n            A5(RBNode_elm_builtin,Black,_p18._1,_p18._2,_p18._3,_p18._4._3._3),\n            A5(balance,Black,_p18._4._1,_p18._4._2,_p18._4._3._4,redden(_p18._4._4)));\n         } while (false);\n         return A5(RBNode_elm_builtin,\n         Black,\n         _p18._3._4._1,\n         _p18._3._4._2,\n         A5(balance,Black,_p18._3._1,_p18._3._2,redden(_p18._3._3),_p18._3._4._3),\n         A5(RBNode_elm_builtin,Black,_p18._1,_p18._2,_p18._3._4._4,_p18._4));\n      } while (false);\n      return tree;\n   };\n   var balance = F5(function (c,k,v,l,r) {    var tree = A5(RBNode_elm_builtin,c,k,v,l,r);return blackish(tree) ? balanceHelp(tree) : tree;});\n   var bubble = F5(function (c,k,v,l,r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,moreBlack(c),k,v,lessBlackTree(l),lessBlackTree(r)) : A5(RBNode_elm_builtin,c,k,v,l,r);\n   });\n   var removeMax = F5(function (c,k,v,l,r) {\n      var _p19 = r;\n      if (_p19.ctor === \"RBEmpty_elm_builtin\") {\n            return A3(rem,c,l,r);\n         } else {\n            return A5(bubble,c,k,v,l,A5(removeMax,_p19._0,_p19._1,_p19._2,_p19._3,_p19._4));\n         }\n   });\n   var rem = F3(function (c,l,r) {\n      var _p20 = {ctor: \"_Tuple2\",_0: l,_1: r};\n      if (_p20._0.ctor === \"RBEmpty_elm_builtin\") {\n            if (_p20._1.ctor === \"RBEmpty_elm_builtin\") {\n                  var _p21 = c;\n                  switch (_p21.ctor)\n                  {case \"Red\": return RBEmpty_elm_builtin(LBlack);\n                     case \"Black\": return RBEmpty_elm_builtin(LBBlack);\n                     default: return $Native$Debug.crash(\"cannot have bblack or nblack nodes at this point\");}\n               } else {\n                  var _p24 = _p20._1._0;\n                  var _p23 = _p20._0._0;\n                  var _p22 = {ctor: \"_Tuple3\",_0: c,_1: _p23,_2: _p24};\n                  if (_p22.ctor === \"_Tuple3\" && _p22._0.ctor === \"Black\" && _p22._1.ctor === \"LBlack\" && _p22._2.ctor === \"Red\") {\n                        return A5(RBNode_elm_builtin,Black,_p20._1._1,_p20._1._2,_p20._1._3,_p20._1._4);\n                     } else {\n                        return A4(reportRemBug,\"Black/LBlack/Red\",c,$Basics.toString(_p23),$Basics.toString(_p24));\n                     }\n               }\n         } else {\n            if (_p20._1.ctor === \"RBEmpty_elm_builtin\") {\n                  var _p27 = _p20._1._0;\n                  var _p26 = _p20._0._0;\n                  var _p25 = {ctor: \"_Tuple3\",_0: c,_1: _p26,_2: _p27};\n                  if (_p25.ctor === \"_Tuple3\" && _p25._0.ctor === \"Black\" && _p25._1.ctor === \"Red\" && _p25._2.ctor === \"LBlack\") {\n                        return A5(RBNode_elm_builtin,Black,_p20._0._1,_p20._0._2,_p20._0._3,_p20._0._4);\n                     } else {\n                        return A4(reportRemBug,\"Black/Red/LBlack\",c,$Basics.toString(_p26),$Basics.toString(_p27));\n                     }\n               } else {\n                  var _p31 = _p20._0._2;\n                  var _p30 = _p20._0._4;\n                  var _p29 = _p20._0._1;\n                  var l$ = A5(removeMax,_p20._0._0,_p29,_p31,_p20._0._3,_p30);\n                  var _p28 = A3(maxWithDefault,_p29,_p31,_p30);\n                  var k = _p28._0;\n                  var v = _p28._1;\n                  return A5(bubble,c,k,v,l$,r);\n               }\n         }\n   });\n   var update = F3(function (k,alter,dict) {\n      var up = function (dict) {\n         var _p32 = dict;\n         if (_p32.ctor === \"RBEmpty_elm_builtin\") {\n               var _p33 = alter($Maybe.Nothing);\n               if (_p33.ctor === \"Nothing\") {\n                     return {ctor: \"_Tuple2\",_0: Same,_1: empty};\n                  } else {\n                     return {ctor: \"_Tuple2\",_0: Insert,_1: A5(RBNode_elm_builtin,Red,k,_p33._0,empty,empty)};\n                  }\n            } else {\n               var _p44 = _p32._2;\n               var _p43 = _p32._4;\n               var _p42 = _p32._3;\n               var _p41 = _p32._1;\n               var _p40 = _p32._0;\n               var _p34 = A2($Basics.compare,k,_p41);\n               switch (_p34.ctor)\n               {case \"EQ\": var _p35 = alter($Maybe.Just(_p44));\n                    if (_p35.ctor === \"Nothing\") {\n                          return {ctor: \"_Tuple2\",_0: Remove,_1: A3(rem,_p40,_p42,_p43)};\n                       } else {\n                          return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p35._0,_p42,_p43)};\n                       }\n                  case \"LT\": var _p36 = up(_p42);\n                    var flag = _p36._0;\n                    var newLeft = _p36._1;\n                    var _p37 = flag;\n                    switch (_p37.ctor)\n                    {case \"Same\": return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,newLeft,_p43)};\n                       case \"Insert\": return {ctor: \"_Tuple2\",_0: Insert,_1: A5(balance,_p40,_p41,_p44,newLeft,_p43)};\n                       default: return {ctor: \"_Tuple2\",_0: Remove,_1: A5(bubble,_p40,_p41,_p44,newLeft,_p43)};}\n                  default: var _p38 = up(_p43);\n                    var flag = _p38._0;\n                    var newRight = _p38._1;\n                    var _p39 = flag;\n                    switch (_p39.ctor)\n                    {case \"Same\": return {ctor: \"_Tuple2\",_0: Same,_1: A5(RBNode_elm_builtin,_p40,_p41,_p44,_p42,newRight)};\n                       case \"Insert\": return {ctor: \"_Tuple2\",_0: Insert,_1: A5(balance,_p40,_p41,_p44,_p42,newRight)};\n                       default: return {ctor: \"_Tuple2\",_0: Remove,_1: A5(bubble,_p40,_p41,_p44,_p42,newRight)};}}\n            }\n      };\n      var _p45 = up(dict);\n      var flag = _p45._0;\n      var updatedDict = _p45._1;\n      var _p46 = flag;\n      switch (_p46.ctor)\n      {case \"Same\": return updatedDict;\n         case \"Insert\": return ensureBlackRoot(updatedDict);\n         default: return blacken(updatedDict);}\n   });\n   var insert = F3(function (key,value,dict) {    return A3(update,key,$Basics.always($Maybe.Just(value)),dict);});\n   var singleton = F2(function (key,value) {    return A3(insert,key,value,empty);});\n   var union = F2(function (t1,t2) {    return A3(foldl,insert,t2,t1);});\n   var fromList = function (assocs) {\n      return A3($List.foldl,F2(function (_p47,dict) {    var _p48 = _p47;return A3(insert,_p48._0,_p48._1,dict);}),empty,assocs);\n   };\n   var filter = F2(function (predicate,dictionary) {\n      var add = F3(function (key,value,dict) {    return A2(predicate,key,value) ? A3(insert,key,value,dict) : dict;});\n      return A3(foldl,add,empty,dictionary);\n   });\n   var intersect = F2(function (t1,t2) {    return A2(filter,F2(function (k,_p49) {    return A2(member,k,t2);}),t1);});\n   var partition = F2(function (predicate,dict) {\n      var add = F3(function (key,value,_p50) {\n         var _p51 = _p50;\n         var _p53 = _p51._1;\n         var _p52 = _p51._0;\n         return A2(predicate,key,value) ? {ctor: \"_Tuple2\",_0: A3(insert,key,value,_p52),_1: _p53} : {ctor: \"_Tuple2\",_0: _p52,_1: A3(insert,key,value,_p53)};\n      });\n      return A3(foldl,add,{ctor: \"_Tuple2\",_0: empty,_1: empty},dict);\n   });\n   var remove = F2(function (key,dict) {    return A3(update,key,$Basics.always($Maybe.Nothing),dict);});\n   var diff = F2(function (t1,t2) {    return A3(foldl,F3(function (k,v,t) {    return A2(remove,k,t);}),t1,t2);});\n   return _elm.Dict.values = {_op: _op\n                             ,empty: empty\n                             ,singleton: singleton\n                             ,insert: insert\n                             ,update: update\n                             ,isEmpty: isEmpty\n                             ,get: get\n                             ,remove: remove\n                             ,member: member\n                             ,size: size\n                             ,filter: filter\n                             ,partition: partition\n                             ,foldl: foldl\n                             ,foldr: foldr\n                             ,map: map\n                             ,union: union\n                             ,intersect: intersect\n                             ,diff: diff\n                             ,keys: keys\n                             ,values: values\n                             ,toList: toList\n                             ,fromList: fromList};\n};\nElm.Native.Json = {};\n\nElm.Native.Json.make = function(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Json = localRuntime.Native.Json || {};\n\tif (localRuntime.Native.Json.values) {\n\t\treturn localRuntime.Native.Json.values;\n\t}\n\n\tvar ElmArray = Elm.Native.Array.make(localRuntime);\n\tvar List = Elm.Native.List.make(localRuntime);\n\tvar Maybe = Elm.Maybe.make(localRuntime);\n\tvar Result = Elm.Result.make(localRuntime);\n\tvar Utils = Elm.Native.Utils.make(localRuntime);\n\n\n\tfunction crash(expected, actual) {\n\t\tthrow new Error(\n\t\t\t'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n\t\t);\n\t}\n\n\n\t// PRIMITIVE VALUES\n\n\tfunction decodeNull(successValue) {\n\t\treturn function(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn successValue;\n\t\t\t}\n\t\t\tcrash('null', value);\n\t\t};\n\t}\n\n\n\tfunction decodeString(value) {\n\t\tif (typeof value === 'string' || value instanceof String) {\n\t\t\treturn value;\n\t\t}\n\t\tcrash('a String', value);\n\t}\n\n\n\tfunction decodeFloat(value) {\n\t\tif (typeof value === 'number') {\n\t\t\treturn value;\n\t\t}\n\t\tcrash('a Float', value);\n\t}\n\n\n\tfunction decodeInt(value) {\n\t\tif (typeof value !== 'number') {\n\t\t\tcrash('an Int', value);\n\t\t}\n\n\t\tif (value < 2147483647 && value > -2147483647 && (value | 0) === value) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\treturn value;\n\t\t}\n\n\t\tcrash('an Int', value);\n\t}\n\n\n\tfunction decodeBool(value) {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn value;\n\t\t}\n\t\tcrash('a Bool', value);\n\t}\n\n\n\t// ARRAY\n\n\tfunction decodeArray(decoder) {\n\t\treturn function(value) {\n\t\t\tif (value instanceof Array) {\n\t\t\t\tvar len = value.length;\n\t\t\t\tvar array = new Array(len);\n\t\t\t\tfor (var i = len; i--; ) {\n\t\t\t\t\tarray[i] = decoder(value[i]);\n\t\t\t\t}\n\t\t\t\treturn ElmArray.fromJSArray(array);\n\t\t\t}\n\t\t\tcrash('an Array', value);\n\t\t};\n\t}\n\n\n\t// LIST\n\n\tfunction decodeList(decoder) {\n\t\treturn function(value) {\n\t\t\tif (value instanceof Array) {\n\t\t\t\tvar len = value.length;\n\t\t\t\tvar list = List.Nil;\n\t\t\t\tfor (var i = len; i--; ) {\n\t\t\t\t\tlist = List.Cons( decoder(value[i]), list );\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tcrash('a List', value);\n\t\t};\n\t}\n\n\n\t// MAYBE\n\n\tfunction decodeMaybe(decoder) {\n\t\treturn function(value) {\n\t\t\ttry {\n\t\t\t\treturn Maybe.Just(decoder(value));\n\t\t\t} catch(e) {\n\t\t\t\treturn Maybe.Nothing;\n\t\t\t}\n\t\t};\n\t}\n\n\n\t// FIELDS\n\n\tfunction decodeField(field, decoder) {\n\t\treturn function(value) {\n\t\t\tvar subValue = value[field];\n\t\t\tif (subValue !== undefined) {\n\t\t\t\treturn decoder(subValue);\n\t\t\t}\n\t\t\tcrash(\"an object with field '\" + field + \"'\", value);\n\t\t};\n\t}\n\n\n\t// OBJECTS\n\n\tfunction decodeKeyValuePairs(decoder) {\n\t\treturn function(value) {\n\t\t\tvar isObject =\n\t\t\t\ttypeof value === 'object'\n\t\t\t\t\t&& value !== null\n\t\t\t\t\t&& !(value instanceof Array);\n\n\t\t\tif (isObject) {\n\t\t\t\tvar keyValuePairs = List.Nil;\n\t\t\t\tfor (var key in value)\n\t\t\t\t{\n\t\t\t\t\tvar elmValue = decoder(value[key]);\n\t\t\t\t\tvar pair = Utils.Tuple2(key, elmValue);\n\t\t\t\t\tkeyValuePairs = List.Cons(pair, keyValuePairs);\n\t\t\t\t}\n\t\t\t\treturn keyValuePairs;\n\t\t\t}\n\n\t\t\tcrash('an object', value);\n\t\t};\n\t}\n\n\tfunction decodeObject1(f, d1) {\n\t\treturn function(value) {\n\t\t\treturn f(d1(value));\n\t\t};\n\t}\n\n\tfunction decodeObject2(f, d1, d2) {\n\t\treturn function(value) {\n\t\t\treturn A2( f, d1(value), d2(value) );\n\t\t};\n\t}\n\n\tfunction decodeObject3(f, d1, d2, d3) {\n\t\treturn function(value) {\n\t\t\treturn A3( f, d1(value), d2(value), d3(value) );\n\t\t};\n\t}\n\n\tfunction decodeObject4(f, d1, d2, d3, d4) {\n\t\treturn function(value) {\n\t\t\treturn A4( f, d1(value), d2(value), d3(value), d4(value) );\n\t\t};\n\t}\n\n\tfunction decodeObject5(f, d1, d2, d3, d4, d5) {\n\t\treturn function(value) {\n\t\t\treturn A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n\t\t};\n\t}\n\n\tfunction decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n\t\treturn function(value) {\n\t\t\treturn A6( f,\n\t\t\t\td1(value),\n\t\t\t\td2(value),\n\t\t\t\td3(value),\n\t\t\t\td4(value),\n\t\t\t\td5(value),\n\t\t\t\td6(value)\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n\t\treturn function(value) {\n\t\t\treturn A7( f,\n\t\t\t\td1(value),\n\t\t\t\td2(value),\n\t\t\t\td3(value),\n\t\t\t\td4(value),\n\t\t\t\td5(value),\n\t\t\t\td6(value),\n\t\t\t\td7(value)\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n\t\treturn function(value) {\n\t\t\treturn A8( f,\n\t\t\t\td1(value),\n\t\t\t\td2(value),\n\t\t\t\td3(value),\n\t\t\t\td4(value),\n\t\t\t\td5(value),\n\t\t\t\td6(value),\n\t\t\t\td7(value),\n\t\t\t\td8(value)\n\t\t\t);\n\t\t};\n\t}\n\n\n\t// TUPLES\n\n\tfunction decodeTuple1(f, d1) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 1 ) {\n\t\t\t\tcrash('a Tuple of length 1', value);\n\t\t\t}\n\t\t\treturn f( d1(value[0]) );\n\t\t};\n\t}\n\n\tfunction decodeTuple2(f, d1, d2) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 2 ) {\n\t\t\t\tcrash('a Tuple of length 2', value);\n\t\t\t}\n\t\t\treturn A2( f, d1(value[0]), d2(value[1]) );\n\t\t};\n\t}\n\n\tfunction decodeTuple3(f, d1, d2, d3) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 3 ) {\n\t\t\t\tcrash('a Tuple of length 3', value);\n\t\t\t}\n\t\t\treturn A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n\t\t};\n\t}\n\n\n\tfunction decodeTuple4(f, d1, d2, d3, d4) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 4 ) {\n\t\t\t\tcrash('a Tuple of length 4', value);\n\t\t\t}\n\t\t\treturn A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n\t\t};\n\t}\n\n\n\tfunction decodeTuple5(f, d1, d2, d3, d4, d5) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 5 ) {\n\t\t\t\tcrash('a Tuple of length 5', value);\n\t\t\t}\n\t\t\treturn A5( f,\n\t\t\t\td1(value[0]),\n\t\t\t\td2(value[1]),\n\t\t\t\td3(value[2]),\n\t\t\t\td4(value[3]),\n\t\t\t\td5(value[4])\n\t\t\t);\n\t\t};\n\t}\n\n\n\tfunction decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 6 ) {\n\t\t\t\tcrash('a Tuple of length 6', value);\n\t\t\t}\n\t\t\treturn A6( f,\n\t\t\t\td1(value[0]),\n\t\t\t\td2(value[1]),\n\t\t\t\td3(value[2]),\n\t\t\t\td4(value[3]),\n\t\t\t\td5(value[4]),\n\t\t\t\td6(value[5])\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 7 ) {\n\t\t\t\tcrash('a Tuple of length 7', value);\n\t\t\t}\n\t\t\treturn A7( f,\n\t\t\t\td1(value[0]),\n\t\t\t\td2(value[1]),\n\t\t\t\td3(value[2]),\n\t\t\t\td4(value[3]),\n\t\t\t\td5(value[4]),\n\t\t\t\td6(value[5]),\n\t\t\t\td7(value[6])\n\t\t\t);\n\t\t};\n\t}\n\n\n\tfunction decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n\t\treturn function(value) {\n\t\t\tif ( !(value instanceof Array) || value.length !== 8 ) {\n\t\t\t\tcrash('a Tuple of length 8', value);\n\t\t\t}\n\t\t\treturn A8( f,\n\t\t\t\td1(value[0]),\n\t\t\t\td2(value[1]),\n\t\t\t\td3(value[2]),\n\t\t\t\td4(value[3]),\n\t\t\t\td5(value[4]),\n\t\t\t\td6(value[5]),\n\t\t\t\td7(value[6]),\n\t\t\t\td8(value[7])\n\t\t\t);\n\t\t};\n\t}\n\n\n\t// CUSTOM DECODERS\n\n\tfunction decodeValue(value) {\n\t\treturn value;\n\t}\n\n\tfunction runDecoderValue(decoder, value) {\n\t\ttry {\n\t\t\treturn Result.Ok(decoder(value));\n\t\t} catch(e) {\n\t\t\treturn Result.Err(e.message);\n\t\t}\n\t}\n\n\tfunction customDecoder(decoder, callback) {\n\t\treturn function(value) {\n\t\t\tvar result = callback(decoder(value));\n\t\t\tif (result.ctor === 'Err') {\n\t\t\t\tthrow new Error('custom decoder failed: ' + result._0);\n\t\t\t}\n\t\t\treturn result._0;\n\t\t};\n\t}\n\n\tfunction andThen(decode, callback) {\n\t\treturn function(value) {\n\t\t\tvar result = decode(value);\n\t\t\treturn callback(result)(value);\n\t\t};\n\t}\n\n\tfunction fail(msg) {\n\t\treturn function(value) {\n\t\t\tthrow new Error(msg);\n\t\t};\n\t}\n\n\tfunction succeed(successValue) {\n\t\treturn function(value) {\n\t\t\treturn successValue;\n\t\t};\n\t}\n\n\n\t// ONE OF MANY\n\n\tfunction oneOf(decoders) {\n\t\treturn function(value) {\n\t\t\tvar errors = [];\n\t\t\tvar temp = decoders;\n\t\t\twhile (temp.ctor !== '[]') {\n\t\t\t\ttry {\n\t\t\t\t\treturn temp._0(value);\n\t\t\t\t} catch(e) {\n\t\t\t\t\terrors.push(e.message);\n\t\t\t\t}\n\t\t\t\ttemp = temp._1;\n\t\t\t}\n\t\t\tthrow new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n\t\t};\n\t}\n\n\tfunction get(decoder, value) {\n\t\ttry {\n\t\t\treturn Result.Ok(decoder(value));\n\t\t} catch(e) {\n\t\t\treturn Result.Err(e.message);\n\t\t}\n\t}\n\n\n\t// ENCODE / DECODE\n\n\tfunction runDecoderString(decoder, string) {\n\t\ttry {\n\t\t\treturn Result.Ok(decoder(JSON.parse(string)));\n\t\t} catch(e) {\n\t\t\treturn Result.Err(e.message);\n\t\t}\n\t}\n\n\tfunction encode(indentLevel, value) {\n\t\treturn JSON.stringify(value, null, indentLevel);\n\t}\n\n\tfunction identity(value) {\n\t\treturn value;\n\t}\n\n\tfunction encodeObject(keyValuePairs) {\n\t\tvar obj = {};\n\t\twhile (keyValuePairs.ctor !== '[]') {\n\t\t\tvar pair = keyValuePairs._0;\n\t\t\tobj[pair._0] = pair._1;\n\t\t\tkeyValuePairs = keyValuePairs._1;\n\t\t}\n\t\treturn obj;\n\t}\n\n\treturn localRuntime.Native.Json.values = {\n\t\tencode: F2(encode),\n\t\trunDecoderString: F2(runDecoderString),\n\t\trunDecoderValue: F2(runDecoderValue),\n\n\t\tget: F2(get),\n\t\toneOf: oneOf,\n\n\t\tdecodeNull: decodeNull,\n\t\tdecodeInt: decodeInt,\n\t\tdecodeFloat: decodeFloat,\n\t\tdecodeString: decodeString,\n\t\tdecodeBool: decodeBool,\n\n\t\tdecodeMaybe: decodeMaybe,\n\n\t\tdecodeList: decodeList,\n\t\tdecodeArray: decodeArray,\n\n\t\tdecodeField: F2(decodeField),\n\n\t\tdecodeObject1: F2(decodeObject1),\n\t\tdecodeObject2: F3(decodeObject2),\n\t\tdecodeObject3: F4(decodeObject3),\n\t\tdecodeObject4: F5(decodeObject4),\n\t\tdecodeObject5: F6(decodeObject5),\n\t\tdecodeObject6: F7(decodeObject6),\n\t\tdecodeObject7: F8(decodeObject7),\n\t\tdecodeObject8: F9(decodeObject8),\n\t\tdecodeKeyValuePairs: decodeKeyValuePairs,\n\n\t\tdecodeTuple1: F2(decodeTuple1),\n\t\tdecodeTuple2: F3(decodeTuple2),\n\t\tdecodeTuple3: F4(decodeTuple3),\n\t\tdecodeTuple4: F5(decodeTuple4),\n\t\tdecodeTuple5: F6(decodeTuple5),\n\t\tdecodeTuple6: F7(decodeTuple6),\n\t\tdecodeTuple7: F8(decodeTuple7),\n\t\tdecodeTuple8: F9(decodeTuple8),\n\n\t\tandThen: F2(andThen),\n\t\tdecodeValue: decodeValue,\n\t\tcustomDecoder: F2(customDecoder),\n\t\tfail: fail,\n\t\tsucceed: succeed,\n\n\t\tidentity: identity,\n\t\tencodeNull: null,\n\t\tencodeArray: ElmArray.toJSArray,\n\t\tencodeList: List.toArray,\n\t\tencodeObject: encodeObject\n\n\t};\n};\n\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values) return _elm.Json.Encode.values;\n   var _U = Elm.Native.Utils.make(_elm),$Array = Elm.Array.make(_elm),$Native$Json = Elm.Native.Json.make(_elm);\n   var _op = {};\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: \"Value\"};\n   return _elm.Json.Encode.values = {_op: _op\n                                    ,encode: encode\n                                    ,string: string\n                                    ,$int: $int\n                                    ,$float: $float\n                                    ,bool: bool\n                                    ,$null: $null\n                                    ,list: list\n                                    ,array: array\n                                    ,object: object};\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values) return _elm.Json.Decode.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var _op = {};\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[\":=\"] = $Native$Json.decodeField;\n   var at = F2(function (fields,decoder) {    return A3($List.foldr,F2(function (x,y) {    return A2(_op[\":=\"],x,y);}),decoder,fields);});\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {    return A2(map,$Dict.fromList,keyValuePairs(decoder));};\n   var Decoder = {ctor: \"Decoder\"};\n   return _elm.Json.Decode.values = {_op: _op\n                                    ,decodeString: decodeString\n                                    ,decodeValue: decodeValue\n                                    ,string: string\n                                    ,$int: $int\n                                    ,$float: $float\n                                    ,bool: bool\n                                    ,$null: $null\n                                    ,list: list\n                                    ,array: array\n                                    ,tuple1: tuple1\n                                    ,tuple2: tuple2\n                                    ,tuple3: tuple3\n                                    ,tuple4: tuple4\n                                    ,tuple5: tuple5\n                                    ,tuple6: tuple6\n                                    ,tuple7: tuple7\n                                    ,tuple8: tuple8\n                                    ,at: at\n                                    ,object1: object1\n                                    ,object2: object2\n                                    ,object3: object3\n                                    ,object4: object4\n                                    ,object5: object5\n                                    ,object6: object6\n                                    ,object7: object7\n                                    ,object8: object8\n                                    ,keyValuePairs: keyValuePairs\n                                    ,dict: dict\n                                    ,maybe: maybe\n                                    ,oneOf: oneOf\n                                    ,map: map\n                                    ,fail: fail\n                                    ,succeed: succeed\n                                    ,andThen: andThen\n                                    ,value: value\n                                    ,customDecoder: customDecoder};\n};\nElm.Native = Elm.Native || {};\nElm.Native.Window = {};\nElm.Native.Window.make = function make(localRuntime) {\n\tlocalRuntime.Native = localRuntime.Native || {};\n\tlocalRuntime.Native.Window = localRuntime.Native.Window || {};\n\tif (localRuntime.Native.Window.values)\n\t{\n\t\treturn localRuntime.Native.Window.values;\n\t}\n\n\tvar NS = Elm.Native.Signal.make(localRuntime);\n\tvar Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\n\n\tfunction getWidth()\n\t{\n\t\treturn localRuntime.node.clientWidth;\n\t}\n\n\n\tfunction getHeight()\n\t{\n\t\tif (localRuntime.isFullscreen())\n\t\t{\n\t\t\treturn window.innerHeight;\n\t\t}\n\t\treturn localRuntime.node.clientHeight;\n\t}\n\n\n\tvar dimensions = NS.input('Window.dimensions', Tuple2(getWidth(), getHeight()));\n\n\n\tfunction resizeIfNeeded()\n\t{\n\t\t// Do not trigger event if the dimensions have not changed.\n\t\t// This should be most of the time.\n\t\tvar w = getWidth();\n\t\tvar h = getHeight();\n\t\tif (dimensions.value._0 === w && dimensions.value._1 === h)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(function() {\n\t\t\t// Check again to see if the dimensions have changed.\n\t\t\t// It is conceivable that the dimensions have changed\n\t\t\t// again while some other event was being processed.\n\t\t\tw = getWidth();\n\t\t\th = getHeight();\n\t\t\tif (dimensions.value._0 === w && dimensions.value._1 === h)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocalRuntime.notify(dimensions.id, Tuple2(w, h));\n\t\t}, 0);\n\t}\n\n\n\tlocalRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\n\n\treturn localRuntime.Native.Window.values = {\n\t\tdimensions: dimensions,\n\t\tresizeIfNeeded: resizeIfNeeded\n\t};\n};\n\nElm.Random = Elm.Random || {};\nElm.Random.make = function (_elm) {\n   \"use strict\";\n   _elm.Random = _elm.Random || {};\n   if (_elm.Random.values) return _elm.Random.values;\n   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$List = Elm.List.make(_elm);\n   var _op = {};\n   var magicNum8 = 2147483562;\n   var range = function (_p0) {    return {ctor: \"_Tuple2\",_0: 0,_1: magicNum8};};\n   var magicNum7 = 2137383399;\n   var magicNum6 = 2147483563;\n   var magicNum5 = 3791;\n   var magicNum4 = 40692;\n   var magicNum3 = 52774;\n   var magicNum2 = 12211;\n   var magicNum1 = 53668;\n   var magicNum0 = 40014;\n   var generate = F2(function (_p1,seed) {    var _p2 = _p1;return _p2._0(seed);});\n   var Seed = function (a) {    return {ctor: \"Seed\",_0: a};};\n   var State = F2(function (a,b) {    return {ctor: \"State\",_0: a,_1: b};});\n   var initState = function (s$) {\n      var s = A2($Basics.max,s$,0 - s$);\n      var q = s / (magicNum6 - 1) | 0;\n      var s2 = A2($Basics._op[\"%\"],q,magicNum7 - 1);\n      var s1 = A2($Basics._op[\"%\"],s,magicNum6 - 1);\n      return A2(State,s1 + 1,s2 + 1);\n   };\n   var next = function (_p3) {\n      var _p4 = _p3;\n      var _p6 = _p4._1;\n      var _p5 = _p4._0;\n      var k$ = _p6 / magicNum3 | 0;\n      var s2$ = magicNum4 * (_p6 - k$ * magicNum3) - k$ * magicNum5;\n      var s2$$ = _U.cmp(s2$,0) < 0 ? s2$ + magicNum7 : s2$;\n      var k = _p5 / magicNum1 | 0;\n      var s1$ = magicNum0 * (_p5 - k * magicNum1) - k * magicNum2;\n      var s1$$ = _U.cmp(s1$,0) < 0 ? s1$ + magicNum6 : s1$;\n      var z = s1$$ - s2$$;\n      var z$ = _U.cmp(z,1) < 0 ? z + magicNum8 : z;\n      return {ctor: \"_Tuple2\",_0: z$,_1: A2(State,s1$$,s2$$)};\n   };\n   var split = function (_p7) {\n      var _p8 = _p7;\n      var _p11 = _p8._1;\n      var _p10 = _p8._0;\n      var _p9 = $Basics.snd(next(_p8));\n      var t1 = _p9._0;\n      var t2 = _p9._1;\n      var new_s2 = _U.eq(_p11,1) ? magicNum7 - 1 : _p11 - 1;\n      var new_s1 = _U.eq(_p10,magicNum6 - 1) ? 1 : _p10 + 1;\n      return {ctor: \"_Tuple2\",_0: A2(State,new_s1,t2),_1: A2(State,t1,new_s2)};\n   };\n   var initialSeed = function (n) {    return Seed({state: initState(n),next: next,split: split,range: range});};\n   var Generator = function (a) {    return {ctor: \"Generator\",_0: a};};\n   var andThen = F2(function (_p12,callback) {\n      var _p13 = _p12;\n      return Generator(function (seed) {\n         var _p14 = _p13._0(seed);\n         var result = _p14._0;\n         var newSeed = _p14._1;\n         var _p15 = callback(result);\n         var genB = _p15._0;\n         return genB(newSeed);\n      });\n   });\n   var map5 = F6(function (func,_p20,_p19,_p18,_p17,_p16) {\n      var _p21 = _p20;\n      var _p22 = _p19;\n      var _p23 = _p18;\n      var _p24 = _p17;\n      var _p25 = _p16;\n      return Generator(function (seed0) {\n         var _p26 = _p21._0(seed0);\n         var a = _p26._0;\n         var seed1 = _p26._1;\n         var _p27 = _p22._0(seed1);\n         var b = _p27._0;\n         var seed2 = _p27._1;\n         var _p28 = _p23._0(seed2);\n         var c = _p28._0;\n         var seed3 = _p28._1;\n         var _p29 = _p24._0(seed3);\n         var d = _p29._0;\n         var seed4 = _p29._1;\n         var _p30 = _p25._0(seed4);\n         var e = _p30._0;\n         var seed5 = _p30._1;\n         return {ctor: \"_Tuple2\",_0: A5(func,a,b,c,d,e),_1: seed5};\n      });\n   });\n   var map4 = F5(function (func,_p34,_p33,_p32,_p31) {\n      var _p35 = _p34;\n      var _p36 = _p33;\n      var _p37 = _p32;\n      var _p38 = _p31;\n      return Generator(function (seed0) {\n         var _p39 = _p35._0(seed0);\n         var a = _p39._0;\n         var seed1 = _p39._1;\n         var _p40 = _p36._0(seed1);\n         var b = _p40._0;\n         var seed2 = _p40._1;\n         var _p41 = _p37._0(seed2);\n         var c = _p41._0;\n         var seed3 = _p41._1;\n         var _p42 = _p38._0(seed3);\n         var d = _p42._0;\n         var seed4 = _p42._1;\n         return {ctor: \"_Tuple2\",_0: A4(func,a,b,c,d),_1: seed4};\n      });\n   });\n   var map3 = F4(function (func,_p45,_p44,_p43) {\n      var _p46 = _p45;\n      var _p47 = _p44;\n      var _p48 = _p43;\n      return Generator(function (seed0) {\n         var _p49 = _p46._0(seed0);\n         var a = _p49._0;\n         var seed1 = _p49._1;\n         var _p50 = _p47._0(seed1);\n         var b = _p50._0;\n         var seed2 = _p50._1;\n         var _p51 = _p48._0(seed2);\n         var c = _p51._0;\n         var seed3 = _p51._1;\n         return {ctor: \"_Tuple2\",_0: A3(func,a,b,c),_1: seed3};\n      });\n   });\n   var map2 = F3(function (func,_p53,_p52) {\n      var _p54 = _p53;\n      var _p55 = _p52;\n      return Generator(function (seed0) {\n         var _p56 = _p54._0(seed0);\n         var a = _p56._0;\n         var seed1 = _p56._1;\n         var _p57 = _p55._0(seed1);\n         var b = _p57._0;\n         var seed2 = _p57._1;\n         return {ctor: \"_Tuple2\",_0: A2(func,a,b),_1: seed2};\n      });\n   });\n   var map = F2(function (func,_p58) {\n      var _p59 = _p58;\n      return Generator(function (seed0) {    var _p60 = _p59._0(seed0);var a = _p60._0;var seed1 = _p60._1;return {ctor: \"_Tuple2\",_0: func(a),_1: seed1};});\n   });\n   var listHelp = F4(function (list,n,generate,seed) {\n      listHelp: while (true) if (_U.cmp(n,1) < 0) return {ctor: \"_Tuple2\",_0: $List.reverse(list),_1: seed}; else {\n            var _p61 = generate(seed);\n            var value = _p61._0;\n            var newSeed = _p61._1;\n            var _v19 = A2($List._op[\"::\"],value,list),_v20 = n - 1,_v21 = generate,_v22 = newSeed;\n            list = _v19;\n            n = _v20;\n            generate = _v21;\n            seed = _v22;\n            continue listHelp;\n         }\n   });\n   var list = F2(function (n,_p62) {    var _p63 = _p62;return Generator(function (seed) {    return A4(listHelp,_U.list([]),n,_p63._0,seed);});});\n   var pair = F2(function (genA,genB) {    return A3(map2,F2(function (v0,v1) {    return {ctor: \"_Tuple2\",_0: v0,_1: v1};}),genA,genB);});\n   var minInt = -2147483648;\n   var maxInt = 2147483647;\n   var iLogBase = F2(function (b,i) {    return _U.cmp(i,b) < 0 ? 1 : 1 + A2(iLogBase,b,i / b | 0);});\n   var $int = F2(function (a,b) {\n      return Generator(function (_p64) {\n         var _p65 = _p64;\n         var _p70 = _p65._0;\n         var base = 2147483561;\n         var f = F3(function (n,acc,state) {\n            f: while (true) {\n               var _p66 = n;\n               if (_p66 === 0) {\n                     return {ctor: \"_Tuple2\",_0: acc,_1: state};\n                  } else {\n                     var _p67 = _p70.next(state);\n                     var x = _p67._0;\n                     var state$ = _p67._1;\n                     var _v26 = n - 1,_v27 = x + acc * base,_v28 = state$;\n                     n = _v26;\n                     acc = _v27;\n                     state = _v28;\n                     continue f;\n                  }\n            }\n         });\n         var _p68 = _U.cmp(a,b) < 0 ? {ctor: \"_Tuple2\",_0: a,_1: b} : {ctor: \"_Tuple2\",_0: b,_1: a};\n         var lo = _p68._0;\n         var hi = _p68._1;\n         var k = hi - lo + 1;\n         var n = A2(iLogBase,base,k);\n         var _p69 = A3(f,n,1,_p70.state);\n         var v = _p69._0;\n         var state$ = _p69._1;\n         return {ctor: \"_Tuple2\",_0: lo + A2($Basics._op[\"%\"],v,k),_1: Seed(_U.update(_p70,{state: state$}))};\n      });\n   });\n   var $float = F2(function (a,b) {\n      return Generator(function (seed) {\n         var _p71 = A2(generate,A2($int,minInt,maxInt),seed);\n         var number = _p71._0;\n         var newSeed = _p71._1;\n         var negativeOneToOne = $Basics.toFloat(number) / $Basics.toFloat(maxInt - minInt);\n         var _p72 = _U.cmp(a,b) < 0 ? {ctor: \"_Tuple2\",_0: a,_1: b} : {ctor: \"_Tuple2\",_0: b,_1: a};\n         var lo = _p72._0;\n         var hi = _p72._1;\n         var scaled = (lo + hi) / 2 + (hi - lo) * negativeOneToOne;\n         return {ctor: \"_Tuple2\",_0: scaled,_1: newSeed};\n      });\n   });\n   var bool = A2(map,F2(function (x,y) {    return _U.eq(x,y);})(1),A2($int,0,1));\n   return _elm.Random.values = {_op: _op\n                               ,bool: bool\n                               ,$int: $int\n                               ,$float: $float\n                               ,list: list\n                               ,pair: pair\n                               ,map: map\n                               ,map2: map2\n                               ,map3: map3\n                               ,map4: map4\n                               ,map5: map5\n                               ,andThen: andThen\n                               ,minInt: minInt\n                               ,maxInt: maxInt\n                               ,generate: generate\n                               ,initialSeed: initialSeed};\n};\nElm.Window = Elm.Window || {};\nElm.Window.make = function (_elm) {\n   \"use strict\";\n   _elm.Window = _elm.Window || {};\n   if (_elm.Window.values) return _elm.Window.values;\n   var _U = Elm.Native.Utils.make(_elm),$Basics = Elm.Basics.make(_elm),$Native$Window = Elm.Native.Window.make(_elm),$Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var dimensions = $Native$Window.dimensions;\n   var width = A2($Signal.map,$Basics.fst,dimensions);\n   var height = A2($Signal.map,$Basics.snd,dimensions);\n   return _elm.Window.values = {_op: _op,dimensions: dimensions,width: width,height: height};\n};\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":1}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === \"object\" && x !== null;\n};\n\n},{}],4:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n\n},{}],5:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook.js\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n        } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous)\n            if (propValue.hook) {\n                propValue.hook(node,\n                    propName,\n                    previous ? previous[propName] : undefined)\n            }\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, propName, propValue, previous) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue)\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{\"../vnode/is-vhook.js\":13,\"is-object\":3}],6:[function(require,module,exports){\nvar document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"../vnode/is-vnode.js\")\nvar isVText = require(\"../vnode/is-vtext.js\")\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar handleThunk = require(\"../vnode/handle-thunk.js\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{\"../vnode/handle-thunk.js\":11,\"../vnode/is-vnode.js\":14,\"../vnode/is-vtext.js\":15,\"../vnode/is-widget.js\":16,\"./apply-properties\":5,\"global/document\":2}],7:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],8:[function(require,module,exports){\nvar applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar VPatch = require(\"../vnode/vpatch.js\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    var updating = updateWidget(leftVNode, widget)\n    var newNode\n\n    if (updating) {\n        newNode = widget.update(leftVNode, domNode) || domNode\n    } else {\n        newNode = render(widget, renderOptions)\n    }\n\n    var parentNode = domNode.parentNode\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    if (!updating) {\n        destroyWidget(domNode, leftVNode)\n    }\n\n    return newNode\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, moves) {\n    var childNodes = domNode.childNodes\n    var keyMap = {}\n    var node\n    var remove\n    var insert\n\n    for (var i = 0; i < moves.removes.length; i++) {\n        remove = moves.removes[i]\n        node = childNodes[remove.from]\n        if (remove.key) {\n            keyMap[remove.key] = node\n        }\n        domNode.removeChild(node)\n    }\n\n    var length = childNodes.length\n    for (var j = 0; j < moves.inserts.length; j++) {\n        insert = moves.inserts[j]\n        node = keyMap[insert.key]\n        // this is the weirdest bug i've ever seen in webkit\n        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{\"../vnode/is-widget.js\":16,\"../vnode/vpatch.js\":19,\"./apply-properties\":5,\"./create-element\":6,\"./update-widget\":10}],9:[function(require,module,exports){\nvar document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{\"./dom-index\":7,\"./patch-op\":8,\"global/document\":2,\"x-is-array\":4}],10:[function(require,module,exports){\nvar isWidget = require(\"../vnode/is-widget.js\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{\"../vnode/is-widget.js\":16}],11:[function(require,module,exports){\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n\n},{\"./is-thunk\":12,\"./is-vnode\":14,\"./is-vtext\":15,\"./is-widget\":16}],12:[function(require,module,exports){\nmodule.exports = isThunk\r\n\r\nfunction isThunk(t) {\r\n    return t && t.type === \"Thunk\"\r\n}\r\n\n},{}],13:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook &&\n      (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") ||\n       typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"))\n}\n\n},{}],14:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n\n},{\"./version\":17}],15:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n\n},{\"./version\":17}],16:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n\n},{}],17:[function(require,module,exports){\nmodule.exports = \"2\"\n\n},{}],18:[function(require,module,exports){\nvar version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var hasThunks = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property) && property.unhook) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!hasThunks && child.hasThunks) {\n                hasThunks = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hasThunks = hasThunks\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n\n},{\"./is-thunk\":12,\"./is-vhook\":13,\"./is-vnode\":14,\"./is-widget\":16,\"./version\":17}],19:[function(require,module,exports){\nvar version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n\n},{\"./version\":17}],20:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n\n},{\"./version\":17}],21:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook\")\n\nmodule.exports = diffProps\n\nfunction diffProps(a, b) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (aValue === bValue) {\n            continue\n        } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            } else if (isHook(bValue)) {\n                 diff = diff || {}\n                 diff[aKey] = bValue\n            } else {\n                var objectDiff = diffProps(aValue, bValue)\n                if (objectDiff) {\n                    diff = diff || {}\n                    diff[aKey] = objectDiff\n                }\n            }\n        } else {\n            diff = diff || {}\n            diff[aKey] = bValue\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value)\n  } else if (value.__proto__) {\n    return value.__proto__\n  } else if (value.constructor) {\n    return value.constructor.prototype\n  }\n}\n\n},{\"../vnode/is-vhook\":13,\"is-object\":3}],22:[function(require,module,exports){\nvar isArray = require(\"x-is-array\")\n\nvar VPatch = require(\"../vnode/vpatch\")\nvar isVNode = require(\"../vnode/is-vnode\")\nvar isVText = require(\"../vnode/is-vtext\")\nvar isWidget = require(\"../vnode/is-widget\")\nvar isThunk = require(\"../vnode/is-thunk\")\nvar handleThunk = require(\"../vnode/handle-thunk\")\n\nvar diffProps = require(\"./diff-props\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        return\n    }\n\n    var apply = patch[index]\n    var applyClear = false\n\n    if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (b == null) {\n\n        // If a is a widget we will add a remove patch for it\n        // Otherwise any child widgets/hooks must be destroyed.\n        // This prevents adding two remove patches for a widget.\n        if (!isWidget(a)) {\n            clearState(a, patch, index)\n            apply = patch[index]\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                applyClear = true\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            applyClear = true\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            applyClear = true\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        if (!isWidget(a)) {\n            applyClear = true\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n\n    if (applyClear) {\n        clearState(a, patch, index)\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var orderedSet = reorder(aChildren, b.children)\n    var bChildren = orderedSet.children\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (orderedSet.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(\n            VPatch.ORDER,\n            a,\n            orderedSet.moves\n        ))\n    }\n\n    return apply\n}\n\nfunction clearState(vNode, patch, index) {\n    // TODO: Make this a single walk, not two\n    unhook(vNode, patch, index)\n    destroyWidgets(vNode, patch, index)\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(VPatch.REMOVE, vNode, null)\n            )\n        }\n    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b)\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true\n        }\n    }\n\n    return false\n}\n\n// Execute hooks when two nodes are identical\nfunction unhook(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(\n                    VPatch.PROPS,\n                    vNode,\n                    undefinedKeys(vNode.hooks)\n                )\n            )\n        }\n\n        if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                unhook(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\nfunction undefinedKeys(obj) {\n    var result = {}\n\n    for (var key in obj) {\n        result[key] = undefined\n    }\n\n    return result\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n    // O(M) time, O(M) memory\n    var bChildIndex = keyIndex(bChildren)\n    var bKeys = bChildIndex.keys\n    var bFree = bChildIndex.free\n\n    if (bFree.length === bChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(N) time, O(N) memory\n    var aChildIndex = keyIndex(aChildren)\n    var aKeys = aChildIndex.keys\n    var aFree = aChildIndex.free\n\n    if (aFree.length === aChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(MAX(N, M)) memory\n    var newChildren = []\n\n    var freeIndex = 0\n    var freeCount = bFree.length\n    var deletedItems = 0\n\n    // Iterate through a and match a node in b\n    // O(N) time,\n    for (var i = 0 ; i < aChildren.length; i++) {\n        var aItem = aChildren[i]\n        var itemIndex\n\n        if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n                // Match up the old keys\n                itemIndex = bKeys[aItem.key]\n                newChildren.push(bChildren[itemIndex])\n\n            } else {\n                // Remove old keyed items\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n                itemIndex = bFree[freeIndex++]\n                newChildren.push(bChildren[itemIndex])\n            } else {\n                // There are no free items in b to match with\n                // the free items in a, so the extra free nodes\n                // are deleted.\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        }\n    }\n\n    var lastFreeIndex = freeIndex >= bFree.length ?\n        bChildren.length :\n        bFree[freeIndex]\n\n    // Iterate through b and append any new keys\n    // O(M) time\n    for (var j = 0; j < bChildren.length; j++) {\n        var newItem = bChildren[j]\n\n        if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n                // Add any new keyed items\n                // We are adding new items to the end and then sorting them\n                // in place. In future we should insert new items in place.\n                newChildren.push(newItem)\n            }\n        } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem)\n        }\n    }\n\n    var simulate = newChildren.slice()\n    var simulateIndex = 0\n    var removes = []\n    var inserts = []\n    var simulateItem\n\n    for (var k = 0; k < bChildren.length;) {\n        var wantedItem = bChildren[k]\n        simulateItem = simulate[simulateIndex]\n\n        // remove items\n        while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null))\n            simulateItem = simulate[simulateIndex]\n        }\n\n        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n                if (simulateItem && simulateItem.key) {\n                    // if an insert doesn't put this key in place, it needs to move\n                    if (bKeys[simulateItem.key] !== k + 1) {\n                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n                        simulateItem = simulate[simulateIndex]\n                        // if the remove didn't put the wanted item in place, we need to insert it\n                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                            inserts.push({key: wantedItem.key, to: k})\n                        }\n                        // items are matching, so skip ahead\n                        else {\n                            simulateIndex++\n                        }\n                    }\n                    else {\n                        inserts.push({key: wantedItem.key, to: k})\n                    }\n                }\n                else {\n                    inserts.push({key: wantedItem.key, to: k})\n                }\n                k++\n            }\n            // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n            }\n        }\n        else {\n            simulateIndex++\n            k++\n        }\n    }\n\n    // remove all the remaining nodes from simulate\n    while(simulateIndex < simulate.length) {\n        simulateItem = simulate[simulateIndex]\n        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n    }\n\n    // If the only moves we have are deletes then we can just\n    // let the delete patch remove these items.\n    if (removes.length === deletedItems && !inserts.length) {\n        return {\n            children: newChildren,\n            moves: null\n        }\n    }\n\n    return {\n        children: newChildren,\n        moves: {\n            removes: removes,\n            inserts: inserts\n        }\n    }\n}\n\nfunction remove(arr, index, key) {\n    arr.splice(index, 1)\n\n    return {\n        from: index,\n        key: key\n    }\n}\n\nfunction keyIndex(children) {\n    var keys = {}\n    var free = []\n    var length = children.length\n\n    for (var i = 0; i < length; i++) {\n        var child = children[i]\n\n        if (child.key) {\n            keys[child.key] = i\n        } else {\n            free.push(i)\n        }\n    }\n\n    return {\n        keys: keys,     // A hash of key name to index\n        free: free,     // An array of unkeyed item indices\n    }\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{\"../vnode/handle-thunk\":11,\"../vnode/is-thunk\":12,\"../vnode/is-vnode\":14,\"../vnode/is-vtext\":15,\"../vnode/is-widget\":16,\"../vnode/vpatch\":19,\"./diff-props\":21,\"x-is-array\":4}],23:[function(require,module,exports){\nvar VNode = require('virtual-dom/vnode/vnode');\nvar VText = require('virtual-dom/vnode/vtext');\nvar diff = require('virtual-dom/vtree/diff');\nvar patch = require('virtual-dom/vdom/patch');\nvar createElement = require('virtual-dom/vdom/create-element');\nvar isHook = require(\"virtual-dom/vnode/is-vhook\");\n\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm)\n{\n\telm.Native = elm.Native || {};\n\telm.Native.VirtualDom = elm.Native.VirtualDom || {};\n\tif (elm.Native.VirtualDom.values)\n\t{\n\t\treturn elm.Native.VirtualDom.values;\n\t}\n\n\tvar Element = Elm.Native.Graphics.Element.make(elm);\n\tvar Json = Elm.Native.Json.make(elm);\n\tvar List = Elm.Native.List.make(elm);\n\tvar Signal = Elm.Native.Signal.make(elm);\n\tvar Utils = Elm.Native.Utils.make(elm);\n\n\tvar ATTRIBUTE_KEY = 'UniqueNameThatOthersAreVeryUnlikelyToUse';\n\n\n\n\t// VIRTUAL DOM NODES\n\n\n\tfunction text(string)\n\t{\n\t\treturn new VText(string);\n\t}\n\n\tfunction node(name)\n\t{\n\t\treturn F2(function(propertyList, contents) {\n\t\t\treturn makeNode(name, propertyList, contents);\n\t\t});\n\t}\n\n\n\t// BUILD VIRTUAL DOME NODES\n\n\n\tfunction makeNode(name, propertyList, contents)\n\t{\n\t\tvar props = listToProperties(propertyList);\n\n\t\tvar key, namespace;\n\t\t// support keys\n\t\tif (props.key !== undefined)\n\t\t{\n\t\t\tkey = props.key;\n\t\t\tprops.key = undefined;\n\t\t}\n\n\t\t// support namespace\n\t\tif (props.namespace !== undefined)\n\t\t{\n\t\t\tnamespace = props.namespace;\n\t\t\tprops.namespace = undefined;\n\t\t}\n\n\t\t// ensure that setting text of an input does not move the cursor\n\t\tvar useSoftSet =\n\t\t\t(name === 'input' || name === 'textarea')\n\t\t\t&& props.value !== undefined\n\t\t\t&& !isHook(props.value);\n\n\t\tif (useSoftSet)\n\t\t{\n\t\t\tprops.value = SoftSetHook(props.value);\n\t\t}\n\n\t\treturn new VNode(name, props, List.toArray(contents), key, namespace);\n\t}\n\n\tfunction listToProperties(list)\n\t{\n\t\tvar object = {};\n\t\twhile (list.ctor !== '[]')\n\t\t{\n\t\t\tvar entry = list._0;\n\t\t\tif (entry.key === ATTRIBUTE_KEY)\n\t\t\t{\n\t\t\t\tobject.attributes = object.attributes || {};\n\t\t\t\tobject.attributes[entry.value.attrKey] = entry.value.attrValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tobject[entry.key] = entry.value;\n\t\t\t}\n\t\t\tlist = list._1;\n\t\t}\n\t\treturn object;\n\t}\n\n\n\n\t// PROPERTIES AND ATTRIBUTES\n\n\n\tfunction property(key, value)\n\t{\n\t\treturn {\n\t\t\tkey: key,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tfunction attribute(key, value)\n\t{\n\t\treturn {\n\t\t\tkey: ATTRIBUTE_KEY,\n\t\t\tvalue: {\n\t\t\t\tattrKey: key,\n\t\t\t\tattrValue: value\n\t\t\t}\n\t\t};\n\t}\n\n\n\n\t// NAMESPACED ATTRIBUTES\n\n\n\tfunction attributeNS(namespace, key, value)\n\t{\n\t\treturn {\n\t\t\tkey: key,\n\t\t\tvalue: new AttributeHook(namespace, key, value)\n\t\t};\n\t}\n\n\tfunction AttributeHook(namespace, key, value)\n\t{\n\t\tif (!(this instanceof AttributeHook))\n\t\t{\n\t\t\treturn new AttributeHook(namespace, key, value);\n\t\t}\n\n\t\tthis.namespace = namespace;\n\t\tthis.key = key;\n\t\tthis.value = value;\n\t}\n\n\tAttributeHook.prototype.hook = function (node, prop, prev)\n\t{\n\t\tif (prev\n\t\t\t&& prev.type === 'AttributeHook'\n\t\t\t&& prev.value === this.value\n\t\t\t&& prev.namespace === this.namespace)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnode.setAttributeNS(this.namespace, prop, this.value);\n\t};\n\n\tAttributeHook.prototype.unhook = function (node, prop, next)\n\t{\n\t\tif (next\n\t\t\t&& next.type === 'AttributeHook'\n\t\t\t&& next.namespace === this.namespace)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnode.removeAttributeNS(this.namespace, this.key);\n\t};\n\n\tAttributeHook.prototype.type = 'AttributeHook';\n\n\n\n\t// EVENTS\n\n\n\tfunction on(name, options, decoder, createMessage)\n\t{\n\t\tfunction eventHandler(event)\n\t\t{\n\t\t\tvar value = A2(Json.runDecoderValue, decoder, event);\n\t\t\tif (value.ctor === 'Ok')\n\t\t\t{\n\t\t\t\tif (options.stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t\tif (options.preventDefault)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tSignal.sendMessage(createMessage(value._0));\n\t\t\t}\n\t\t}\n\t\treturn property('on' + name, eventHandler);\n\t}\n\n\tfunction SoftSetHook(value)\n\t{\n\t\tif (!(this instanceof SoftSetHook))\n\t\t{\n\t\t\treturn new SoftSetHook(value);\n\t\t}\n\n\t\tthis.value = value;\n\t}\n\n\tSoftSetHook.prototype.hook = function (node, propertyName)\n\t{\n\t\tif (node[propertyName] !== this.value)\n\t\t{\n\t\t\tnode[propertyName] = this.value;\n\t\t}\n\t};\n\n\n\n\t// INTEGRATION WITH ELEMENTS\n\n\n\tfunction ElementWidget(element)\n\t{\n\t\tthis.element = element;\n\t}\n\n\tElementWidget.prototype.type = \"Widget\";\n\n\tElementWidget.prototype.init = function init()\n\t{\n\t\treturn Element.render(this.element);\n\t};\n\n\tElementWidget.prototype.update = function update(previous, node)\n\t{\n\t\treturn Element.update(node, previous.element, this.element);\n\t};\n\n\tfunction fromElement(element)\n\t{\n\t\treturn new ElementWidget(element);\n\t}\n\n\tfunction toElement(width, height, html)\n\t{\n\t\treturn A3(Element.newElement, width, height, {\n\t\t\tctor: 'Custom',\n\t\t\ttype: 'evancz/elm-html',\n\t\t\trender: render,\n\t\t\tupdate: update,\n\t\t\tmodel: html\n\t\t});\n\t}\n\n\n\n\t// RENDER AND UPDATE\n\n\n\tfunction render(model)\n\t{\n\t\tvar element = Element.createNode('div');\n\t\telement.appendChild(createElement(model));\n\t\treturn element;\n\t}\n\n\tfunction update(node, oldModel, newModel)\n\t{\n\t\tupdateAndReplace(node.firstChild, oldModel, newModel);\n\t\treturn node;\n\t}\n\n\tfunction updateAndReplace(node, oldModel, newModel)\n\t{\n\t\tvar patches = diff(oldModel, newModel);\n\t\tvar newNode = patch(node, patches);\n\t\treturn newNode;\n\t}\n\n\n\n\t// LAZINESS\n\n\n\tfunction lazyRef(fn, a)\n\t{\n\t\tfunction thunk()\n\t\t{\n\t\t\treturn fn(a);\n\t\t}\n\t\treturn new Thunk(fn, [a], thunk);\n\t}\n\n\tfunction lazyRef2(fn, a, b)\n\t{\n\t\tfunction thunk()\n\t\t{\n\t\t\treturn A2(fn, a, b);\n\t\t}\n\t\treturn new Thunk(fn, [a,b], thunk);\n\t}\n\n\tfunction lazyRef3(fn, a, b, c)\n\t{\n\t\tfunction thunk()\n\t\t{\n\t\t\treturn A3(fn, a, b, c);\n\t\t}\n\t\treturn new Thunk(fn, [a,b,c], thunk);\n\t}\n\n\tfunction Thunk(fn, args, thunk)\n\t{\n\t\t/* public (used by VirtualDom.js) */\n\t\tthis.vnode = null;\n\t\tthis.key = undefined;\n\n\t\t/* private */\n\t\tthis.fn = fn;\n\t\tthis.args = args;\n\t\tthis.thunk = thunk;\n\t}\n\n\tThunk.prototype.type = \"Thunk\";\n\tThunk.prototype.render = renderThunk;\n\n\tfunction shouldUpdate(current, previous)\n\t{\n\t\tif (current.fn !== previous.fn)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\t// if it's the same function, we know the number of args must match\n\t\tvar cargs = current.args;\n\t\tvar pargs = previous.args;\n\n\t\tfor (var i = cargs.length; i--; )\n\t\t{\n\t\t\tif (cargs[i] !== pargs[i])\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction renderThunk(previous)\n\t{\n\t\tif (previous == null || shouldUpdate(this, previous))\n\t\t{\n\t\t\treturn this.thunk();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn previous.vnode;\n\t\t}\n\t}\n\n\n\treturn elm.Native.VirtualDom.values = Elm.Native.VirtualDom.values = {\n\t\tnode: node,\n\t\ttext: text,\n\t\ton: F4(on),\n\n\t\tproperty: F2(property),\n\t\tattribute: F2(attribute),\n\t\tattributeNS: F3(attributeNS),\n\n\t\tlazy: F2(lazyRef),\n\t\tlazy2: F3(lazyRef2),\n\t\tlazy3: F4(lazyRef3),\n\n\t\ttoElement: F3(toElement),\n\t\tfromElement: fromElement,\n\n\t\trender: createElement,\n\t\tupdateAndReplace: updateAndReplace\n\t};\n};\n\n},{\"virtual-dom/vdom/create-element\":6,\"virtual-dom/vdom/patch\":9,\"virtual-dom/vnode/is-vhook\":13,\"virtual-dom/vnode/vnode\":18,\"virtual-dom/vnode/vtext\":20,\"virtual-dom/vtree/diff\":22}]},{},[23]);\n\nElm.VirtualDom = Elm.VirtualDom || {};\nElm.VirtualDom.make = function (_elm) {\n   \"use strict\";\n   _elm.VirtualDom = _elm.VirtualDom || {};\n   if (_elm.VirtualDom.values) return _elm.VirtualDom.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var _op = {};\n   var lazy3 = $Native$VirtualDom.lazy3;\n   var lazy2 = $Native$VirtualDom.lazy2;\n   var lazy = $Native$VirtualDom.lazy;\n   var defaultOptions = {stopPropagation: false,preventDefault: false};\n   var Options = F2(function (a,b) {    return {stopPropagation: a,preventDefault: b};});\n   var onWithOptions = $Native$VirtualDom.on;\n   var on = F3(function (eventName,decoder,toMessage) {    return A4($Native$VirtualDom.on,eventName,defaultOptions,decoder,toMessage);});\n   var attributeNS = $Native$VirtualDom.attributeNS;\n   var attribute = $Native$VirtualDom.attribute;\n   var property = $Native$VirtualDom.property;\n   var Property = {ctor: \"Property\"};\n   var fromElement = $Native$VirtualDom.fromElement;\n   var toElement = $Native$VirtualDom.toElement;\n   var text = $Native$VirtualDom.text;\n   var node = $Native$VirtualDom.node;\n   var Node = {ctor: \"Node\"};\n   return _elm.VirtualDom.values = {_op: _op\n                                   ,text: text\n                                   ,node: node\n                                   ,toElement: toElement\n                                   ,fromElement: fromElement\n                                   ,property: property\n                                   ,attribute: attribute\n                                   ,attributeNS: attributeNS\n                                   ,on: on\n                                   ,onWithOptions: onWithOptions\n                                   ,defaultOptions: defaultOptions\n                                   ,lazy: lazy\n                                   ,lazy2: lazy2\n                                   ,lazy3: lazy3\n                                   ,Options: Options};\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values) return _elm.Html.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var _op = {};\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node(\"body\");\n   var section = node(\"section\");\n   var nav = node(\"nav\");\n   var article = node(\"article\");\n   var aside = node(\"aside\");\n   var h1 = node(\"h1\");\n   var h2 = node(\"h2\");\n   var h3 = node(\"h3\");\n   var h4 = node(\"h4\");\n   var h5 = node(\"h5\");\n   var h6 = node(\"h6\");\n   var header = node(\"header\");\n   var footer = node(\"footer\");\n   var address = node(\"address\");\n   var main$ = node(\"main\");\n   var p = node(\"p\");\n   var hr = node(\"hr\");\n   var pre = node(\"pre\");\n   var blockquote = node(\"blockquote\");\n   var ol = node(\"ol\");\n   var ul = node(\"ul\");\n   var li = node(\"li\");\n   var dl = node(\"dl\");\n   var dt = node(\"dt\");\n   var dd = node(\"dd\");\n   var figure = node(\"figure\");\n   var figcaption = node(\"figcaption\");\n   var div = node(\"div\");\n   var a = node(\"a\");\n   var em = node(\"em\");\n   var strong = node(\"strong\");\n   var small = node(\"small\");\n   var s = node(\"s\");\n   var cite = node(\"cite\");\n   var q = node(\"q\");\n   var dfn = node(\"dfn\");\n   var abbr = node(\"abbr\");\n   var time = node(\"time\");\n   var code = node(\"code\");\n   var $var = node(\"var\");\n   var samp = node(\"samp\");\n   var kbd = node(\"kbd\");\n   var sub = node(\"sub\");\n   var sup = node(\"sup\");\n   var i = node(\"i\");\n   var b = node(\"b\");\n   var u = node(\"u\");\n   var mark = node(\"mark\");\n   var ruby = node(\"ruby\");\n   var rt = node(\"rt\");\n   var rp = node(\"rp\");\n   var bdi = node(\"bdi\");\n   var bdo = node(\"bdo\");\n   var span = node(\"span\");\n   var br = node(\"br\");\n   var wbr = node(\"wbr\");\n   var ins = node(\"ins\");\n   var del = node(\"del\");\n   var img = node(\"img\");\n   var iframe = node(\"iframe\");\n   var embed = node(\"embed\");\n   var object = node(\"object\");\n   var param = node(\"param\");\n   var video = node(\"video\");\n   var audio = node(\"audio\");\n   var source = node(\"source\");\n   var track = node(\"track\");\n   var canvas = node(\"canvas\");\n   var svg = node(\"svg\");\n   var math = node(\"math\");\n   var table = node(\"table\");\n   var caption = node(\"caption\");\n   var colgroup = node(\"colgroup\");\n   var col = node(\"col\");\n   var tbody = node(\"tbody\");\n   var thead = node(\"thead\");\n   var tfoot = node(\"tfoot\");\n   var tr = node(\"tr\");\n   var td = node(\"td\");\n   var th = node(\"th\");\n   var form = node(\"form\");\n   var fieldset = node(\"fieldset\");\n   var legend = node(\"legend\");\n   var label = node(\"label\");\n   var input = node(\"input\");\n   var button = node(\"button\");\n   var select = node(\"select\");\n   var datalist = node(\"datalist\");\n   var optgroup = node(\"optgroup\");\n   var option = node(\"option\");\n   var textarea = node(\"textarea\");\n   var keygen = node(\"keygen\");\n   var output = node(\"output\");\n   var progress = node(\"progress\");\n   var meter = node(\"meter\");\n   var details = node(\"details\");\n   var summary = node(\"summary\");\n   var menuitem = node(\"menuitem\");\n   var menu = node(\"menu\");\n   return _elm.Html.values = {_op: _op\n                             ,node: node\n                             ,text: text\n                             ,toElement: toElement\n                             ,fromElement: fromElement\n                             ,body: body\n                             ,section: section\n                             ,nav: nav\n                             ,article: article\n                             ,aside: aside\n                             ,h1: h1\n                             ,h2: h2\n                             ,h3: h3\n                             ,h4: h4\n                             ,h5: h5\n                             ,h6: h6\n                             ,header: header\n                             ,footer: footer\n                             ,address: address\n                             ,main$: main$\n                             ,p: p\n                             ,hr: hr\n                             ,pre: pre\n                             ,blockquote: blockquote\n                             ,ol: ol\n                             ,ul: ul\n                             ,li: li\n                             ,dl: dl\n                             ,dt: dt\n                             ,dd: dd\n                             ,figure: figure\n                             ,figcaption: figcaption\n                             ,div: div\n                             ,a: a\n                             ,em: em\n                             ,strong: strong\n                             ,small: small\n                             ,s: s\n                             ,cite: cite\n                             ,q: q\n                             ,dfn: dfn\n                             ,abbr: abbr\n                             ,time: time\n                             ,code: code\n                             ,$var: $var\n                             ,samp: samp\n                             ,kbd: kbd\n                             ,sub: sub\n                             ,sup: sup\n                             ,i: i\n                             ,b: b\n                             ,u: u\n                             ,mark: mark\n                             ,ruby: ruby\n                             ,rt: rt\n                             ,rp: rp\n                             ,bdi: bdi\n                             ,bdo: bdo\n                             ,span: span\n                             ,br: br\n                             ,wbr: wbr\n                             ,ins: ins\n                             ,del: del\n                             ,img: img\n                             ,iframe: iframe\n                             ,embed: embed\n                             ,object: object\n                             ,param: param\n                             ,video: video\n                             ,audio: audio\n                             ,source: source\n                             ,track: track\n                             ,canvas: canvas\n                             ,svg: svg\n                             ,math: math\n                             ,table: table\n                             ,caption: caption\n                             ,colgroup: colgroup\n                             ,col: col\n                             ,tbody: tbody\n                             ,thead: thead\n                             ,tfoot: tfoot\n                             ,tr: tr\n                             ,td: td\n                             ,th: th\n                             ,form: form\n                             ,fieldset: fieldset\n                             ,legend: legend\n                             ,label: label\n                             ,input: input\n                             ,button: button\n                             ,select: select\n                             ,datalist: datalist\n                             ,optgroup: optgroup\n                             ,option: option\n                             ,textarea: textarea\n                             ,keygen: keygen\n                             ,output: output\n                             ,progress: progress\n                             ,meter: meter\n                             ,details: details\n                             ,summary: summary\n                             ,menuitem: menuitem\n                             ,menu: menu};\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values) return _elm.Html.Attributes.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var _op = {};\n   var attribute = $VirtualDom.attribute;\n   var contextmenu = function (value) {    return A2(attribute,\"contextmenu\",value);};\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,string) {    return A2(property,name,$Json$Encode.string(string));});\n   var $class = function (name) {    return A2(stringProperty,\"className\",name);};\n   var id = function (name) {    return A2(stringProperty,\"id\",name);};\n   var title = function (name) {    return A2(stringProperty,\"title\",name);};\n   var accesskey = function ($char) {    return A2(stringProperty,\"accessKey\",$String.fromChar($char));};\n   var dir = function (value) {    return A2(stringProperty,\"dir\",value);};\n   var draggable = function (value) {    return A2(stringProperty,\"draggable\",value);};\n   var dropzone = function (value) {    return A2(stringProperty,\"dropzone\",value);};\n   var itemprop = function (value) {    return A2(stringProperty,\"itemprop\",value);};\n   var lang = function (value) {    return A2(stringProperty,\"lang\",value);};\n   var tabindex = function (n) {    return A2(stringProperty,\"tabIndex\",$Basics.toString(n));};\n   var charset = function (value) {    return A2(stringProperty,\"charset\",value);};\n   var content = function (value) {    return A2(stringProperty,\"content\",value);};\n   var httpEquiv = function (value) {    return A2(stringProperty,\"httpEquiv\",value);};\n   var language = function (value) {    return A2(stringProperty,\"language\",value);};\n   var src = function (value) {    return A2(stringProperty,\"src\",value);};\n   var height = function (value) {    return A2(stringProperty,\"height\",$Basics.toString(value));};\n   var width = function (value) {    return A2(stringProperty,\"width\",$Basics.toString(value));};\n   var alt = function (value) {    return A2(stringProperty,\"alt\",value);};\n   var preload = function (value) {    return A2(stringProperty,\"preload\",value);};\n   var poster = function (value) {    return A2(stringProperty,\"poster\",value);};\n   var kind = function (value) {    return A2(stringProperty,\"kind\",value);};\n   var srclang = function (value) {    return A2(stringProperty,\"srclang\",value);};\n   var sandbox = function (value) {    return A2(stringProperty,\"sandbox\",value);};\n   var srcdoc = function (value) {    return A2(stringProperty,\"srcdoc\",value);};\n   var type$ = function (value) {    return A2(stringProperty,\"type\",value);};\n   var value = function (value) {    return A2(stringProperty,\"value\",value);};\n   var placeholder = function (value) {    return A2(stringProperty,\"placeholder\",value);};\n   var accept = function (value) {    return A2(stringProperty,\"accept\",value);};\n   var acceptCharset = function (value) {    return A2(stringProperty,\"acceptCharset\",value);};\n   var action = function (value) {    return A2(stringProperty,\"action\",value);};\n   var autocomplete = function (bool) {    return A2(stringProperty,\"autocomplete\",bool ? \"on\" : \"off\");};\n   var autosave = function (value) {    return A2(stringProperty,\"autosave\",value);};\n   var enctype = function (value) {    return A2(stringProperty,\"enctype\",value);};\n   var formaction = function (value) {    return A2(stringProperty,\"formAction\",value);};\n   var list = function (value) {    return A2(stringProperty,\"list\",value);};\n   var minlength = function (n) {    return A2(stringProperty,\"minLength\",$Basics.toString(n));};\n   var maxlength = function (n) {    return A2(stringProperty,\"maxLength\",$Basics.toString(n));};\n   var method = function (value) {    return A2(stringProperty,\"method\",value);};\n   var name = function (value) {    return A2(stringProperty,\"name\",value);};\n   var pattern = function (value) {    return A2(stringProperty,\"pattern\",value);};\n   var size = function (n) {    return A2(stringProperty,\"size\",$Basics.toString(n));};\n   var $for = function (value) {    return A2(stringProperty,\"htmlFor\",value);};\n   var form = function (value) {    return A2(stringProperty,\"form\",value);};\n   var max = function (value) {    return A2(stringProperty,\"max\",value);};\n   var min = function (value) {    return A2(stringProperty,\"min\",value);};\n   var step = function (n) {    return A2(stringProperty,\"step\",n);};\n   var cols = function (n) {    return A2(stringProperty,\"cols\",$Basics.toString(n));};\n   var rows = function (n) {    return A2(stringProperty,\"rows\",$Basics.toString(n));};\n   var wrap = function (value) {    return A2(stringProperty,\"wrap\",value);};\n   var usemap = function (value) {    return A2(stringProperty,\"useMap\",value);};\n   var shape = function (value) {    return A2(stringProperty,\"shape\",value);};\n   var coords = function (value) {    return A2(stringProperty,\"coords\",value);};\n   var challenge = function (value) {    return A2(stringProperty,\"challenge\",value);};\n   var keytype = function (value) {    return A2(stringProperty,\"keytype\",value);};\n   var align = function (value) {    return A2(stringProperty,\"align\",value);};\n   var cite = function (value) {    return A2(stringProperty,\"cite\",value);};\n   var href = function (value) {    return A2(stringProperty,\"href\",value);};\n   var target = function (value) {    return A2(stringProperty,\"target\",value);};\n   var downloadAs = function (value) {    return A2(stringProperty,\"download\",value);};\n   var hreflang = function (value) {    return A2(stringProperty,\"hreflang\",value);};\n   var media = function (value) {    return A2(stringProperty,\"media\",value);};\n   var ping = function (value) {    return A2(stringProperty,\"ping\",value);};\n   var rel = function (value) {    return A2(stringProperty,\"rel\",value);};\n   var datetime = function (value) {    return A2(stringProperty,\"datetime\",value);};\n   var pubdate = function (value) {    return A2(stringProperty,\"pubdate\",value);};\n   var start = function (n) {    return A2(stringProperty,\"start\",$Basics.toString(n));};\n   var colspan = function (n) {    return A2(stringProperty,\"colSpan\",$Basics.toString(n));};\n   var headers = function (value) {    return A2(stringProperty,\"headers\",value);};\n   var rowspan = function (n) {    return A2(stringProperty,\"rowSpan\",$Basics.toString(n));};\n   var scope = function (value) {    return A2(stringProperty,\"scope\",value);};\n   var manifest = function (value) {    return A2(stringProperty,\"manifest\",value);};\n   var boolProperty = F2(function (name,bool) {    return A2(property,name,$Json$Encode.bool(bool));});\n   var hidden = function (bool) {    return A2(boolProperty,\"hidden\",bool);};\n   var contenteditable = function (bool) {    return A2(boolProperty,\"contentEditable\",bool);};\n   var spellcheck = function (bool) {    return A2(boolProperty,\"spellcheck\",bool);};\n   var async = function (bool) {    return A2(boolProperty,\"async\",bool);};\n   var defer = function (bool) {    return A2(boolProperty,\"defer\",bool);};\n   var scoped = function (bool) {    return A2(boolProperty,\"scoped\",bool);};\n   var autoplay = function (bool) {    return A2(boolProperty,\"autoplay\",bool);};\n   var controls = function (bool) {    return A2(boolProperty,\"controls\",bool);};\n   var loop = function (bool) {    return A2(boolProperty,\"loop\",bool);};\n   var $default = function (bool) {    return A2(boolProperty,\"default\",bool);};\n   var seamless = function (bool) {    return A2(boolProperty,\"seamless\",bool);};\n   var checked = function (bool) {    return A2(boolProperty,\"checked\",bool);};\n   var selected = function (bool) {    return A2(boolProperty,\"selected\",bool);};\n   var autofocus = function (bool) {    return A2(boolProperty,\"autofocus\",bool);};\n   var disabled = function (bool) {    return A2(boolProperty,\"disabled\",bool);};\n   var multiple = function (bool) {    return A2(boolProperty,\"multiple\",bool);};\n   var novalidate = function (bool) {    return A2(boolProperty,\"noValidate\",bool);};\n   var readonly = function (bool) {    return A2(boolProperty,\"readOnly\",bool);};\n   var required = function (bool) {    return A2(boolProperty,\"required\",bool);};\n   var ismap = function (value) {    return A2(boolProperty,\"isMap\",value);};\n   var download = function (bool) {    return A2(boolProperty,\"download\",bool);};\n   var reversed = function (bool) {    return A2(boolProperty,\"reversed\",bool);};\n   var classList = function (list) {    return $class(A2($String.join,\" \",A2($List.map,$Basics.fst,A2($List.filter,$Basics.snd,list))));};\n   var style = function (props) {\n      return A2(property,\n      \"style\",\n      $Json$Encode.object(A2($List.map,function (_p0) {    var _p1 = _p0;return {ctor: \"_Tuple2\",_0: _p1._0,_1: $Json$Encode.string(_p1._1)};},props)));\n   };\n   var key = function (k) {    return A2(stringProperty,\"key\",k);};\n   return _elm.Html.Attributes.values = {_op: _op\n                                        ,key: key\n                                        ,style: style\n                                        ,$class: $class\n                                        ,classList: classList\n                                        ,id: id\n                                        ,title: title\n                                        ,hidden: hidden\n                                        ,type$: type$\n                                        ,value: value\n                                        ,checked: checked\n                                        ,placeholder: placeholder\n                                        ,selected: selected\n                                        ,accept: accept\n                                        ,acceptCharset: acceptCharset\n                                        ,action: action\n                                        ,autocomplete: autocomplete\n                                        ,autofocus: autofocus\n                                        ,autosave: autosave\n                                        ,disabled: disabled\n                                        ,enctype: enctype\n                                        ,formaction: formaction\n                                        ,list: list\n                                        ,maxlength: maxlength\n                                        ,minlength: minlength\n                                        ,method: method\n                                        ,multiple: multiple\n                                        ,name: name\n                                        ,novalidate: novalidate\n                                        ,pattern: pattern\n                                        ,readonly: readonly\n                                        ,required: required\n                                        ,size: size\n                                        ,$for: $for\n                                        ,form: form\n                                        ,max: max\n                                        ,min: min\n                                        ,step: step\n                                        ,cols: cols\n                                        ,rows: rows\n                                        ,wrap: wrap\n                                        ,href: href\n                                        ,target: target\n                                        ,download: download\n                                        ,downloadAs: downloadAs\n                                        ,hreflang: hreflang\n                                        ,media: media\n                                        ,ping: ping\n                                        ,rel: rel\n                                        ,ismap: ismap\n                                        ,usemap: usemap\n                                        ,shape: shape\n                                        ,coords: coords\n                                        ,src: src\n                                        ,height: height\n                                        ,width: width\n                                        ,alt: alt\n                                        ,autoplay: autoplay\n                                        ,controls: controls\n                                        ,loop: loop\n                                        ,preload: preload\n                                        ,poster: poster\n                                        ,$default: $default\n                                        ,kind: kind\n                                        ,srclang: srclang\n                                        ,sandbox: sandbox\n                                        ,seamless: seamless\n                                        ,srcdoc: srcdoc\n                                        ,reversed: reversed\n                                        ,start: start\n                                        ,align: align\n                                        ,colspan: colspan\n                                        ,rowspan: rowspan\n                                        ,headers: headers\n                                        ,scope: scope\n                                        ,async: async\n                                        ,charset: charset\n                                        ,content: content\n                                        ,defer: defer\n                                        ,httpEquiv: httpEquiv\n                                        ,language: language\n                                        ,scoped: scoped\n                                        ,accesskey: accesskey\n                                        ,contenteditable: contenteditable\n                                        ,contextmenu: contextmenu\n                                        ,dir: dir\n                                        ,draggable: draggable\n                                        ,dropzone: dropzone\n                                        ,itemprop: itemprop\n                                        ,lang: lang\n                                        ,spellcheck: spellcheck\n                                        ,tabindex: tabindex\n                                        ,challenge: challenge\n                                        ,keytype: keytype\n                                        ,cite: cite\n                                        ,datetime: datetime\n                                        ,pubdate: pubdate\n                                        ,manifest: manifest\n                                        ,property: property\n                                        ,attribute: attribute};\n};\nElm.Html = Elm.Html || {};\nElm.Html.Events = Elm.Html.Events || {};\nElm.Html.Events.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Events = _elm.Html.Events || {};\n   if (_elm.Html.Events.values) return _elm.Html.Events.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var _op = {};\n   var keyCode = A2($Json$Decode._op[\":=\"],\"keyCode\",$Json$Decode.$int);\n   var targetChecked = A2($Json$Decode.at,_U.list([\"target\",\"checked\"]),$Json$Decode.bool);\n   var targetValue = A2($Json$Decode.at,_U.list([\"target\",\"value\"]),$Json$Decode.string);\n   var defaultOptions = $VirtualDom.defaultOptions;\n   var Options = F2(function (a,b) {    return {stopPropagation: a,preventDefault: b};});\n   var onWithOptions = $VirtualDom.onWithOptions;\n   var on = $VirtualDom.on;\n   var messageOn = F3(function (name,addr,msg) {    return A3(on,name,$Json$Decode.value,function (_p0) {    return A2($Signal.message,addr,msg);});});\n   var onClick = messageOn(\"click\");\n   var onDoubleClick = messageOn(\"dblclick\");\n   var onMouseMove = messageOn(\"mousemove\");\n   var onMouseDown = messageOn(\"mousedown\");\n   var onMouseUp = messageOn(\"mouseup\");\n   var onMouseEnter = messageOn(\"mouseenter\");\n   var onMouseLeave = messageOn(\"mouseleave\");\n   var onMouseOver = messageOn(\"mouseover\");\n   var onMouseOut = messageOn(\"mouseout\");\n   var onBlur = messageOn(\"blur\");\n   var onFocus = messageOn(\"focus\");\n   var onSubmit = messageOn(\"submit\");\n   var onKey = F3(function (name,addr,handler) {    return A3(on,name,keyCode,function (code) {    return A2($Signal.message,addr,handler(code));});});\n   var onKeyUp = onKey(\"keyup\");\n   var onKeyDown = onKey(\"keydown\");\n   var onKeyPress = onKey(\"keypress\");\n   return _elm.Html.Events.values = {_op: _op\n                                    ,onBlur: onBlur\n                                    ,onFocus: onFocus\n                                    ,onSubmit: onSubmit\n                                    ,onKeyUp: onKeyUp\n                                    ,onKeyDown: onKeyDown\n                                    ,onKeyPress: onKeyPress\n                                    ,onClick: onClick\n                                    ,onDoubleClick: onDoubleClick\n                                    ,onMouseMove: onMouseMove\n                                    ,onMouseDown: onMouseDown\n                                    ,onMouseUp: onMouseUp\n                                    ,onMouseEnter: onMouseEnter\n                                    ,onMouseLeave: onMouseLeave\n                                    ,onMouseOver: onMouseOver\n                                    ,onMouseOut: onMouseOut\n                                    ,on: on\n                                    ,onWithOptions: onWithOptions\n                                    ,defaultOptions: defaultOptions\n                                    ,targetValue: targetValue\n                                    ,targetChecked: targetChecked\n                                    ,keyCode: keyCode\n                                    ,Options: Options};\n};\nElm.Main = Elm.Main || {};\nElm.Main.make = function (_elm) {\n   \"use strict\";\n   _elm.Main = _elm.Main || {};\n   if (_elm.Main.values) return _elm.Main.values;\n   var _U = Elm.Native.Utils.make(_elm),\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $Debug = Elm.Debug.make(_elm),\n   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Random = Elm.Random.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $Signal$Extra = Elm.Signal.Extra.make(_elm),\n   $Time = Elm.Time.make(_elm),\n   $Window = Elm.Window.make(_elm);\n   var _op = {};\n   var socializeParticle = F2(function (domains,p) {\n      var _p1 = $List.head(A2($List.filter,function (_p0) {    return A2($List.member,p,function (_) {    return _.particles;}(_p0));},domains));\n      if (_p1.ctor === \"Nothing\") {\n            return p;\n         } else {\n            var _p2 = _p1._0;\n            var avgDir = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(_p2.center.d),360)) / $Basics.toFloat($List.length(_p2.particles));\n            return _U.update(p,{d: p.d * 0.2 + avgDir * 0.8});\n         }\n   });\n   var distance2 = F2(function (a,b) {    return Math.pow(a.x - b.x,2) + Math.pow(a.y - b.y,2);});\n   var drawParticle = function (p) {\n      return A2($Graphics$Collage.rotate,\n      $Basics.degrees(p.d),\n      A2($Graphics$Collage.move,{ctor: \"_Tuple2\",_0: p.x,_1: p.y},A2($Graphics$Collage.filled,$Color.lightBlue,A2($Graphics$Collage.ngon,3,10))));\n   };\n   var moveParticle = F2(function (_p3,p) {\n      var _p4 = _p3;\n      var _p6 = _p4._0;\n      var _p5 = _p4._1;\n      var y = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(5 * $Basics.sin($Basics.degrees(p.d)) + p.y) + (_p5 / 2 | 0),_p5) - (_p5 / 2 | 0));\n      var x = $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(5 * $Basics.cos($Basics.degrees(p.d)) + p.x) + (_p6 / 2 | 0),_p6) - (_p6 / 2 | 0));\n      return _U.update(p,{x: x,y: y});\n   });\n   var sizeDomain = 100;\n   var drawDomain = function (d) {\n      return A2($Graphics$Collage.move,\n      {ctor: \"_Tuple2\",_0: d.center.x,_1: d.center.y},\n      A2($Graphics$Collage.outlined,$Graphics$Collage.solid($Color.lightRed),$Graphics$Collage.circle(sizeDomain)));\n   };\n   var fromSimulation = function (s) {\n      var domains = A2($List.map,drawDomain,s.domains);\n      var particles = A2($List.map,drawParticle,s.particles);\n      return {ctor: \"_Tuple3\"\n             ,_0: s.socialMode\n             ,_1: s.debugMode\n             ,_2: $Html.fromElement(A3($Graphics$Collage.collage,s.width,s.height,A2($List.append,particles,domains)))};\n   };\n   var rand = A2($Random.$int,-45,45);\n   var rotateParticle = F2(function (p,_p7) {\n      var _p8 = _p7;\n      var _p9 = A2($Random.generate,rand,_p8._1);\n      var d = _p9._0;\n      var seed = _p9._1;\n      return {ctor: \"_Tuple2\",_0: A2($List._op[\"::\"],_U.update(p,{d: $Basics.toFloat(A2($Basics._op[\"%\"],$Basics.round(p.d) + d,360))}),_p8._0),_1: seed};\n   });\n   var Socialize = {ctor: \"Socialize\"};\n   var Resize = function (a) {    return {ctor: \"Resize\",_0: a};};\n   var ToggleDebug = function (a) {    return {ctor: \"ToggleDebug\",_0: a};};\n   var ToggleSocial = function (a) {    return {ctor: \"ToggleSocial\",_0: a};};\n   var view = F2(function (addr,_p10) {\n      var _p11 = _p10;\n      var _p13 = _p11._0;\n      var _p12 = _p11._1;\n      return A2($Html.div,\n      _U.list([]),\n      _U.list([A2($Html.div,_U.list([$Html$Attributes.$class(\"simulation\")]),_U.list([_p11._2]))\n              ,A2($Html.div,\n              _U.list([$Html$Attributes.classList(_U.list([{ctor: \"_Tuple2\",_0: \"controls\",_1: true},{ctor: \"_Tuple2\",_0: \"activated\",_1: _p13}]))]),\n              _U.list([$Html.text(\"Social: \")\n                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([$Html.text(\"on\")]))\n                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([$Html.text(\"off\")]))\n                      ,A2($Html.input,_U.list([$Html$Attributes.type$(\"button\"),A2($Html$Events.onClick,addr,ToggleSocial($Basics.not(_p13)))]),_U.list([]))]))\n              ,A2($Html.div,\n              _U.list([$Html$Attributes.classList(_U.list([{ctor: \"_Tuple2\",_0: \"controls\",_1: true},{ctor: \"_Tuple2\",_0: \"activated\",_1: _p12}]))]),\n              _U.list([$Html.text(\"Debug: \")\n                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),_U.list([$Html.text(\"on\")]))\n                      ,A2($Html.label,_U.list([A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),_U.list([$Html.text(\"off\")]))\n                      ,A2($Html.input,\n                      _U.list([$Html$Attributes.type$(\"button\"),A2($Html$Events.onClick,addr,ToggleDebug($Basics.not(_p12)))]),\n                      _U.list([]))]))]));\n   });\n   var Rotate = function (a) {    return {ctor: \"Rotate\",_0: a};};\n   var Move = {ctor: \"Move\"};\n   var Domain = F2(function (a,b) {    return {particles: a,center: b};});\n   var Particle = F3(function (a,b,c) {    return {x: a,y: b,d: c};});\n   var addParticle = F2(function (d,p) {\n      return _U.update(d,{particles: A2($List._op[\"::\"],p,d.particles),center: A3(Particle,d.center.x,d.center.y,d.center.d + p.d)});\n   });\n   var updateDomains = F2(function (p,domains) {\n      var belong = A2($List.filter,function (d) {    return _U.cmp(A2(distance2,d.center,p),sizeDomain * sizeDomain) < 1;},domains);\n      return $List.isEmpty(belong) ? A2($List._op[\"::\"],A2(Domain,_U.list([p]),p),domains) : A2($List.map,\n      function (d) {\n         return A2($List.member,d,belong) ? A2(addParticle,d,p) : d;\n      },\n      domains);\n   });\n   var update = F2(function (op,simul) {\n      var _p14 = op;\n      switch (_p14.ctor)\n      {case \"Move\": return _U.update(simul,{particles: A2($List.map,moveParticle({ctor: \"_Tuple2\",_0: simul.width,_1: simul.height}),simul.particles)});\n         case \"Rotate\": return _U.update(simul,\n           {particles: $Basics.fst(A3($List.foldr,rotateParticle,{ctor: \"_Tuple2\",_0: _U.list([]),_1: $Random.initialSeed(_p14._0)},simul.particles))});\n         case \"ToggleSocial\": return _U.update(simul,{socialMode: _p14._0});\n         case \"ToggleDebug\": return _U.update(simul,{debugMode: _p14._0});\n         case \"Resize\": return _U.update(simul,{width: _p14._0});\n         default: if (simul.socialMode) {\n                 var domains = A3($List.foldr,updateDomains,_U.list([]),simul.particles);\n                 var particles = A2($List.map,socializeParticle(domains),simul.particles);\n                 return _U.update(simul,{particles: particles,domains: simul.debugMode ? domains : _U.list([])});\n              } else return _U.update(simul,{domains: _U.list([])});}\n   });\n   var Simulation = F6(function (a,b,c,d,e,f) {    return {particles: a,socialMode: b,debugMode: c,width: d,height: e,domains: f};});\n   var init = A6(Simulation,A2($List.repeat,100,A3(Particle,0,0,0)),false,false,500,500,_U.list([]));\n   var main = function () {\n      var operations = $Signal.mailbox(ToggleSocial(true));\n      var signals = $Signal.mergeMany(_U.list([A2($Signal.map,Resize,$Window.width)\n                                              ,operations.signal\n                                              ,A2($Signal.map,\n                                              function (_p15) {\n                                                 return Rotate($Basics.round($Time.inMilliseconds(_p15)));\n                                              },\n                                              $Time.every(200 * $Time.millisecond))\n                                              ,A2($Signal.map,$Basics.always(Move),$Time.fps(30))\n                                              ,A2($Signal.map,$Basics.always(Socialize),$Time.fps(5))]));\n      var particles = A2($Signal.map,fromSimulation,A3($Signal$Extra.foldp$,update,A2($Basics.flip,update,init),signals));\n      return A2($Signal.map,view(operations.address),particles);\n   }();\n   return _elm.Main.values = {_op: _op\n                             ,Simulation: Simulation\n                             ,Particle: Particle\n                             ,Domain: Domain\n                             ,Move: Move\n                             ,Rotate: Rotate\n                             ,ToggleSocial: ToggleSocial\n                             ,ToggleDebug: ToggleDebug\n                             ,Resize: Resize\n                             ,Socialize: Socialize\n                             ,rand: rand\n                             ,sizeDomain: sizeDomain\n                             ,init: init\n                             ,moveParticle: moveParticle\n                             ,rotateParticle: rotateParticle\n                             ,drawParticle: drawParticle\n                             ,drawDomain: drawDomain\n                             ,updateDomains: updateDomains\n                             ,addParticle: addParticle\n                             ,distance2: distance2\n                             ,socializeParticle: socializeParticle\n                             ,update: update\n                             ,main: main\n                             ,fromSimulation: fromSimulation\n                             ,view: view};\n};\n\nmodule.exports = Elm;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Main.elm\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.html\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __webpack_public_path__ + \"main.css\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.css\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}